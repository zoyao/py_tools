import os
import xml.etree.ElementTree as ET

# dispatch-server
# extension = '.java'
# dir_base = 'D:\\Projects\\src_200404_dispatch_server\\src\\dispatch-server\\src\\main\\java'
# check_base_word = 'getJdbcTemplate('

# schedule-auto
# extension = '.xml'
# dir_base = 'D:\\Projects\\src_201740_schedule_auto\\src\\schedule_auto\\src\\main\\resources\\mybatis'
# check_base_word = None

# eleWayBill
# extension = '.xml'
# dir_base = 'D:\\Projects\\src_200404_elewaybill\\src\\eleWaybill\\src\\main\\resources\\com\\gci\\eleWaybill\\mybatis'
# check_base_word = None

# schedule-task
extension = '.java'
dir_base = 'D:\\Projects\\src_200404_task_schedule\\src\\schedule-task\\src\\main\\java'
check_base_word = ['jdbcTemplate.', 'jdbcTemplateScheduleAuto.', 'jdbcTemplateSqlServer.']

check_words = {}
check_words['apts.'] = '跨数据库查询'
# check_words['service_type'] = '类型转换异常'
# check_words['direction'] = '类型转换异常'
# check_words['plan_type'] = '类型转换异常'
# check_words['station_mark'] = '类型转换异常'
# check_words['run_status'] = '类型转换异常'



# check_words['service_type=1'] = '类型转换异常'
# check_words['service_type=0'] = '类型转换异常'
# check_words['service_type>1'] = '类型转换异常'
# check_words['service_type>0'] = '类型转换异常'
# check_words['direction=1'] = '类型转换异常'
# check_words['direction=0'] = '类型转换异常'
# check_words['direction=2'] = '类型转换异常'
# check_words['direction<>2'] = '类型转换异常'
# check_words['plan_type=1'] = '类型转换异常'
# check_words['plan_type=0'] = '类型转换异常'
# check_words['plan_type=2'] = '类型转换异常'
# check_words['plan_typein(0'] = '类型转换异常'
# check_words['plan_typein(1'] = '类型转换异常'
# check_words['plan_typein(2'] = '类型转换异常'
# check_words['station_mark=0'] = '类型转换异常'
# check_words['station_mark=1'] = '类型转换异常'
# check_words['station_mark=2'] = '类型转换异常'
# check_words['station_mark=3'] = '类型转换异常'
# check_words['station_mark=4'] = '类型转换异常'
# check_words['station_mark=5'] = '类型转换异常'
# check_words['station_markin(0'] = '类型转换异常'
# check_words['station_markin(1'] = '类型转换异常'
# check_words['station_markin(2'] = '类型转换异常'
# check_words['station_markin(3'] = '类型转换异常'
# check_words['station_markin(4'] = '类型转换异常'
# check_words['station_markin(5'] = '类型转换异常'
# check_words['run_status=0'] = '类型转换异常'
# check_words['run_status=1'] = '类型转换异常'
# check_words['run_status=2'] = '类型转换异常'
# check_words['run_status=3'] = '类型转换异常'
# check_words['run_status=4'] = '类型转换异常'


# check_words['date+'] = '时间函数异常'
# check_words['date-'] = '时间函数异常'
# check_words['date*'] = '时间函数异常'
# check_words['date/'] = '时间函数异常'
# check_words['date%'] = '时间函数异常'
# check_words['time+'] = '时间函数异常'
# check_words['time-'] = '时间函数异常'
# check_words['time*'] = '时间函数异常'
# check_words['time/'] = '时间函数异常'
# check_words['time%'] = '时间函数异常'
# check_words[')+'] = '时间函数异常'
# check_words[')-'] = '时间函数异常'
# check_words[')*'] = '时间函数异常'
# check_words[')/'] = '时间函数异常'
# check_words[')%'] = '时间函数异常'
# check_words['?+'] = '时间函数异常'
# check_words['?-'] = '时间函数异常'
# check_words['?*'] = '时间函数异常'
# check_words['?/'] = '时间函数异常'
# check_words['?%'] = '时间函数异常'


# check_words['call'] = 'call调用存储过程'
# check_words['sysdate'] = 'sysdate'
# check_words['trunc'] = 'trunc时间格式化函数'
# check_words['rownum'] = 'rownum'
# check_words['prior'] = '树查询start with connect by prior'
# check_words['to_date'] = 'to_date函数'
# check_words['wm_concat'] = '行转列函数wm_concat'
# check_words['partition'] = 'partition分区查询'
# check_words['nvl'] = '空值判断nvl'
# check_words['instr'] = '字符串查找函数instr'
# check_words['USER_TAB_PARTITIONS'] = '系统表USER_TAB_PARTITIONS'
# check_words['dual'] = 'dual'
# check_words['.nextval'] = 'sequence'
# check_words['merge'] = 'merge数据'
# check_words['decode'] = 'decode条件判断'
# check_words['INSERT ALL'] = 'insert all'
# check_words['NLSSORT'] = 'NLSSORT排序处理'
# check_words['regexp_like'] = 'regexp_like正则匹配'
# check_words['to_number'] = 'to_number'


# check_words['APEX_APPLICATION_GET_PG_TNAME'] = '自定义函数APEX_APPLICATION_GET_PG_TNAME'
# check_words['AQ$_GET_SUBSCRIBERS'] = '自定义函数AQ$_GET_SUBSCRIBERS'
# check_words['ARRHASVALUE'] = '自定义函数ARRHASVALUE'
# check_words['AWM_CREATEXDSFOLDER'] = '自定义函数AWM_CREATEXDSFOLDER'
# check_words['BLASTN_ALIGN'] = '自定义函数BLASTN_ALIGN'
# check_words['BLASTN_COMPRESS'] = '自定义函数BLASTN_COMPRESS'
# check_words['BLASTN_MATCH'] = '自定义函数BLASTN_MATCH'
# check_words['BLASTP_ALIGN'] = '自定义函数BLASTP_ALIGN'
# check_words['BLASTP_MATCH'] = '自定义函数BLASTP_MATCH'
# check_words['CHECK_UPGRADE'] = '自定义函数CHECK_UPGRADE'
# check_words['CLIENT_IP_ADDRESS'] = '自定义函数CLIENT_IP_ADDRESS'
# check_words['COLLECTSTATS'] = '自定义函数COLLECTSTATS'
# check_words['CONCAT_STEPS'] = '自定义函数CONCAT_STEPS'
# check_words['CONTENTSCHEMAIS'] = '自定义函数CONTENTSCHEMAIS'
# check_words['CUBE_TABLE'] = '自定义函数CUBE_TABLE'
# check_words['DATABASE_NAME'] = '自定义函数DATABASE_NAME'
# check_words['DBJ_LONG_NAME'] = '自定义函数DBJ_LONG_NAME'
# check_words['DBJ_SHORT_NAME'] = '自定义函数DBJ_SHORT_NAME'
# check_words['DECRYPT'] = '自定义函数DECRYPT'
# check_words['DECRYPTBYTES'] = '自定义函数DECRYPTBYTES'
# check_words['DES_ENCRYPTED_PASSWORD'] = '自定义函数DES_ENCRYPTED_PASSWORD'
# check_words['DICTIONARY_OBJ_NAME'] = '自定义函数DICTIONARY_OBJ_NAME'
# check_words['DICTIONARY_OBJ_NAME_LIST'] = '自定义函数DICTIONARY_OBJ_NAME_LIST'
# check_words['DICTIONARY_OBJ_OWNER'] = '自定义函数DICTIONARY_OBJ_OWNER'
# check_words['DICTIONARY_OBJ_OWNER_LIST'] = '自定义函数DICTIONARY_OBJ_OWNER_LIST'
# check_words['DICTIONARY_OBJ_TYPE'] = '自定义函数DICTIONARY_OBJ_TYPE'
# check_words['DM_CL_APPLY'] = '自定义函数DM_CL_APPLY'
# check_words['DM_CL_BUILD'] = '自定义函数DM_CL_BUILD'
# check_words['DM_GLM_BUILD'] = '自定义函数DM_GLM_BUILD'
# check_words['DM_MOD_BUILD'] = '自定义函数DM_MOD_BUILD'
# check_words['DM_NMF_BUILD'] = '自定义函数DM_NMF_BUILD'
# check_words['DM_SVM_APPLY'] = '自定义函数DM_SVM_APPLY'
# check_words['DM_SVM_BUILD'] = '自定义函数DM_SVM_BUILD'
# check_words['DRI_SUBLXV_LANG'] = '自定义函数DRI_SUBLXV_LANG'
# check_words['DRI_VERSION'] = '自定义函数DRI_VERSION'
# check_words['ELOCATION_EDGE_LINK_LEVEL'] = '自定义函数ELOCATION_EDGE_LINK_LEVEL'
# check_words['EMDSYSTEM'] = '自定义函数EMDSYSTEM'
# check_words['EMXCELLSTRINGAGGCOLLECT'] = '自定义函数EMXCELLSTRINGAGGCOLLECT'
# check_words['ENCRYPT'] = '自定义函数ENCRYPT'
# check_words['ENCRYPTBYTES'] = '自定义函数ENCRYPTBYTES'
# check_words['ENCRYPT_DES'] = '自定义函数ENCRYPT_DES'
# check_words['ESCAPE_SC'] = '自定义函数ESCAPE_SC'
# check_words['EVALUATE_CA'] = '自定义函数EVALUATE_CA'
# check_words['EVALUATE_CV'] = '自定义函数EVALUATE_CV'
# check_words['EVALUATE_VA'] = '自定义函数EVALUATE_VA'
# check_words['EVALUATE_VV'] = '自定义函数EVALUATE_VV'
# check_words['EXF$CURRUSER'] = '自定义函数EXF$CURRUSER'
# check_words['EXF$EXPISVALID'] = '自定义函数EXF$EXPISVALID'
# check_words['EXF$TEXT2EXPRID'] = '自定义函数EXF$TEXT2EXPRID'
# check_words['FUNC_DISTANCE'] = '自定义函数FUNC_DISTANCE'
# check_words['FUNC_DISTANCE'] = '自定义函数FUNC_DISTANCE'
# check_words['FUNC_FORMATE_TIME'] = '自定义函数FUNC_FORMATE_TIME'
# check_words['FUNC_FORMATE_TIME1'] = '自定义函数FUNC_FORMATE_TIME1'
# check_words['FUNC_GIS_GPSBUS'] = '自定义函数FUNC_GIS_GPSBUS'
# check_words['FUNC_GIS_GPSBUS20150505'] = '自定义函数FUNC_GIS_GPSBUS20150505'
# check_words['FUNC_JSON_GET_TEXT'] = '自定义函数FUNC_JSON_GET_TEXT'
# check_words['FUNC_SPLITSTR'] = '自定义函数FUNC_SPLITSTR'
# check_words['FUNC_TRIP_CODE'] = '自定义函数FUNC_TRIP_CODE'
# check_words['FUN_TRANS_LON'] = '自定义函数FUN_TRANS_LON'
# check_words['F_CAST_CHINESE_TO_NUM'] = '自定义函数F_CAST_CHINESE_TO_NUM'
# check_words['F_CAST_NUM_TO_CHINESE'] = '自定义函数F_CAST_NUM_TO_CHINESE'
# check_words['F_EGISAREABUS'] = '自定义函数F_EGISAREABUS'
# check_words['F_GPSGET_STATIONNAME'] = '自定义函数F_GPSGET_STATIONNAME'
# check_words['F_GPS_ANGLE'] = '自定义函数F_GPS_ANGLE'
# check_words['F_GPS_DIRECTION'] = '自定义函数F_GPS_DIRECTION'
# check_words['F_GPS_DIRECTIONA'] = '自定义函数F_GPS_DIRECTIONA'
# check_words['F_GPS_DIRECTIONE'] = '自定义函数F_GPS_DIRECTIONE'
# check_words['F_GPS_DIRECTIONS'] = '自定义函数F_GPS_DIRECTIONS'
# check_words['F_GPS_GET_STAION'] = '自定义函数F_GPS_GET_STAION'
# check_words['F_GPS_GET_STAION_NAME'] = '自定义函数F_GPS_GET_STAION_NAME'
# check_words['F_GPS_POINTID'] = '自定义函数F_GPS_POINTID'
# check_words['F_GPS_POINTID2'] = '自定义函数F_GPS_POINTID2'
# check_words['F_GPS_POINTID3'] = '自定义函数F_GPS_POINTID3'
# check_words['F_GPS_POINTID4'] = '自定义函数F_GPS_POINTID4'
# check_words['F_ORDER_CHINESE_TO_ARABIC'] = '自定义函数F_ORDER_CHINESE_TO_ARABIC'
# check_words['F_POINT_LINE'] = '自定义函数F_POINT_LINE'
# check_words['F_ROUTESUB_MILE_ROUTEID'] = '自定义函数F_ROUTESUB_MILE_ROUTEID'
# check_words['F_ROUTESUB_MILE_ROUTESUB_ID'] = '自定义函数F_ROUTESUB_MILE_ROUTESUB_ID'
# check_words['F_TO_SORTNUM'] = '自定义函数F_TO_SORTNUM'
# check_words['F_TRIP_MILEAGE'] = '自定义函数F_TRIP_MILEAGE'
# check_words['F_TRIP_MILEAGE1'] = '自定义函数F_TRIP_MILEAGE1'
# check_words['GEOHASH_BASE32'] = '自定义函数GEOHASH_BASE32'
# check_words['GEOHASH_BASE32_INDEX'] = '自定义函数GEOHASH_BASE32_INDEX'
# check_words['GEOHASH_BIT'] = '自定义函数GEOHASH_BIT'
# check_words['GEOHASH_ENCODE'] = '自定义函数GEOHASH_ENCODE'
# check_words['GETDISTANCE'] = '自定义函数GETDISTANCE'
# check_words['GETEMKEY'] = '自定义函数GETEMKEY'
# check_words['GETTAGSARRAY'] = '自定义函数GETTAGSARRAY'
# check_words['GETTVOID'] = '自定义函数GETTVOID'
# check_words['GETXMLSCHEMADEPENDENCYLIST'] = '自定义函数GETXMLSCHEMADEPENDENCYLIST'
# check_words['GET_MAX_CHECKPOINT'] = '自定义函数GET_MAX_CHECKPOINT'
# check_words['GET_OLDVERSION_HASHCODE'] = '自定义函数GET_OLDVERSION_HASHCODE'
# check_words['GET_OLDVERSION_HASHCODE2'] = '自定义函数GET_OLDVERSION_HASHCODE2'
# check_words['GET_STATS_EXTENSION'] = '自定义函数GET_STATS_EXTENSION'
# check_words['GET_TABLE_NAME'] = '自定义函数GET_TABLE_NAME'
# check_words['GET_UUID'] = '自定义函数GET_UUID'
# check_words['GET_XDB_TABLESPACE'] = '自定义函数GET_XDB_TABLESPACE'
# check_words['GRANTEE'] = '自定义函数GRANTEE'
# check_words['HAEN_TXFM_TEXT'] = '自定义函数HAEN_TXFM_TEXT'
# check_words['HHAND'] = '自定义函数HHAND'
# check_words['HHBYTELEN'] = '自定义函数HHBYTELEN'
# check_words['HHCBIT'] = '自定义函数HHCBIT'
# check_words['HHCELLBNDRY'] = '自定义函数HHCELLBNDRY'
# check_words['HHCELLSIZE'] = '自定义函数HHCELLSIZE'
# check_words['HHCLDATE'] = '自定义函数HHCLDATE'
# check_words['HHCOLLAPSE'] = '自定义函数HHCOLLAPSE'
# check_words['HHCOMMONCODE'] = '自定义函数HHCOMMONCODE'
# check_words['HHCOMPARE'] = '自定义函数HHCOMPARE'
# check_words['HHCOMPOSE'] = '自定义函数HHCOMPOSE'
# check_words['HHDECODE'] = '自定义函数HHDECODE'
# check_words['HHDISTANCE'] = '自定义函数HHDISTANCE'
# check_words['HHENCODE'] = '自定义函数HHENCODE'
# check_words['HHENCODE_BYLEVEL'] = '自定义函数HHENCODE_BYLEVEL'
# check_words['HHGBIT'] = '自定义函数HHGBIT'
# check_words['HHGETCID'] = '自定义函数HHGETCID'
# check_words['HHGROUP'] = '自定义函数HHGROUP'
# check_words['HHGTBIT'] = '自定义函数HHGTBIT'
# check_words['HHGTYPE'] = '自定义函数HHGTYPE'
# check_words['HHIDLPART'] = '自定义函数HHIDLPART'
# check_words['HHIDPART'] = '自定义函数HHIDPART'
# check_words['HHINCRLEV'] = '自定义函数HHINCRLEV'
# check_words['HHJLDATE'] = '自定义函数HHJLDATE'
# check_words['HHLENGTH'] = '自定义函数HHLENGTH'
# check_words['HHLEVELS'] = '自定义函数HHLEVELS'
# check_words['HHMATCH'] = '自定义函数HHMATCH'
# check_words['HHMAXCODE'] = '自定义函数HHMAXCODE'
# check_words['HHNCOMPARE'] = '自定义函数HHNCOMPARE'
# check_words['HHNDIM'] = '自定义函数HHNDIM'
# check_words['HHOR'] = '自定义函数HHOR'
# check_words['HHORDER'] = '自定义函数HHORDER'
# check_words['HHPRECISION'] = '自定义函数HHPRECISION'
# check_words['HHSBIT'] = '自定义函数HHSBIT'
# check_words['HHSETCID'] = '自定义函数HHSETCID'
# check_words['HHSTBIT'] = '自定义函数HHSTBIT'
# check_words['HHSTYPE'] = '自定义函数HHSTYPE'
# check_words['HHSUBDIVIDE'] = '自定义函数HHSUBDIVIDE'
# check_words['HHSUBSTR'] = '自定义函数HHSUBSTR'
# check_words['HHXOR'] = '自定义函数HHXOR'
# check_words['HS$_DDTF_SQLCOLUMNS'] = '自定义函数HS$_DDTF_SQLCOLUMNS'
# check_words['HS$_DDTF_SQLFOREIGNKEYS'] = '自定义函数HS$_DDTF_SQLFOREIGNKEYS'
# check_words['HS$_DDTF_SQLPRIMARYKEYS'] = '自定义函数HS$_DDTF_SQLPRIMARYKEYS'
# check_words['HS$_DDTF_SQLPROCEDURES'] = '自定义函数HS$_DDTF_SQLPROCEDURES'
# check_words['HS$_DDTF_SQLSTATISTICS'] = '自定义函数HS$_DDTF_SQLSTATISTICS'
# check_words['HS$_DDTF_SQLTABFORKEYS'] = '自定义函数HS$_DDTF_SQLTABFORKEYS'
# check_words['HS$_DDTF_SQLTABLES'] = '自定义函数HS$_DDTF_SQLTABLES'
# check_words['HS$_DDTF_SQLTABPRIKEYS'] = '自定义函数HS$_DDTF_SQLTABPRIKEYS'
# check_words['HS$_DDTF_SQLTABSTATS'] = '自定义函数HS$_DDTF_SQLTABSTATS'
# check_words['INSERTPREDTAB'] = '自定义函数INSERTPREDTAB'
# check_words['INSTANCE_NUM'] = '自定义函数INSTANCE_NUM'
# check_words['INTERACTIONEXECUTE'] = '自定义函数INTERACTIONEXECUTE'
# check_words['ISXMLTYPETABLE'] = '自定义函数ISXMLTYPETABLE'
# check_words['IS_ALTER_COLUMN'] = '自定义函数IS_ALTER_COLUMN'
# check_words['IS_CREATING_NESTED_TABLE'] = '自定义函数IS_CREATING_NESTED_TABLE'
# check_words['IS_DROP_COLUMN'] = '自定义函数IS_DROP_COLUMN'
# check_words['IS_NUMBER'] = '自定义函数IS_NUMBER'
# check_words['IS_SERVERERROR'] = '自定义函数IS_SERVERERROR'
# check_words['IS_VPD_ENABLED'] = '自定义函数IS_VPD_ENABLED'
# check_words['LOGIN_USER'] = '自定义函数LOGIN_USER'
# check_words['LOGMNR$ALWSUPLOG_TABF_PUBLIC'] = '自定义函数LOGMNR$ALWSUPLOG_TABF_PUBLIC'
# check_words['LOGMNR$COL_GG_TABF_PUBLIC'] = '自定义函数LOGMNR$COL_GG_TABF_PUBLIC'
# check_words['LOGMNR$KEY_GG_TABF_PUBLIC'] = '自定义函数LOGMNR$KEY_GG_TABF_PUBLIC'
# check_words['LOGMNR$SEQ_GG_TABF_PUBLIC'] = '自定义函数LOGMNR$SEQ_GG_TABF_PUBLIC'
# check_words['LOGMNR$TAB_GG_TABF_PUBLIC'] = '自定义函数LOGMNR$TAB_GG_TABF_PUBLIC'
# check_words['LOGMNR_GET_GT_PROTOCOL'] = '自定义函数LOGMNR_GET_GT_PROTOCOL'
# check_words['LOGSTDBY$TABF'] = '自定义函数LOGSTDBY$TABF'
# check_words['LOGSTDBY$UTABF'] = '自定义函数LOGSTDBY$UTABF'
# check_words['MVAGGRAWBITOR'] = '自定义函数MVAGGRAWBITOR'
# check_words['MY_TEST'] = '自定义函数MY_TEST'
# check_words['NUMBER_SPLIT'] = '自定义函数NUMBER_SPLIT'
# check_words['NV'] = '自定义函数NV'
# check_words['NameFromLastDDL'] = '自定义函数NameFromLastDDL'
# check_words['OGC_AREA'] = '自定义函数OGC_AREA'
# check_words['OGC_ASBINARY'] = '自定义函数OGC_ASBINARY'
# check_words['OGC_ASTEXT'] = '自定义函数OGC_ASTEXT'
# check_words['OGC_BOUNDARY'] = '自定义函数OGC_BOUNDARY'
# check_words['OGC_BUFFER'] = '自定义函数OGC_BUFFER'
# check_words['OGC_CENTROID'] = '自定义函数OGC_CENTROID'
# check_words['OGC_CONTAINS'] = '自定义函数OGC_CONTAINS'
# check_words['OGC_CONVEXHULL'] = '自定义函数OGC_CONVEXHULL'
# check_words['OGC_CROSS'] = '自定义函数OGC_CROSS'
# check_words['OGC_DIFFERENCE'] = '自定义函数OGC_DIFFERENCE'
# check_words['OGC_DIMENSION'] = '自定义函数OGC_DIMENSION'
# check_words['OGC_DISJOINT'] = '自定义函数OGC_DISJOINT'
# check_words['OGC_DISTANCE'] = '自定义函数OGC_DISTANCE'
# check_words['OGC_ENDPOINT'] = '自定义函数OGC_ENDPOINT'
# check_words['OGC_ENVELOPE'] = '自定义函数OGC_ENVELOPE'
# check_words['OGC_EQUALS'] = '自定义函数OGC_EQUALS'
# check_words['OGC_EXTERIORRING'] = '自定义函数OGC_EXTERIORRING'
# check_words['OGC_GEOMETRYN'] = '自定义函数OGC_GEOMETRYN'
# check_words['OGC_GEOMETRYTYPE'] = '自定义函数OGC_GEOMETRYTYPE'
# check_words['OGC_INTERIORRINGN'] = '自定义函数OGC_INTERIORRINGN'
# check_words['OGC_INTERSECTION'] = '自定义函数OGC_INTERSECTION'
# check_words['OGC_INTERSECTS'] = '自定义函数OGC_INTERSECTS'
# check_words['OGC_ISCLOSED'] = '自定义函数OGC_ISCLOSED'
# check_words['OGC_ISEMPTY'] = '自定义函数OGC_ISEMPTY'
# check_words['OGC_ISRING'] = '自定义函数OGC_ISRING'
# check_words['OGC_ISSIMPLE'] = '自定义函数OGC_ISSIMPLE'
# check_words['OGC_LENGTH'] = '自定义函数OGC_LENGTH'
# check_words['OGC_LINESTRINGFROMTEXT'] = '自定义函数OGC_LINESTRINGFROMTEXT'
# check_words['OGC_LINESTRINGFROMWKB'] = '自定义函数OGC_LINESTRINGFROMWKB'
# check_words['OGC_MULTILINESTRINGFROMTEXT'] = '自定义函数OGC_MULTILINESTRINGFROMTEXT'
# check_words['OGC_MULTILINESTRINGFROMWKB'] = '自定义函数OGC_MULTILINESTRINGFROMWKB'
# check_words['OGC_MULTIPOLYGONFROMTEXT'] = '自定义函数OGC_MULTIPOLYGONFROMTEXT'
# check_words['OGC_MULTIPOLYGONFROMWKB'] = '自定义函数OGC_MULTIPOLYGONFROMWKB'
# check_words['OGC_NUMGEOMETRIES'] = '自定义函数OGC_NUMGEOMETRIES'
# check_words['OGC_NUMINTERIORRINGS'] = '自定义函数OGC_NUMINTERIORRINGS'
# check_words['OGC_NUMPOINTS'] = '自定义函数OGC_NUMPOINTS'
# check_words['OGC_OVERLAP'] = '自定义函数OGC_OVERLAP'
# check_words['OGC_POINTFROMTEXT'] = '自定义函数OGC_POINTFROMTEXT'
# check_words['OGC_POINTFROMWKB'] = '自定义函数OGC_POINTFROMWKB'
# check_words['OGC_POINTN'] = '自定义函数OGC_POINTN'
# check_words['OGC_POINTONSURFACE'] = '自定义函数OGC_POINTONSURFACE'
# check_words['OGC_POLYGONFROMTEXT'] = '自定义函数OGC_POLYGONFROMTEXT'
# check_words['OGC_POLYGONFROMWKB'] = '自定义函数OGC_POLYGONFROMWKB'
# check_words['OGC_RELATE'] = '自定义函数OGC_RELATE'
# check_words['OGC_SRID'] = '自定义函数OGC_SRID'
# check_words['OGC_STARTPOINT'] = '自定义函数OGC_STARTPOINT'
# check_words['OGC_SYMMETRICDIFFERENCE'] = '自定义函数OGC_SYMMETRICDIFFERENCE'
# check_words['OGC_TOUCH'] = '自定义函数OGC_TOUCH'
# check_words['OGC_UNION'] = '自定义函数OGC_UNION'
# check_words['OGC_WITHIN'] = '自定义函数OGC_WITHIN'
# check_words['OGC_X'] = '自定义函数OGC_X'
# check_words['OGC_Y'] = '自定义函数OGC_Y'
# check_words['OLAPIBOOTSTRAP2'] = '自定义函数OLAPIBOOTSTRAP2'
# check_words['OLAPRC_TABLE'] = '自定义函数OLAPRC_TABLE'
# check_words['OLAP_BOOL_SRF'] = '自定义函数OLAP_BOOL_SRF'
# check_words['OLAP_CONDITION'] = '自定义函数OLAP_CONDITION'
# check_words['OLAP_DATE_SRF'] = '自定义函数OLAP_DATE_SRF'
# check_words['OLAP_NUMBER_SRF'] = '自定义函数OLAP_NUMBER_SRF'
# check_words['OLAP_TABLE'] = '自定义函数OLAP_TABLE'
# check_words['OLAP_TEXT_SRF'] = '自定义函数OLAP_TEXT_SRF'
# check_words['OLM_TTS_REMOVE_CONSTANTS'] = '自定义函数OLM_TTS_REMOVE_CONSTANTS'
# check_words['ORA_FI_DECISION_TREE_HORIZ'] = '自定义函数ORA_FI_DECISION_TREE_HORIZ'
# check_words['ORA_FI_SUPERVISED_BINNING'] = '自定义函数ORA_FI_SUPERVISED_BINNING'
# check_words['ORA_SI_MKSTILLIMAGE'] = '自定义函数ORA_SI_MKSTILLIMAGE'
# check_words['OWNER_MIGRATE_UPDATE_HASHCODE'] = '自定义函数OWNER_MIGRATE_UPDATE_HASHCODE'
# check_words['PARSEPARAMS'] = '自定义函数PARSEPARAMS'
# check_words['PARTITION_POS'] = '自定义函数PARTITION_POS'
# check_words['POPULATEPREDTAB'] = '自定义函数POPULATEPREDTAB'
# check_words['PRIVILEGE_LIST'] = '自定义函数PRIVILEGE_LIST'
# check_words['QRY2OPT'] = '自定义函数QRY2OPT'
# check_words['RAD'] = '自定义函数RAD'
# check_words['REMOVE_RAME_STRING'] = '自定义函数REMOVE_RAME_STRING'
# check_words['REVOKEE'] = '自定义函数REVOKEE'
# check_words['RLM$EQLCHK'] = '自定义函数RLM$EQLCHK'
# check_words['RLM$EQLLSRNONEG'] = '自定义函数RLM$EQLLSRNONEG'
# check_words['RLM$OPTIMEQCLS'] = '自定义函数RLM$OPTIMEQCLS'
# check_words['RLM$PARSEOBYCLS'] = '自定义函数RLM$PARSEOBYCLS'
# check_words['RLM$SEQCHK'] = '自定义函数RLM$SEQCHK'
# check_words['RLM$UNIQUETAG'] = '自定义函数RLM$UNIQUETAG'
# check_words['RLM$WLNCHK'] = '自定义函数RLM$WLNCHK'
# check_words['RTREEJOINFUNC'] = '自定义函数RTREEJOINFUNC'
# check_words['SCHEDULER$_BATCHERR_PIPE'] = '自定义函数SCHEDULER$_BATCHERR_PIPE'
# check_words['SCN_TO_TIMESTAMP'] = '自定义函数SCN_TO_TIMESTAMP'
# check_words['SDO_AGGR_CENTROID'] = '自定义函数SDO_AGGR_CENTROID'
# check_words['SDO_AGGR_CONCAT_LINES'] = '自定义函数SDO_AGGR_CONCAT_LINES'
# check_words['SDO_AGGR_CONVEXHULL'] = '自定义函数SDO_AGGR_CONVEXHULL'
# check_words['SDO_AGGR_LRS_CONCAT'] = '自定义函数SDO_AGGR_LRS_CONCAT'
# check_words['SDO_AGGR_LRS_CONCAT_3D'] = '自定义函数SDO_AGGR_LRS_CONCAT_3D'
# check_words['SDO_AGGR_MBR'] = '自定义函数SDO_AGGR_MBR'
# check_words['SDO_AGGR_SET_UNION'] = '自定义函数SDO_AGGR_SET_UNION'
# check_words['SDO_AGGR_UNION'] = '自定义函数SDO_AGGR_UNION'
# check_words['SDO_CONSTRUCT_DIM_ARRAY'] = '自定义函数SDO_CONSTRUCT_DIM_ARRAY'
# check_words['SDO_JOIN'] = '自定义函数SDO_JOIN'
# check_words['SDO_PQRY'] = '自定义函数SDO_PQRY'
# check_words['SDO_SIMPLE_FILTER'] = '自定义函数SDO_SIMPLE_FILTER'
# check_words['SDO_VERSION'] = '自定义函数SDO_VERSION'
# check_words['SEC_TO_TIME'] = '自定义函数SEC_TO_TIME'
# check_words['SELECT_GPSLOC'] = '自定义函数SELECT_GPSLOC'
# check_words['SERVER_ERROR'] = '自定义函数SERVER_ERROR'
# check_words['SERVER_ERROR_DEPTH'] = '自定义函数SERVER_ERROR_DEPTH'
# check_words['SERVER_ERROR_MSG'] = '自定义函数SERVER_ERROR_MSG'
# check_words['SERVER_ERROR_NUM_PARAMS'] = '自定义函数SERVER_ERROR_NUM_PARAMS'
# check_words['SERVER_ERROR_PARAM'] = '自定义函数SERVER_ERROR_PARAM'
# check_words['SI_ARRAYCLRHSTGR'] = '自定义函数SI_ARRAYCLRHSTGR'
# check_words['SI_FINDAVGCLR'] = '自定义函数SI_FINDAVGCLR'
# check_words['SI_FINDCLRHSTGR'] = '自定义函数SI_FINDCLRHSTGR'
# check_words['SI_FINDPSTNLCLR'] = '自定义函数SI_FINDPSTNLCLR'
# check_words['SI_FINDTEXTURE'] = '自定义函数SI_FINDTEXTURE'
# check_words['SI_GETAVGCLRFTR'] = '自定义函数SI_GETAVGCLRFTR'
# check_words['SI_GETAVGCLRFTRW'] = '自定义函数SI_GETAVGCLRFTRW'
# check_words['SI_GETCLRHSTGRFTR'] = '自定义函数SI_GETCLRHSTGRFTR'
# check_words['SI_GETCLRHSTGRFTRW'] = '自定义函数SI_GETCLRHSTGRFTRW'
# check_words['SI_GETCONTENT'] = '自定义函数SI_GETCONTENT'
# check_words['SI_GETCONTENTLNGTH'] = '自定义函数SI_GETCONTENTLNGTH'
# check_words['SI_GETFORMAT'] = '自定义函数SI_GETFORMAT'
# check_words['SI_GETHEIGHT'] = '自定义函数SI_GETHEIGHT'
# check_words['SI_GETPSTNLCLRFTR'] = '自定义函数SI_GETPSTNLCLRFTR'
# check_words['SI_GETPSTNLCLRFTRW'] = '自定义函数SI_GETPSTNLCLRFTRW'
# check_words['SI_GETSIZEDTHMBNL'] = '自定义函数SI_GETSIZEDTHMBNL'
# check_words['SI_GETTEXTUREFTR'] = '自定义函数SI_GETTEXTUREFTR'
# check_words['SI_GETTEXTUREFTRW'] = '自定义函数SI_GETTEXTUREFTRW'
# check_words['SI_GETTHMBNL'] = '自定义函数SI_GETTHMBNL'
# check_words['SI_GETWIDTH'] = '自定义函数SI_GETWIDTH'
# check_words['SI_MKAVGCLR'] = '自定义函数SI_MKAVGCLR'
# check_words['SI_MKCLRHSTGR'] = '自定义函数SI_MKCLRHSTGR'
# check_words['SI_MKFTRLIST'] = '自定义函数SI_MKFTRLIST'
# check_words['SI_MKRGBCLR'] = '自定义函数SI_MKRGBCLR'
# check_words['SI_MKSTILLIMAGE1'] = '自定义函数SI_MKSTILLIMAGE1'
# check_words['SI_MKSTILLIMAGE2'] = '自定义函数SI_MKSTILLIMAGE2'
# check_words['SI_SCOREBYAVGCLR'] = '自定义函数SI_SCOREBYAVGCLR'
# check_words['SI_SCOREBYCLRHSTGR'] = '自定义函数SI_SCOREBYCLRHSTGR'
# check_words['SI_SCOREBYFTRLIST'] = '自定义函数SI_SCOREBYFTRLIST'
# check_words['SI_SCOREBYPSTNLCLR'] = '自定义函数SI_SCOREBYPSTNLCLR'
# check_words['SI_SCOREBYTEXTURE'] = '自定义函数SI_SCOREBYTEXTURE'
# check_words['SPACE_ERROR_INFO'] = '自定义函数SPACE_ERROR_INFO'
# check_words['SPCLUSTERS'] = '自定义函数SPCLUSTERS'
# check_words['SPLIT'] = '自定义函数SPLIT'
# check_words['SQL_TXT'] = '自定义函数SQL_TXT'
# check_words['SQUIRREL_GET_ERROR_OFFSET'] = '自定义函数SQUIRREL_GET_ERROR_OFFSET'
# check_words['STR2NUMTBL'] = '自定义函数STR2NUMTBL'
# check_words['STR2TBL'] = '自定义函数STR2TBL'
# check_words['STRAGG'] = '自定义函数STRAGG'
# check_words['STRING_SPLIT'] = '自定义函数STRING_SPLIT'
# check_words['SYS$RAWTOANY'] = '自定义函数SYS$RAWTOANY'
# check_words['SYSEVENT'] = '自定义函数SYSEVENT'
# check_words['SYS_IXMLAGG'] = '自定义函数SYS_IXMLAGG'
# check_words['SYS_IXQAGG'] = '自定义函数SYS_IXQAGG'
# check_words['SYS_IXQAGGAVG'] = '自定义函数SYS_IXQAGGAVG'
# check_words['SYS_IXQAGGSUM'] = '自定义函数SYS_IXQAGGSUM'
# check_words['SYS_NT_COLLECT'] = '自定义函数SYS_NT_COLLECT'
# check_words['SYS_XMLAGG'] = '自定义函数SYS_XMLAGG'
# check_words['TBLAST_ALIGN'] = '自定义函数TBLAST_ALIGN'
# check_words['TBLAST_MATCH'] = '自定义函数TBLAST_MATCH'
# check_words['TGT_SYSDATE_WGUID'] = '自定义函数TGT_SYSDATE_WGUID'
# check_words['TGT_SYSDATE_WTZ'] = '自定义函数TGT_SYSDATE_WTZ'
# check_words['TIMESTAMP_TO_SCN'] = '自定义函数TIMESTAMP_TO_SCN'
# check_words['TRANSFORM_LHS'] = '自定义函数TRANSFORM_LHS'
# check_words['UNDER_PATH_FUNC'] = '自定义函数UNDER_PATH_FUNC'
# check_words['USER_XML_PARTITIONED_TABLE_OK'] = '自定义函数USER_XML_PARTITIONED_TABLE_OK'
# check_words['V02C'] = '自定义函数V02C'
# check_words['V12C'] = '自定义函数V12C'
# check_words['V22C'] = '自定义函数V22C'
# check_words['V32C'] = '自定义函数V32C'
# check_words['VARRAY2STR'] = '自定义函数VARRAY2STR'
# check_words['VERSION'] = '自定义函数VERSION'
# check_words['VRN'] = '自定义函数VRN'
# check_words['V_LISTBACKUPPIPE'] = '自定义函数V_LISTBACKUPPIPE'
# check_words['WITH_GRANT_OPTION'] = '自定义函数WITH_GRANT_OPTION'
# check_words['WM$CONVERTDBVERSION'] = '自定义函数WM$CONVERTDBVERSION'
# check_words['WM$DISALLOWQNDML'] = '自定义函数WM$DISALLOWQNDML'
# check_words['WM$GETDBVERSIONSTR'] = '自定义函数WM$GETDBVERSIONSTR'
# check_words['WM_CONCAT'] = '自定义函数WM_CONCAT'
# check_words['WWV_FLOWS_RELEASE'] = '自定义函数WWV_FLOWS_RELEASE'
# check_words['WWV_FLOWS_VERSION'] = '自定义函数WWV_FLOWS_VERSION'
# check_words['WWV_FLOW_EPG_INCLUDE_MOD_LOCAL'] = '自定义函数WWV_FLOW_EPG_INCLUDE_MOD_LOCAL'
# check_words['WWV_FLOW_HOT_HTTP_LINKS'] = '自定义函数WWV_FLOW_HOT_HTTP_LINKS'
# check_words['WWV_FLOW_ITEM_COMPS'] = '自定义函数WWV_FLOW_ITEM_COMPS'
# check_words['WWV_FLOW_LOV_USED_ON_PAGES'] = '自定义函数WWV_FLOW_LOV_USED_ON_PAGES'
# check_words['WWV_POPUP_FILTER'] = '自定义函数WWV_POPUP_FILTER'
# check_words['XDB$EXTNAME2INTNAME'] = '自定义函数XDB$EXTNAME2INTNAME'
# check_words['XMLINDEXINSFUNC'] = '自定义函数XMLINDEXINSFUNC'
# check_words['XMLINDEXLOADFUNC'] = '自定义函数XMLINDEXLOADFUNC'
# check_words['XMLSEQUENCEFROMREFCURSOR'] = '自定义函数XMLSEQUENCEFROMREFCURSOR'
# check_words['XMLSEQUENCEFROMREFCURSOR2'] = '自定义函数XMLSEQUENCEFROMREFCURSOR2'
# check_words['XMLSEQUENCEFROMXMLTYPE'] = '自定义函数XMLSEQUENCEFROMXMLTYPE'
# check_words['XQSEQUENCEFROMXMLTYPE'] = '自定义函数XQSEQUENCEFROMXMLTYPE'
# check_words['XQWINDOWSEQUENCEFROMXMLTYPE'] = '自定义函数XQWINDOWSEQUENCEFROMXMLTYPE'
# check_words['ADM_EXPFIL_SYSTRIG'] = '自定义函数ADM_EXPFIL_SYSTRIG'
# check_words['ADM_RLMGR_SYSTRIG'] = '自定义函数ADM_RLMGR_SYSTRIG'
# check_words['APEXWS'] = '自定义函数APEXWS'
# check_words['APEX_MIG_PROJECTS_UPDATE'] = '自定义函数APEX_MIG_PROJECTS_UPDATE'
# check_words['APEX_UI_DEFAULT_UPDATE'] = '自定义函数APEX_UI_DEFAULT_UPDATE'
# check_words['ARU_PLATFORM_UTIL'] = '自定义函数ARU_PLATFORM_UTIL'
# check_words['BSLN'] = '自定义函数BSLN'
# check_words['BSLN_INTERNAL'] = '自定义函数BSLN_INTERNAL'
# check_words['CARTRIDGE'] = '自定义函数CARTRIDGE'
# check_words['CHRONOS_REPOSITORY_COLLECTIONS'] = '自定义函数CHRONOS_REPOSITORY_COLLECTIONS'
# check_words['CONFIG_UTIL'] = '自定义函数CONFIG_UTIL'
# check_words['CPF_POLICY'] = '自定义函数CPF_POLICY'
# check_words['CTX_ADM'] = '自定义函数CTX_ADM'
# check_words['CTX_CLS'] = '自定义函数CTX_CLS'
# check_words['CTX_DDL'] = '自定义函数CTX_DDL'
# check_words['CTX_DOC'] = '自定义函数CTX_DOC'
# check_words['CTX_ENTITY'] = '自定义函数CTX_ENTITY'
# check_words['CTX_OUTPUT'] = '自定义函数CTX_OUTPUT'
# check_words['CTX_QUERY'] = '自定义函数CTX_QUERY'
# check_words['CTX_REPORT'] = '自定义函数CTX_REPORT'
# check_words['CTX_THES'] = '自定义函数CTX_THES'
# check_words['CTX_TREE'] = '自定义函数CTX_TREE'
# check_words['CWM$CLASSIFY'] = '自定义函数CWM$CLASSIFY'
# check_words['CWM$EXPORT'] = '自定义函数CWM$EXPORT'
# check_words['CWM$OLAP$CUBE'] = '自定义函数CWM$OLAP$CUBE'
# check_words['CWM$OLAP$DIM$ATTRIBUTE'] = '自定义函数CWM$OLAP$DIM$ATTRIBUTE'
# check_words['CWM$OLAP$DIMENSION'] = '自定义函数CWM$OLAP$DIMENSION'
# check_words['CWM$OLAP$HIERARCHY'] = '自定义函数CWM$OLAP$HIERARCHY'
# check_words['CWM$OLAP$LEVEL'] = '自定义函数CWM$OLAP$LEVEL'
# check_words['CWM$OLAP$LEVEL$ATTRIBUTE'] = '自定义函数CWM$OLAP$LEVEL$ATTRIBUTE'
# check_words['CWM$OLAP$MEASURE'] = '自定义函数CWM$OLAP$MEASURE'
# check_words['CWM$UTIL'] = '自定义函数CWM$UTIL'
# check_words['CWM$UTILITY'] = '自定义函数CWM$UTILITY'
# check_words['CWM1_OLAP_VALIDATE_METADATA'] = '自定义函数CWM1_OLAP_VALIDATE_METADATA'
# check_words['CWM2$SECURITY'] = '自定义函数CWM2$SECURITY'
# check_words['CWM2_OLAP_AW_AWUTIL'] = '自定义函数CWM2_OLAP_AW_AWUTIL'
# check_words['CWM2_OLAP_CATALOG'] = '自定义函数CWM2_OLAP_CATALOG'
# check_words['CWM2_OLAP_CLASSIFY'] = '自定义函数CWM2_OLAP_CLASSIFY'
# check_words['CWM2_OLAP_CUBE'] = '自定义函数CWM2_OLAP_CUBE'
# check_words['CWM2_OLAP_DELETE'] = '自定义函数CWM2_OLAP_DELETE'
# check_words['CWM2_OLAP_DIMENSION'] = '自定义函数CWM2_OLAP_DIMENSION'
# check_words['CWM2_OLAP_DIMENSION_ATTRIBUTE'] = '自定义函数CWM2_OLAP_DIMENSION_ATTRIBUTE'
# check_words['CWM2_OLAP_EXPORT'] = '自定义函数CWM2_OLAP_EXPORT'
# check_words['CWM2_OLAP_HIERARCHY'] = '自定义函数CWM2_OLAP_HIERARCHY'
# check_words['CWM2_OLAP_INSTALLER'] = '自定义函数CWM2_OLAP_INSTALLER'
# check_words['CWM2_OLAP_LEVEL'] = '自定义函数CWM2_OLAP_LEVEL'
# check_words['CWM2_OLAP_LEVEL_ATTRIBUTE'] = '自定义函数CWM2_OLAP_LEVEL_ATTRIBUTE'
# check_words['CWM2_OLAP_MANAGER'] = '自定义函数CWM2_OLAP_MANAGER'
# check_words['CWM2_OLAP_MEASURE'] = '自定义函数CWM2_OLAP_MEASURE'
# check_words['CWM2_OLAP_METADATA_REFRESH'] = '自定义函数CWM2_OLAP_METADATA_REFRESH'
# check_words['CWM2_OLAP_MR_CHECK_PRIVS'] = '自定义函数CWM2_OLAP_MR_CHECK_PRIVS'
# check_words['CWM2_OLAP_MR_SECURITY_INIT'] = '自定义函数CWM2_OLAP_MR_SECURITY_INIT'
# check_words['CWM2_OLAP_MR_SESSION_POP'] = '自定义函数CWM2_OLAP_MR_SESSION_POP'
# check_words['CWM2_OLAP_OLAPAPI_ENABLE'] = '自定义函数CWM2_OLAP_OLAPAPI_ENABLE'
# check_words['CWM2_OLAP_PC_TRANSFORM'] = '自定义函数CWM2_OLAP_PC_TRANSFORM'
# check_words['CWM2_OLAP_TABLE_MAP'] = '自定义函数CWM2_OLAP_TABLE_MAP'
# check_words['CWM2_OLAP_UTILITY'] = '自定义函数CWM2_OLAP_UTILITY'
# check_words['CWM2_OLAP_VALIDATE'] = '自定义函数CWM2_OLAP_VALIDATE'
# check_words['CWM2_OLAP_VALIDATE_METADATA'] = '自定义函数CWM2_OLAP_VALIDATE_METADATA'
# check_words['CWM2_OLAP_VALIDATE_UTILITY'] = '自定义函数CWM2_OLAP_VALIDATE_UTILITY'
# check_words['CWM2_OLAP_VERIFY_ACCESS'] = '自定义函数CWM2_OLAP_VERIFY_ACCESS'
# check_words['C_PAKG_BASE'] = '自定义函数C_PAKG_BASE'
# check_words['C_PAKG_UPGRADE'] = '自定义函数C_PAKG_UPGRADE'
# check_words['C_PKG_TRIPLOG_BAK'] = '自定义函数C_PKG_TRIPLOG_BAK'
# check_words['DB2XML'] = '自定义函数DB2XML'
# check_words['DBMSHSXP'] = '自定义函数DBMSHSXP'
# check_words['DBMSOBJG'] = '自定义函数DBMSOBJG'
# check_words['DBMSOBJG2'] = '自定义函数DBMSOBJG2'
# check_words['DBMSOBJGWRAPPER'] = '自定义函数DBMSOBJGWRAPPER'
# check_words['DBMSOBJG_DP'] = '自定义函数DBMSOBJG_DP'
# check_words['DBMSZEXP_SYSPKGGRNT'] = '自定义函数DBMSZEXP_SYSPKGGRNT'
# check_words['DBMS_ADDM'] = '自定义函数DBMS_ADDM'
# check_words['DBMS_ADR'] = '自定义函数DBMS_ADR'
# check_words['DBMS_ADVANCED_REWRITE'] = '自定义函数DBMS_ADVANCED_REWRITE'
# check_words['DBMS_ADVISOR'] = '自定义函数DBMS_ADVISOR'
# check_words['DBMS_ALERT'] = '自定义函数DBMS_ALERT'
# check_words['DBMS_AMD'] = '自定义函数DBMS_AMD'
# check_words['DBMS_APBACKEND'] = '自定义函数DBMS_APBACKEND'
# check_words['DBMS_APPCTX'] = '自定义函数DBMS_APPCTX'
# check_words['DBMS_APPLICATION_INFO'] = '自定义函数DBMS_APPLICATION_INFO'
# check_words['DBMS_APPLY_ADM'] = '自定义函数DBMS_APPLY_ADM'
# check_words['DBMS_APPLY_ADM_INTERNAL'] = '自定义函数DBMS_APPLY_ADM_INTERNAL'
# check_words['DBMS_APPLY_ERROR'] = '自定义函数DBMS_APPLY_ERROR'
# check_words['DBMS_APPLY_HANDLER_ADM'] = '自定义函数DBMS_APPLY_HANDLER_ADM'
# check_words['DBMS_APPLY_HANDLER_INTERNAL'] = '自定义函数DBMS_APPLY_HANDLER_INTERNAL'
# check_words['DBMS_APPLY_POSITION'] = '自定义函数DBMS_APPLY_POSITION'
# check_words['DBMS_APPLY_PROCESS'] = '自定义函数DBMS_APPLY_PROCESS'
# check_words['DBMS_APP_CONT_PRVT'] = '自定义函数DBMS_APP_CONT_PRVT'
# check_words['DBMS_AQ'] = '自定义函数DBMS_AQ'
# check_words['DBMS_AQADM'] = '自定义函数DBMS_AQADM'
# check_words['DBMS_AQADM_INV'] = '自定义函数DBMS_AQADM_INV'
# check_words['DBMS_AQADM_SYS'] = '自定义函数DBMS_AQADM_SYS'
# check_words['DBMS_AQADM_SYSCALLS'] = '自定义函数DBMS_AQADM_SYSCALLS'
# check_words['DBMS_AQELM'] = '自定义函数DBMS_AQELM'
# check_words['DBMS_AQIN'] = '自定义函数DBMS_AQIN'
# check_words['DBMS_AQJMS'] = '自定义函数DBMS_AQJMS'
# check_words['DBMS_AQJMS_INTERNAL'] = '自定义函数DBMS_AQJMS_INTERNAL'
# check_words['DBMS_AQ_BQVIEW'] = '自定义函数DBMS_AQ_BQVIEW'
# check_words['DBMS_AQ_EXP_CMT_TIME_TABLES'] = '自定义函数DBMS_AQ_EXP_CMT_TIME_TABLES'
# check_words['DBMS_AQ_EXP_DEQUEUELOG_TABLES'] = '自定义函数DBMS_AQ_EXP_DEQUEUELOG_TABLES'
# check_words['DBMS_AQ_EXP_HISTORY_TABLES'] = '自定义函数DBMS_AQ_EXP_HISTORY_TABLES'
# check_words['DBMS_AQ_EXP_INDEX_TABLES'] = '自定义函数DBMS_AQ_EXP_INDEX_TABLES'
# check_words['DBMS_AQ_EXP_QUEUES'] = '自定义函数DBMS_AQ_EXP_QUEUES'
# check_words['DBMS_AQ_EXP_QUEUE_TABLES'] = '自定义函数DBMS_AQ_EXP_QUEUE_TABLES'
# check_words['DBMS_AQ_EXP_SIGNATURE_TABLES'] = '自定义函数DBMS_AQ_EXP_SIGNATURE_TABLES'
# check_words['DBMS_AQ_EXP_SUBSCRIBER_TABLES'] = '自定义函数DBMS_AQ_EXP_SUBSCRIBER_TABLES'
# check_words['DBMS_AQ_EXP_TIMEMGR_TABLES'] = '自定义函数DBMS_AQ_EXP_TIMEMGR_TABLES'
# check_words['DBMS_AQ_EXP_ZECURITY'] = '自定义函数DBMS_AQ_EXP_ZECURITY'
# check_words['DBMS_AQ_IMPORT_INTERNAL'] = '自定义函数DBMS_AQ_IMPORT_INTERNAL'
# check_words['DBMS_AQ_IMP_INTERNAL'] = '自定义函数DBMS_AQ_IMP_INTERNAL'
# check_words['DBMS_AQ_IMP_ZECURITY'] = '自定义函数DBMS_AQ_IMP_ZECURITY'
# check_words['DBMS_AQ_INV'] = '自定义函数DBMS_AQ_INV'
# check_words['DBMS_AQ_SYS_EXP_ACTIONS'] = '自定义函数DBMS_AQ_SYS_EXP_ACTIONS'
# check_words['DBMS_AQ_SYS_EXP_INTERNAL'] = '自定义函数DBMS_AQ_SYS_EXP_INTERNAL'
# check_words['DBMS_AQ_SYS_IMP_INTERNAL'] = '自定义函数DBMS_AQ_SYS_IMP_INTERNAL'
# check_words['DBMS_ARCH_PROVIDER_INTL'] = '自定义函数DBMS_ARCH_PROVIDER_INTL'
# check_words['DBMS_ASH_INTERNAL'] = '自定义函数DBMS_ASH_INTERNAL'
# check_words['DBMS_ASSERT'] = '自定义函数DBMS_ASSERT'
# check_words['DBMS_ASYNCRPC_PUSH'] = '自定义函数DBMS_ASYNCRPC_PUSH'
# check_words['DBMS_AUDIT_MGMT'] = '自定义函数DBMS_AUDIT_MGMT'
# check_words['DBMS_AUTOTASK_PRVT'] = '自定义函数DBMS_AUTOTASK_PRVT'
# check_words['DBMS_AUTO_SQLTUNE'] = '自定义函数DBMS_AUTO_SQLTUNE'
# check_words['DBMS_AUTO_TASK'] = '自定义函数DBMS_AUTO_TASK'
# check_words['DBMS_AUTO_TASK_ADMIN'] = '自定义函数DBMS_AUTO_TASK_ADMIN'
# check_words['DBMS_AUTO_TASK_EXPORT'] = '自定义函数DBMS_AUTO_TASK_EXPORT'
# check_words['DBMS_AUTO_TASK_IMMEDIATE'] = '自定义函数DBMS_AUTO_TASK_IMMEDIATE'
# check_words['DBMS_AW'] = '自定义函数DBMS_AW'
# check_words['DBMS_AWM'] = '自定义函数DBMS_AWM'
# check_words['DBMS_AWM_PRV'] = '自定义函数DBMS_AWM_PRV'
# check_words['DBMS_AWR_REPORT_LAYOUT'] = '自定义函数DBMS_AWR_REPORT_LAYOUT'
# check_words['DBMS_AW_EXP'] = '自定义函数DBMS_AW_EXP'
# check_words['DBMS_AW_STATS'] = '自定义函数DBMS_AW_STATS'
# check_words['DBMS_AW_XML'] = '自定义函数DBMS_AW_XML'
# check_words['DBMS_BACKUP_RESTORE'] = '自定义函数DBMS_BACKUP_RESTORE'
# check_words['DBMS_CACHEUTIL'] = '自定义函数DBMS_CACHEUTIL'
# check_words['DBMS_CAPTURE_ADM'] = '自定义函数DBMS_CAPTURE_ADM'
# check_words['DBMS_CAPTURE_ADM_INTERNAL'] = '自定义函数DBMS_CAPTURE_ADM_INTERNAL'
# check_words['DBMS_CAPTURE_PROCESS'] = '自定义函数DBMS_CAPTURE_PROCESS'
# check_words['DBMS_CAPTURE_SWITCH_ADM'] = '自定义函数DBMS_CAPTURE_SWITCH_ADM'
# check_words['DBMS_CAPTURE_SWITCH_INTERNAL'] = '自定义函数DBMS_CAPTURE_SWITCH_INTERNAL'
# check_words['DBMS_CDC_DPUTIL'] = '自定义函数DBMS_CDC_DPUTIL'
# check_words['DBMS_CDC_EXPDP'] = '自定义函数DBMS_CDC_EXPDP'
# check_words['DBMS_CDC_EXPVDP'] = '自定义函数DBMS_CDC_EXPVDP'
# check_words['DBMS_CDC_IMPDP'] = '自定义函数DBMS_CDC_IMPDP'
# check_words['DBMS_CDC_IMPDPV'] = '自定义函数DBMS_CDC_IMPDPV'
# check_words['DBMS_CDC_IPUBLISH'] = '自定义函数DBMS_CDC_IPUBLISH'
# check_words['DBMS_CDC_ISUBSCRIBE'] = '自定义函数DBMS_CDC_ISUBSCRIBE'
# check_words['DBMS_CDC_PUBLISH'] = '自定义函数DBMS_CDC_PUBLISH'
# check_words['DBMS_CDC_SUBSCRIBE'] = '自定义函数DBMS_CDC_SUBSCRIBE'
# check_words['DBMS_CDC_SYS_IPUBLISH'] = '自定义函数DBMS_CDC_SYS_IPUBLISH'
# check_words['DBMS_CDC_UTILITY'] = '自定义函数DBMS_CDC_UTILITY'
# check_words['DBMS_CHANGE_NOTIFICATION'] = '自定义函数DBMS_CHANGE_NOTIFICATION'
# check_words['DBMS_CLIENT_RESULT_CACHE'] = '自定义函数DBMS_CLIENT_RESULT_CACHE'
# check_words['DBMS_CLUSTDB'] = '自定义函数DBMS_CLUSTDB'
# check_words['DBMS_CMP_INT'] = '自定义函数DBMS_CMP_INT'
# check_words['DBMS_COMPARISON'] = '自定义函数DBMS_COMPARISON'
# check_words['DBMS_COMPRESSION'] = '自定义函数DBMS_COMPRESSION'
# check_words['DBMS_CONNECTION_POOL'] = '自定义函数DBMS_CONNECTION_POOL'
# check_words['DBMS_CRYPTO'] = '自定义函数DBMS_CRYPTO'
# check_words['DBMS_CRYPTO_FFI'] = '自定义函数DBMS_CRYPTO_FFI'
# check_words['DBMS_CRYPTO_TOOLKIT'] = '自定义函数DBMS_CRYPTO_TOOLKIT'
# check_words['DBMS_CRYPTO_TOOLKIT_FFI'] = '自定义函数DBMS_CRYPTO_TOOLKIT_FFI'
# check_words['DBMS_CSX_ADMIN'] = '自定义函数DBMS_CSX_ADMIN'
# check_words['DBMS_CSX_INT'] = '自定义函数DBMS_CSX_INT'
# check_words['DBMS_CUBE'] = '自定义函数DBMS_CUBE'
# check_words['DBMS_CUBE_ADVISE'] = '自定义函数DBMS_CUBE_ADVISE'
# check_words['DBMS_CUBE_ADVISE_SEC'] = '自定义函数DBMS_CUBE_ADVISE_SEC'
# check_words['DBMS_CUBE_EXP'] = '自定义函数DBMS_CUBE_EXP'
# check_words['DBMS_CUBE_LOG'] = '自定义函数DBMS_CUBE_LOG'
# check_words['DBMS_CUBE_UTIL'] = '自定义函数DBMS_CUBE_UTIL'
# check_words['DBMS_DATAPUMP'] = '自定义函数DBMS_DATAPUMP'
# check_words['DBMS_DATAPUMP_UTL'] = '自定义函数DBMS_DATAPUMP_UTL'
# check_words['DBMS_DATA_MINING'] = '自定义函数DBMS_DATA_MINING'
# check_words['DBMS_DATA_MINING_INTERNAL'] = '自定义函数DBMS_DATA_MINING_INTERNAL'
# check_words['DBMS_DATA_MINING_TRANSFORM'] = '自定义函数DBMS_DATA_MINING_TRANSFORM'
# check_words['DBMS_DBFS_CONTENT'] = '自定义函数DBMS_DBFS_CONTENT'
# check_words['DBMS_DBFS_CONTENT_ADMIN'] = '自定义函数DBMS_DBFS_CONTENT_ADMIN'
# check_words['DBMS_DBFS_HS'] = '自定义函数DBMS_DBFS_HS'
# check_words['DBMS_DBFS_SFS'] = '自定义函数DBMS_DBFS_SFS'
# check_words['DBMS_DBFS_SFS_ADMIN'] = '自定义函数DBMS_DBFS_SFS_ADMIN'
# check_words['DBMS_DBLINK'] = '自定义函数DBMS_DBLINK'
# check_words['DBMS_DBVERIFY'] = '自定义函数DBMS_DBVERIFY'
# check_words['DBMS_DDL'] = '自定义函数DBMS_DDL'
# check_words['DBMS_DDL_INTERNAL'] = '自定义函数DBMS_DDL_INTERNAL'
# check_words['DBMS_DEBUG'] = '自定义函数DBMS_DEBUG'
# check_words['DBMS_DEBUG_JDWP'] = '自定义函数DBMS_DEBUG_JDWP'
# check_words['DBMS_DEBUG_JDWP_CUSTOM'] = '自定义函数DBMS_DEBUG_JDWP_CUSTOM'
# check_words['DBMS_DEFER'] = '自定义函数DBMS_DEFER'
# check_words['DBMS_DEFERGEN'] = '自定义函数DBMS_DEFERGEN'
# check_words['DBMS_DEFERGEN_AUDIT'] = '自定义函数DBMS_DEFERGEN_AUDIT'
# check_words['DBMS_DEFERGEN_INTERNAL'] = '自定义函数DBMS_DEFERGEN_INTERNAL'
# check_words['DBMS_DEFERGEN_LOB'] = '自定义函数DBMS_DEFERGEN_LOB'
# check_words['DBMS_DEFERGEN_PRIORITY'] = '自定义函数DBMS_DEFERGEN_PRIORITY'
# check_words['DBMS_DEFERGEN_RESOLUTION'] = '自定义函数DBMS_DEFERGEN_RESOLUTION'
# check_words['DBMS_DEFERGEN_UTIL'] = '自定义函数DBMS_DEFERGEN_UTIL'
# check_words['DBMS_DEFERGEN_WRAP'] = '自定义函数DBMS_DEFERGEN_WRAP'
# check_words['DBMS_DEFER_ENQ_UTL'] = '自定义函数DBMS_DEFER_ENQ_UTL'
# check_words['DBMS_DEFER_IMPORT_INTERNAL'] = '自定义函数DBMS_DEFER_IMPORT_INTERNAL'
# check_words['DBMS_DEFER_INTERNAL_QUERY'] = '自定义函数DBMS_DEFER_INTERNAL_QUERY'
# check_words['DBMS_DEFER_INTERNAL_SYS'] = '自定义函数DBMS_DEFER_INTERNAL_SYS'
# check_words['DBMS_DEFER_QUERY'] = '自定义函数DBMS_DEFER_QUERY'
# check_words['DBMS_DEFER_QUERY_UTL'] = '自定义函数DBMS_DEFER_QUERY_UTL'
# check_words['DBMS_DEFER_REPCAT'] = '自定义函数DBMS_DEFER_REPCAT'
# check_words['DBMS_DEFER_SYS'] = '自定义函数DBMS_DEFER_SYS'
# check_words['DBMS_DEFER_SYS_PART1'] = '自定义函数DBMS_DEFER_SYS_PART1'
# check_words['DBMS_DESCRIBE'] = '自定义函数DBMS_DESCRIBE'
# check_words['DBMS_DG'] = '自定义函数DBMS_DG'
# check_words['DBMS_DIMENSION'] = '自定义函数DBMS_DIMENSION'
# check_words['DBMS_DISTRIBUTED_TRUST_ADMIN'] = '自定义函数DBMS_DISTRIBUTED_TRUST_ADMIN'
# check_words['DBMS_DM_EXP_INTERNAL'] = '自定义函数DBMS_DM_EXP_INTERNAL'
# check_words['DBMS_DM_IMP_INTERNAL'] = '自定义函数DBMS_DM_IMP_INTERNAL'
# check_words['DBMS_DM_MODEL_EXP'] = '自定义函数DBMS_DM_MODEL_EXP'
# check_words['DBMS_DM_MODEL_IMP'] = '自定义函数DBMS_DM_MODEL_IMP'
# check_words['DBMS_DM_UTIL'] = '自定义函数DBMS_DM_UTIL'
# check_words['DBMS_DM_UTIL_INTERNAL'] = '自定义函数DBMS_DM_UTIL_INTERNAL'
# check_words['DBMS_DNFS'] = '自定义函数DBMS_DNFS'
# check_words['DBMS_DRS'] = '自定义函数DBMS_DRS'
# check_words['DBMS_DST'] = '自定义函数DBMS_DST'
# check_words['DBMS_EDITIONS_UTILITIES'] = '自定义函数DBMS_EDITIONS_UTILITIES'
# check_words['DBMS_EPG'] = '自定义函数DBMS_EPG'
# check_words['DBMS_ERRLOG'] = '自定义函数DBMS_ERRLOG'
# check_words['DBMS_EXPFIL'] = '自定义函数DBMS_EXPFIL'
# check_words['DBMS_EXPFIL_DEPASEXP'] = '自定义函数DBMS_EXPFIL_DEPASEXP'
# check_words['DBMS_EXPFIL_DR'] = '自定义函数DBMS_EXPFIL_DR'
# check_words['DBMS_EXPFIL_EXP'] = '自定义函数DBMS_EXPFIL_EXP'
# check_words['DBMS_EXPFIL_IR'] = '自定义函数DBMS_EXPFIL_IR'
# check_words['DBMS_EXPFIL_UTL'] = '自定义函数DBMS_EXPFIL_UTL'
# check_words['DBMS_EXPORT_EXTENSION'] = '自定义函数DBMS_EXPORT_EXTENSION'
# check_words['DBMS_EXTENDED_TTS_CHECKS'] = '自定义函数DBMS_EXTENDED_TTS_CHECKS'
# check_words['DBMS_FBT'] = '自定义函数DBMS_FBT'
# check_words['DBMS_FEATURE_USAGE'] = '自定义函数DBMS_FEATURE_USAGE'
# check_words['DBMS_FEATURE_USAGE_INTERNAL'] = '自定义函数DBMS_FEATURE_USAGE_INTERNAL'
# check_words['DBMS_FEATURE_USAGE_REPORT'] = '自定义函数DBMS_FEATURE_USAGE_REPORT'
# check_words['DBMS_FGA'] = '自定义函数DBMS_FGA'
# check_words['DBMS_FILE_GROUP'] = '自定义函数DBMS_FILE_GROUP'
# check_words['DBMS_FILE_GROUP_EXP'] = '自定义函数DBMS_FILE_GROUP_EXP'
# check_words['DBMS_FILE_GROUP_EXP_INTERNAL'] = '自定义函数DBMS_FILE_GROUP_EXP_INTERNAL'
# check_words['DBMS_FILE_GROUP_IMP'] = '自定义函数DBMS_FILE_GROUP_IMP'
# check_words['DBMS_FILE_GROUP_IMP_INTERNAL'] = '自定义函数DBMS_FILE_GROUP_IMP_INTERNAL'
# check_words['DBMS_FILE_GROUP_INTERNAL_INVOK'] = '自定义函数DBMS_FILE_GROUP_INTERNAL_INVOK'
# check_words['DBMS_FILE_GROUP_UTL'] = '自定义函数DBMS_FILE_GROUP_UTL'
# check_words['DBMS_FILE_GROUP_UTL_INVOK'] = '自定义函数DBMS_FILE_GROUP_UTL_INVOK'
# check_words['DBMS_FILE_TRANSFER'] = '自定义函数DBMS_FILE_TRANSFER'
# check_words['DBMS_FLASHBACK'] = '自定义函数DBMS_FLASHBACK'
# check_words['DBMS_FLASHBACK_ARCHIVE'] = '自定义函数DBMS_FLASHBACK_ARCHIVE'
# check_words['DBMS_FREQUENT_ITEMSET'] = '自定义函数DBMS_FREQUENT_ITEMSET'
# check_words['DBMS_FUSE'] = '自定义函数DBMS_FUSE'
# check_words['DBMS_GOLDENGATE_AUTH'] = '自定义函数DBMS_GOLDENGATE_AUTH'
# check_words['DBMS_HA_ALERTS'] = '自定义函数DBMS_HA_ALERTS'
# check_words['DBMS_HA_ALERTS_PRVT'] = '自定义函数DBMS_HA_ALERTS_PRVT'
# check_words['DBMS_HM'] = '自定义函数DBMS_HM'
# check_words['DBMS_HPROF'] = '自定义函数DBMS_HPROF'
# check_words['DBMS_HS'] = '自定义函数DBMS_HS'
# check_words['DBMS_HS_ALT'] = '自定义函数DBMS_HS_ALT'
# check_words['DBMS_HS_CHK'] = '自定义函数DBMS_HS_CHK'
# check_words['DBMS_HS_PARALLEL'] = '自定义函数DBMS_HS_PARALLEL'
# check_words['DBMS_HS_PARALLEL_METADATA'] = '自定义函数DBMS_HS_PARALLEL_METADATA'
# check_words['DBMS_HS_UTL'] = '自定义函数DBMS_HS_UTL'
# check_words['DBMS_IJOB'] = '自定义函数DBMS_IJOB'
# check_words['DBMS_INDEX_UTL'] = '自定义函数DBMS_INDEX_UTL'
# check_words['DBMS_INTERNAL_LOGSTDBY'] = '自定义函数DBMS_INTERNAL_LOGSTDBY'
# check_words['DBMS_INTERNAL_REPCAT'] = '自定义函数DBMS_INTERNAL_REPCAT'
# check_words['DBMS_INTERNAL_SAFE_SCN'] = '自定义函数DBMS_INTERNAL_SAFE_SCN'
# check_words['DBMS_INTERNAL_TRIGGER'] = '自定义函数DBMS_INTERNAL_TRIGGER'
# check_words['DBMS_IR'] = '自定义函数DBMS_IR'
# check_words['DBMS_IREFRESH'] = '自定义函数DBMS_IREFRESH'
# check_words['DBMS_ISCHED'] = '自定义函数DBMS_ISCHED'
# check_words['DBMS_ISCHED_CHAIN_CONDITION'] = '自定义函数DBMS_ISCHED_CHAIN_CONDITION'
# check_words['DBMS_ISCHED_REMDB_JOB'] = '自定义函数DBMS_ISCHED_REMDB_JOB'
# check_words['DBMS_ISNAPSHOT'] = '自定义函数DBMS_ISNAPSHOT'
# check_words['DBMS_ITRIGGER_UTL'] = '自定义函数DBMS_ITRIGGER_UTL'
# check_words['DBMS_I_INDEX_UTL'] = '自定义函数DBMS_I_INDEX_UTL'
# check_words['DBMS_JAVA'] = '自定义函数DBMS_JAVA'
# check_words['DBMS_JAVA_DEFINERS'] = '自定义函数DBMS_JAVA_DEFINERS'
# check_words['DBMS_JAVA_DUMP'] = '自定义函数DBMS_JAVA_DUMP'
# check_words['DBMS_JAVA_TEST'] = '自定义函数DBMS_JAVA_TEST'
# check_words['DBMS_JDM_INTERNAL'] = '自定义函数DBMS_JDM_INTERNAL'
# check_words['DBMS_JMS_PLSQL'] = '自定义函数DBMS_JMS_PLSQL'
# check_words['DBMS_JOB'] = '自定义函数DBMS_JOB'
# check_words['DBMS_JVM_EXP_PERMS'] = '自定义函数DBMS_JVM_EXP_PERMS'
# check_words['DBMS_LDAP'] = '自定义函数DBMS_LDAP'
# check_words['DBMS_LDAP_API_FFI'] = '自定义函数DBMS_LDAP_API_FFI'
# check_words['DBMS_LDAP_UTL'] = '自定义函数DBMS_LDAP_UTL'
# check_words['DBMS_LOB'] = '自定义函数DBMS_LOB'
# check_words['DBMS_LOBUTIL'] = '自定义函数DBMS_LOBUTIL'
# check_words['DBMS_LOB_AM_PRIVATE'] = '自定义函数DBMS_LOB_AM_PRIVATE'
# check_words['DBMS_LOCK'] = '自定义函数DBMS_LOCK'
# check_words['DBMS_LOG'] = '自定义函数DBMS_LOG'
# check_words['DBMS_LOGMNR'] = '自定义函数DBMS_LOGMNR'
# check_words['DBMS_LOGMNR_D'] = '自定义函数DBMS_LOGMNR_D'
# check_words['DBMS_LOGMNR_INTERNAL'] = '自定义函数DBMS_LOGMNR_INTERNAL'
# check_words['DBMS_LOGMNR_LOGREP_DICT'] = '自定义函数DBMS_LOGMNR_LOGREP_DICT'
# check_words['DBMS_LOGMNR_SESSION'] = '自定义函数DBMS_LOGMNR_SESSION'
# check_words['DBMS_LOGREP_DEF_PROC_UTL'] = '自定义函数DBMS_LOGREP_DEF_PROC_UTL'
# check_words['DBMS_LOGREP_EXP'] = '自定义函数DBMS_LOGREP_EXP'
# check_words['DBMS_LOGREP_IMP'] = '自定义函数DBMS_LOGREP_IMP'
# check_words['DBMS_LOGREP_IMP_INTERNAL'] = '自定义函数DBMS_LOGREP_IMP_INTERNAL'
# check_words['DBMS_LOGREP_UTIL'] = '自定义函数DBMS_LOGREP_UTIL'
# check_words['DBMS_LOGREP_UTIL_INVOK'] = '自定义函数DBMS_LOGREP_UTIL_INVOK'
# check_words['DBMS_LOGSTDBY'] = '自定义函数DBMS_LOGSTDBY'
# check_words['DBMS_MAINT_GEN'] = '自定义函数DBMS_MAINT_GEN'
# check_words['DBMS_MANAGEMENT_PACKS'] = '自定义函数DBMS_MANAGEMENT_PACKS'
# check_words['DBMS_METADATA'] = '自定义函数DBMS_METADATA'
# check_words['DBMS_METADATA_BUILD'] = '自定义函数DBMS_METADATA_BUILD'
# check_words['DBMS_METADATA_DIFF'] = '自定义函数DBMS_METADATA_DIFF'
# check_words['DBMS_METADATA_DPBUILD'] = '自定义函数DBMS_METADATA_DPBUILD'
# check_words['DBMS_METADATA_INT'] = '自定义函数DBMS_METADATA_INT'
# check_words['DBMS_METADATA_UTIL'] = '自定义函数DBMS_METADATA_UTIL'
# check_words['DBMS_MONITOR'] = '自定义函数DBMS_MONITOR'
# check_words['DBMS_NETWORK_ACL_ADMIN'] = '自定义函数DBMS_NETWORK_ACL_ADMIN'
# check_words['DBMS_NETWORK_ACL_UTILITY'] = '自定义函数DBMS_NETWORK_ACL_UTILITY'
# check_words['DBMS_OBFUSCATION_TOOLKIT'] = '自定义函数DBMS_OBFUSCATION_TOOLKIT'
# check_words['DBMS_OBFUSCATION_TOOLKIT_FFI'] = '自定义函数DBMS_OBFUSCATION_TOOLKIT_FFI'
# check_words['DBMS_OBJECTS_UTILS'] = '自定义函数DBMS_OBJECTS_UTILS'
# check_words['DBMS_ODCI'] = '自定义函数DBMS_ODCI'
# check_words['DBMS_ODM'] = '自定义函数DBMS_ODM'
# check_words['DBMS_OFFLINE_INTERNAL'] = '自定义函数DBMS_OFFLINE_INTERNAL'
# check_words['DBMS_OFFLINE_OG'] = '自定义函数DBMS_OFFLINE_OG'
# check_words['DBMS_OFFLINE_RGT'] = '自定义函数DBMS_OFFLINE_RGT'
# check_words['DBMS_OFFLINE_SNAPSHOT'] = '自定义函数DBMS_OFFLINE_SNAPSHOT'
# check_words['DBMS_OFFLINE_UTL'] = '自定义函数DBMS_OFFLINE_UTL'
# check_words['DBMS_OUTPUT'] = '自定义函数DBMS_OUTPUT'
# check_words['DBMS_OWB'] = '自定义函数DBMS_OWB'
# check_words['DBMS_PARALLEL_EXECUTE'] = '自定义函数DBMS_PARALLEL_EXECUTE'
# check_words['DBMS_PARALLEL_EXECUTE_INTERNAL'] = '自定义函数DBMS_PARALLEL_EXECUTE_INTERNAL'
# check_words['DBMS_PCLXUTIL'] = '自定义函数DBMS_PCLXUTIL'
# check_words['DBMS_PICKLER'] = '自定义函数DBMS_PICKLER'
# check_words['DBMS_PIPE'] = '自定义函数DBMS_PIPE'
# check_words['DBMS_PITR'] = '自定义函数DBMS_PITR'
# check_words['DBMS_PLUGTS'] = '自定义函数DBMS_PLUGTS'
# check_words['DBMS_PLUGTSP'] = '自定义函数DBMS_PLUGTSP'
# check_words['DBMS_PREDICTIVE_ANALYTICS'] = '自定义函数DBMS_PREDICTIVE_ANALYTICS'
# check_words['DBMS_PREPROCESSOR'] = '自定义函数DBMS_PREPROCESSOR'
# check_words['DBMS_PROFILER'] = '自定义函数DBMS_PROFILER'
# check_words['DBMS_PROPAGATION_ADM'] = '自定义函数DBMS_PROPAGATION_ADM'
# check_words['DBMS_PROPAGATION_INTERNAL'] = '自定义函数DBMS_PROPAGATION_INTERNAL'
# check_words['DBMS_PRVTAQIM'] = '自定义函数DBMS_PRVTAQIM'
# check_words['DBMS_PRVTAQIP'] = '自定义函数DBMS_PRVTAQIP'
# check_words['DBMS_PRVTAQIS'] = '自定义函数DBMS_PRVTAQIS'
# check_words['DBMS_PRVTRMIE'] = '自定义函数DBMS_PRVTRMIE'
# check_words['DBMS_PRVT_TRACE'] = '自定义函数DBMS_PRVT_TRACE'
# check_words['DBMS_PSP'] = '自定义函数DBMS_PSP'
# check_words['DBMS_PSWMG_IMPORT'] = '自定义函数DBMS_PSWMG_IMPORT'
# check_words['DBMS_RANDOM'] = '自定义函数DBMS_RANDOM'
# check_words['DBMS_RAT_MASK'] = '自定义函数DBMS_RAT_MASK'
# check_words['DBMS_RCVMAN'] = '自定义函数DBMS_RCVMAN'
# check_words['DBMS_RECOVERABLE_SCRIPT'] = '自定义函数DBMS_RECOVERABLE_SCRIPT'
# check_words['DBMS_RECO_SCRIPT_INT'] = '自定义函数DBMS_RECO_SCRIPT_INT'
# check_words['DBMS_RECO_SCRIPT_INVOK'] = '自定义函数DBMS_RECO_SCRIPT_INVOK'
# check_words['DBMS_RECTIFIER_DIFF'] = '自定义函数DBMS_RECTIFIER_DIFF'
# check_words['DBMS_RECTIFIER_FRIENDS'] = '自定义函数DBMS_RECTIFIER_FRIENDS'
# check_words['DBMS_REDACT'] = '自定义函数DBMS_REDACT'
# check_words['DBMS_REDACT_INT'] = '自定义函数DBMS_REDACT_INT'
# check_words['DBMS_REDEFINITION'] = '自定义函数DBMS_REDEFINITION'
# check_words['DBMS_REDEFINITION_INTERNAL'] = '自定义函数DBMS_REDEFINITION_INTERNAL'
# check_words['DBMS_REFRESH'] = '自定义函数DBMS_REFRESH'
# check_words['DBMS_REFRESH_EXP_LWM'] = '自定义函数DBMS_REFRESH_EXP_LWM'
# check_words['DBMS_REFRESH_EXP_SITES'] = '自定义函数DBMS_REFRESH_EXP_SITES'
# check_words['DBMS_REGISTRY'] = '自定义函数DBMS_REGISTRY'
# check_words['DBMS_REGISTRY_SERVER'] = '自定义函数DBMS_REGISTRY_SERVER'
# check_words['DBMS_REGISTRY_SYS'] = '自定义函数DBMS_REGISTRY_SYS'
# check_words['DBMS_REGXDB'] = '自定义函数DBMS_REGXDB'
# check_words['DBMS_REPAIR'] = '自定义函数DBMS_REPAIR'
# check_words['DBMS_REPCAT'] = '自定义函数DBMS_REPCAT'
# check_words['DBMS_REPCAT_ADD_MASTER'] = '自定义函数DBMS_REPCAT_ADD_MASTER'
# check_words['DBMS_REPCAT_ADMIN'] = '自定义函数DBMS_REPCAT_ADMIN'
# check_words['DBMS_REPCAT_AUTH'] = '自定义函数DBMS_REPCAT_AUTH'
# check_words['DBMS_REPCAT_AUTH'] = '自定义函数DBMS_REPCAT_AUTH'
# check_words['DBMS_REPCAT_CACHE'] = '自定义函数DBMS_REPCAT_CACHE'
# check_words['DBMS_REPCAT_COMMON_UTL'] = '自定义函数DBMS_REPCAT_COMMON_UTL'
# check_words['DBMS_REPCAT_CONF'] = '自定义函数DBMS_REPCAT_CONF'
# check_words['DBMS_REPCAT_DECL'] = '自定义函数DBMS_REPCAT_DECL'
# check_words['DBMS_REPCAT_EXP'] = '自定义函数DBMS_REPCAT_EXP'
# check_words['DBMS_REPCAT_FLA'] = '自定义函数DBMS_REPCAT_FLA'
# check_words['DBMS_REPCAT_FLA_MAS'] = '自定义函数DBMS_REPCAT_FLA_MAS'
# check_words['DBMS_REPCAT_FLA_UTL'] = '自定义函数DBMS_REPCAT_FLA_UTL'
# check_words['DBMS_REPCAT_INSTANTIATE'] = '自定义函数DBMS_REPCAT_INSTANTIATE'
# check_words['DBMS_REPCAT_INTERNAL'] = '自定义函数DBMS_REPCAT_INTERNAL'
# check_words['DBMS_REPCAT_INTERNAL_PACKAGE'] = '自定义函数DBMS_REPCAT_INTERNAL_PACKAGE'
# check_words['DBMS_REPCAT_MAS'] = '自定义函数DBMS_REPCAT_MAS'
# check_words['DBMS_REPCAT_MIG'] = '自定义函数DBMS_REPCAT_MIG'
# check_words['DBMS_REPCAT_MIGRATION'] = '自定义函数DBMS_REPCAT_MIGRATION'
# check_words['DBMS_REPCAT_MIG_INTERNAL'] = '自定义函数DBMS_REPCAT_MIG_INTERNAL'
# check_words['DBMS_REPCAT_OBJ_UTL'] = '自定义函数DBMS_REPCAT_OBJ_UTL'
# check_words['DBMS_REPCAT_OUTPUT'] = '自定义函数DBMS_REPCAT_OUTPUT'
# check_words['DBMS_REPCAT_RGT'] = '自定义函数DBMS_REPCAT_RGT'
# check_words['DBMS_REPCAT_RGT_ALT'] = '自定义函数DBMS_REPCAT_RGT_ALT'
# check_words['DBMS_REPCAT_RGT_CHK'] = '自定义函数DBMS_REPCAT_RGT_CHK'
# check_words['DBMS_REPCAT_RGT_CUST'] = '自定义函数DBMS_REPCAT_RGT_CUST'
# check_words['DBMS_REPCAT_RGT_CUST2'] = '自定义函数DBMS_REPCAT_RGT_CUST2'
# check_words['DBMS_REPCAT_RGT_EXP'] = '自定义函数DBMS_REPCAT_RGT_EXP'
# check_words['DBMS_REPCAT_RGT_UTL'] = '自定义函数DBMS_REPCAT_RGT_UTL'
# check_words['DBMS_REPCAT_RPC'] = '自定义函数DBMS_REPCAT_RPC'
# check_words['DBMS_REPCAT_RPC_UTL'] = '自定义函数DBMS_REPCAT_RPC_UTL'
# check_words['DBMS_REPCAT_RQ'] = '自定义函数DBMS_REPCAT_RQ'
# check_words['DBMS_REPCAT_SNA'] = '自定义函数DBMS_REPCAT_SNA'
# check_words['DBMS_REPCAT_SNA_UTL'] = '自定义函数DBMS_REPCAT_SNA_UTL'
# check_words['DBMS_REPCAT_SQL_UTL'] = '自定义函数DBMS_REPCAT_SQL_UTL'
# check_words['DBMS_REPCAT_UNTRUSTED'] = '自定义函数DBMS_REPCAT_UNTRUSTED'
# check_words['DBMS_REPCAT_UTL'] = '自定义函数DBMS_REPCAT_UTL'
# check_words['DBMS_REPCAT_UTL2'] = '自定义函数DBMS_REPCAT_UTL2'
# check_words['DBMS_REPCAT_UTL3'] = '自定义函数DBMS_REPCAT_UTL3'
# check_words['DBMS_REPCAT_UTL4'] = '自定义函数DBMS_REPCAT_UTL4'
# check_words['DBMS_REPCAT_VALIDATE'] = '自定义函数DBMS_REPCAT_VALIDATE'
# check_words['DBMS_REPORT'] = '自定义函数DBMS_REPORT'
# check_words['DBMS_REPUTIL'] = '自定义函数DBMS_REPUTIL'
# check_words['DBMS_REPUTIL2'] = '自定义函数DBMS_REPUTIL2'
# check_words['DBMS_RESCONFIG'] = '自定义函数DBMS_RESCONFIG'
# check_words['DBMS_RESOURCE_MANAGER'] = '自定义函数DBMS_RESOURCE_MANAGER'
# check_words['DBMS_RESOURCE_MANAGER_PRIVS'] = '自定义函数DBMS_RESOURCE_MANAGER_PRIVS'
# check_words['DBMS_RESULT_CACHE'] = '自定义函数DBMS_RESULT_CACHE'
# check_words['DBMS_RESUMABLE'] = '自定义函数DBMS_RESUMABLE'
# check_words['DBMS_RLM4J_DICTMAINT'] = '自定义函数DBMS_RLM4J_DICTMAINT'
# check_words['DBMS_RLM4J_DICTMAINT_DR'] = '自定义函数DBMS_RLM4J_DICTMAINT_DR'
# check_words['DBMS_RLMGR'] = '自定义函数DBMS_RLMGR'
# check_words['DBMS_RLMGR_DEPASEXP'] = '自定义函数DBMS_RLMGR_DEPASEXP'
# check_words['DBMS_RLMGR_DR'] = '自定义函数DBMS_RLMGR_DR'
# check_words['DBMS_RLMGR_EXP'] = '自定义函数DBMS_RLMGR_EXP'
# check_words['DBMS_RLMGR_IR'] = '自定义函数DBMS_RLMGR_IR'
# check_words['DBMS_RLMGR_IRPK'] = '自定义函数DBMS_RLMGR_IRPK'
# check_words['DBMS_RLMGR_UTL'] = '自定义函数DBMS_RLMGR_UTL'
# check_words['DBMS_RLS'] = '自定义函数DBMS_RLS'
# check_words['DBMS_RMGR_GROUP_EXPORT'] = '自定义函数DBMS_RMGR_GROUP_EXPORT'
# check_words['DBMS_RMGR_PACT_EXPORT'] = '自定义函数DBMS_RMGR_PACT_EXPORT'
# check_words['DBMS_RMGR_PLAN_EXPORT'] = '自定义函数DBMS_RMGR_PLAN_EXPORT'
# check_words['DBMS_RMIN'] = '自定义函数DBMS_RMIN'
# check_words['DBMS_ROWID'] = '自定义函数DBMS_ROWID'
# check_words['DBMS_RULE'] = '自定义函数DBMS_RULE'
# check_words['DBMS_RULEADM_INTERNAL'] = '自定义函数DBMS_RULEADM_INTERNAL'
# check_words['DBMS_RULE_ADM'] = '自定义函数DBMS_RULE_ADM'
# check_words['DBMS_RULE_COMPATIBLE_90'] = '自定义函数DBMS_RULE_COMPATIBLE_90'
# check_words['DBMS_RULE_EXIMP'] = '自定义函数DBMS_RULE_EXIMP'
# check_words['DBMS_RULE_EXP_EC_INTERNAL'] = '自定义函数DBMS_RULE_EXP_EC_INTERNAL'
# check_words['DBMS_RULE_EXP_EV_CTXS'] = '自定义函数DBMS_RULE_EXP_EV_CTXS'
# check_words['DBMS_RULE_EXP_RL_INTERNAL'] = '自定义函数DBMS_RULE_EXP_RL_INTERNAL'
# check_words['DBMS_RULE_EXP_RS_INTERNAL'] = '自定义函数DBMS_RULE_EXP_RS_INTERNAL'
# check_words['DBMS_RULE_EXP_RULES'] = '自定义函数DBMS_RULE_EXP_RULES'
# check_words['DBMS_RULE_EXP_RULE_SETS'] = '自定义函数DBMS_RULE_EXP_RULE_SETS'
# check_words['DBMS_RULE_EXP_UTL'] = '自定义函数DBMS_RULE_EXP_UTL'
# check_words['DBMS_RULE_EXP_UTLI'] = '自定义函数DBMS_RULE_EXP_UTLI'
# check_words['DBMS_RULE_IMP_OBJ'] = '自定义函数DBMS_RULE_IMP_OBJ'
# check_words['DBMS_RULE_INTERNAL'] = '自定义函数DBMS_RULE_INTERNAL'
# check_words['DBMS_SCHEDULER'] = '自定义函数DBMS_SCHEDULER'
# check_words['DBMS_SCHED_ATTRIBUTE_EXPORT'] = '自定义函数DBMS_SCHED_ATTRIBUTE_EXPORT'
# check_words['DBMS_SCHED_CHAIN_EXPORT'] = '自定义函数DBMS_SCHED_CHAIN_EXPORT'
# check_words['DBMS_SCHED_CLASS_EXPORT'] = '自定义函数DBMS_SCHED_CLASS_EXPORT'
# check_words['DBMS_SCHED_CREDENTIAL_EXPORT'] = '自定义函数DBMS_SCHED_CREDENTIAL_EXPORT'
# check_words['DBMS_SCHED_EXPORT_CALLOUTS'] = '自定义函数DBMS_SCHED_EXPORT_CALLOUTS'
# check_words['DBMS_SCHED_FILE_WATCHER_EXPORT'] = '自定义函数DBMS_SCHED_FILE_WATCHER_EXPORT'
# check_words['DBMS_SCHED_JOB_EXPORT'] = '自定义函数DBMS_SCHED_JOB_EXPORT'
# check_words['DBMS_SCHED_MAIN_EXPORT'] = '自定义函数DBMS_SCHED_MAIN_EXPORT'
# check_words['DBMS_SCHED_PROGRAM_EXPORT'] = '自定义函数DBMS_SCHED_PROGRAM_EXPORT'
# check_words['DBMS_SCHED_SCHEDULE_EXPORT'] = '自定义函数DBMS_SCHED_SCHEDULE_EXPORT'
# check_words['DBMS_SCHED_WINDOW_EXPORT'] = '自定义函数DBMS_SCHED_WINDOW_EXPORT'
# check_words['DBMS_SCHED_WINGRP_EXPORT'] = '自定义函数DBMS_SCHED_WINGRP_EXPORT'
# check_words['DBMS_SCN'] = '自定义函数DBMS_SCN'
# check_words['DBMS_SERVER_ALERT'] = '自定义函数DBMS_SERVER_ALERT'
# check_words['DBMS_SERVER_ALERT_EXPORT'] = '自定义函数DBMS_SERVER_ALERT_EXPORT'
# check_words['DBMS_SERVER_ALERT_PRVT'] = '自定义函数DBMS_SERVER_ALERT_PRVT'
# check_words['DBMS_SERVER_TRACE'] = '自定义函数DBMS_SERVER_TRACE'
# check_words['DBMS_SERVICE'] = '自定义函数DBMS_SERVICE'
# check_words['DBMS_SESSION'] = '自定义函数DBMS_SESSION'
# check_words['DBMS_SESSION_STATE'] = '自定义函数DBMS_SESSION_STATE'
# check_words['DBMS_SHARED_POOL'] = '自定义函数DBMS_SHARED_POOL'
# check_words['DBMS_SMB'] = '自定义函数DBMS_SMB'
# check_words['DBMS_SMB_INTERNAL'] = '自定义函数DBMS_SMB_INTERNAL'
# check_words['DBMS_SNAPSHOT'] = '自定义函数DBMS_SNAPSHOT'
# check_words['DBMS_SNAPSHOT_UTL'] = '自定义函数DBMS_SNAPSHOT_UTL'
# check_words['DBMS_SNAP_INTERNAL'] = '自定义函数DBMS_SNAP_INTERNAL'
# check_words['DBMS_SNAP_REPAPI'] = '自定义函数DBMS_SNAP_REPAPI'
# check_words['DBMS_SPACE'] = '自定义函数DBMS_SPACE'
# check_words['DBMS_SPACE_ADMIN'] = '自定义函数DBMS_SPACE_ADMIN'
# check_words['DBMS_SPM'] = '自定义函数DBMS_SPM'
# check_words['DBMS_SPM_INTERNAL'] = '自定义函数DBMS_SPM_INTERNAL'
# check_words['DBMS_SQL'] = '自定义函数DBMS_SQL'
# check_words['DBMS_SQL2'] = '自定义函数DBMS_SQL2'
# check_words['DBMS_SQLDIAG'] = '自定义函数DBMS_SQLDIAG'
# check_words['DBMS_SQLDIAG_INTERNAL'] = '自定义函数DBMS_SQLDIAG_INTERNAL'
# check_words['DBMS_SQLHASH'] = '自定义函数DBMS_SQLHASH'
# check_words['DBMS_SQLJTYPE'] = '自定义函数DBMS_SQLJTYPE'
# check_words['DBMS_SQLPA'] = '自定义函数DBMS_SQLPA'
# check_words['DBMS_SQLPLUS_SCRIPT'] = '自定义函数DBMS_SQLPLUS_SCRIPT'
# check_words['DBMS_SQLTCB_INTERNAL'] = '自定义函数DBMS_SQLTCB_INTERNAL'
# check_words['DBMS_SQLTUNE'] = '自定义函数DBMS_SQLTUNE'
# check_words['DBMS_SQLTUNE_INTERNAL'] = '自定义函数DBMS_SQLTUNE_INTERNAL'
# check_words['DBMS_SQLTUNE_UTIL0'] = '自定义函数DBMS_SQLTUNE_UTIL0'
# check_words['DBMS_SQLTUNE_UTIL1'] = '自定义函数DBMS_SQLTUNE_UTIL1'
# check_words['DBMS_SQLTUNE_UTIL2'] = '自定义函数DBMS_SQLTUNE_UTIL2'
# check_words['DBMS_STATS'] = '自定义函数DBMS_STATS'
# check_words['DBMS_STATS_INTERNAL'] = '自定义函数DBMS_STATS_INTERNAL'
# check_words['DBMS_STAT_FUNCS'] = '自定义函数DBMS_STAT_FUNCS'
# check_words['DBMS_STAT_FUNCS_AUX'] = '自定义函数DBMS_STAT_FUNCS_AUX'
# check_words['DBMS_STORAGE_MAP'] = '自定义函数DBMS_STORAGE_MAP'
# check_words['DBMS_STREAMS'] = '自定义函数DBMS_STREAMS'
# check_words['DBMS_STREAMS_ADM'] = '自定义函数DBMS_STREAMS_ADM'
# check_words['DBMS_STREAMS_ADM_UTL'] = '自定义函数DBMS_STREAMS_ADM_UTL'
# check_words['DBMS_STREAMS_ADM_UTL_INVOK'] = '自定义函数DBMS_STREAMS_ADM_UTL_INVOK'
# check_words['DBMS_STREAMS_ADVISOR_ADM'] = '自定义函数DBMS_STREAMS_ADVISOR_ADM'
# check_words['DBMS_STREAMS_ADV_ADM_UTL'] = '自定义函数DBMS_STREAMS_ADV_ADM_UTL'
# check_words['DBMS_STREAMS_ADV_ADM_UTL_INVOK'] = '自定义函数DBMS_STREAMS_ADV_ADM_UTL_INVOK'
# check_words['DBMS_STREAMS_AUTH'] = '自定义函数DBMS_STREAMS_AUTH'
# check_words['DBMS_STREAMS_AUTO_INT'] = '自定义函数DBMS_STREAMS_AUTO_INT'
# check_words['DBMS_STREAMS_CDC_ADM'] = '自定义函数DBMS_STREAMS_CDC_ADM'
# check_words['DBMS_STREAMS_CONTROL_ADM'] = '自定义函数DBMS_STREAMS_CONTROL_ADM'
# check_words['DBMS_STREAMS_DATAPUMP'] = '自定义函数DBMS_STREAMS_DATAPUMP'
# check_words['DBMS_STREAMS_DATAPUMP_UTIL'] = '自定义函数DBMS_STREAMS_DATAPUMP_UTIL'
# check_words['DBMS_STREAMS_HANDLER_ADM'] = '自定义函数DBMS_STREAMS_HANDLER_ADM'
# check_words['DBMS_STREAMS_HANDLER_INTERNAL'] = '自定义函数DBMS_STREAMS_HANDLER_INTERNAL'
# check_words['DBMS_STREAMS_LCR_INT'] = '自定义函数DBMS_STREAMS_LCR_INT'
# check_words['DBMS_STREAMS_MC'] = '自定义函数DBMS_STREAMS_MC'
# check_words['DBMS_STREAMS_MC_INV'] = '自定义函数DBMS_STREAMS_MC_INV'
# check_words['DBMS_STREAMS_MESSAGING'] = '自定义函数DBMS_STREAMS_MESSAGING'
# check_words['DBMS_STREAMS_MT'] = '自定义函数DBMS_STREAMS_MT'
# check_words['DBMS_STREAMS_PUB_RPC'] = '自定义函数DBMS_STREAMS_PUB_RPC'
# check_words['DBMS_STREAMS_RPC'] = '自定义函数DBMS_STREAMS_RPC'
# check_words['DBMS_STREAMS_RPC_INTERNAL'] = '自定义函数DBMS_STREAMS_RPC_INTERNAL'
# check_words['DBMS_STREAMS_SM'] = '自定义函数DBMS_STREAMS_SM'
# check_words['DBMS_STREAMS_TABLESPACE_ADM'] = '自定义函数DBMS_STREAMS_TABLESPACE_ADM'
# check_words['DBMS_STREAMS_TBS_INT'] = '自定义函数DBMS_STREAMS_TBS_INT'
# check_words['DBMS_STREAMS_TBS_INT_INVOK'] = '自定义函数DBMS_STREAMS_TBS_INT_INVOK'
# check_words['DBMS_SUMMARY'] = '自定义函数DBMS_SUMMARY'
# check_words['DBMS_SUMREF_UTIL'] = '自定义函数DBMS_SUMREF_UTIL'
# check_words['DBMS_SUMVDM'] = '自定义函数DBMS_SUMVDM'
# check_words['DBMS_SUM_RWEQ_EXPORT'] = '自定义函数DBMS_SUM_RWEQ_EXPORT'
# check_words['DBMS_SUM_RWEQ_EXPORT_INTERNAL'] = '自定义函数DBMS_SUM_RWEQ_EXPORT_INTERNAL'
# check_words['DBMS_SWRF_INTERNAL'] = '自定义函数DBMS_SWRF_INTERNAL'
# check_words['DBMS_SWRF_REPORT_INTERNAL'] = '自定义函数DBMS_SWRF_REPORT_INTERNAL'
# check_words['DBMS_SYSTEM'] = '自定义函数DBMS_SYSTEM'
# check_words['DBMS_SYS_ERROR'] = '自定义函数DBMS_SYS_ERROR'
# check_words['DBMS_SYS_SQL'] = '自定义函数DBMS_SYS_SQL'
# check_words['DBMS_TDB'] = '自定义函数DBMS_TDB'
# check_words['DBMS_TDE_TOOLKIT'] = '自定义函数DBMS_TDE_TOOLKIT'
# check_words['DBMS_TDE_TOOLKIT_FFI'] = '自定义函数DBMS_TDE_TOOLKIT_FFI'
# check_words['DBMS_TRACE'] = '自定义函数DBMS_TRACE'
# check_words['DBMS_TRANSACTION'] = '自定义函数DBMS_TRANSACTION'
# check_words['DBMS_TRANSACTION_INTERNAL_SYS'] = '自定义函数DBMS_TRANSACTION_INTERNAL_SYS'
# check_words['DBMS_TRANSFORM'] = '自定义函数DBMS_TRANSFORM'
# check_words['DBMS_TRANSFORM_EXIMP'] = '自定义函数DBMS_TRANSFORM_EXIMP'
# check_words['DBMS_TRANSFORM_EXIMP_INTERNAL'] = '自定义函数DBMS_TRANSFORM_EXIMP_INTERNAL'
# check_words['DBMS_TRANSFORM_INTERNAL'] = '自定义函数DBMS_TRANSFORM_INTERNAL'
# check_words['DBMS_TTS'] = '自定义函数DBMS_TTS'
# check_words['DBMS_TYPE_UTILITY'] = '自定义函数DBMS_TYPE_UTILITY'
# check_words['DBMS_UNDO_ADV'] = '自定义函数DBMS_UNDO_ADV'
# check_words['DBMS_UTILITY'] = '自定义函数DBMS_UTILITY'
# check_words['DBMS_WARNING'] = '自定义函数DBMS_WARNING'
# check_words['DBMS_WARNING_INTERNAL'] = '自定义函数DBMS_WARNING_INTERNAL'
# check_words['DBMS_WLM'] = '自定义函数DBMS_WLM'
# check_words['DBMS_WORKLOAD_CAPTURE'] = '自定义函数DBMS_WORKLOAD_CAPTURE'
# check_words['DBMS_WORKLOAD_REPLAY'] = '自定义函数DBMS_WORKLOAD_REPLAY'
# check_words['DBMS_WORKLOAD_REPOSITORY'] = '自定义函数DBMS_WORKLOAD_REPOSITORY'
# check_words['DBMS_WRR_INTERNAL'] = '自定义函数DBMS_WRR_INTERNAL'
# check_words['DBMS_XA'] = '自定义函数DBMS_XA'
# check_words['DBMS_XDB'] = '自定义函数DBMS_XDB'
# check_words['DBMS_XDBNFS'] = '自定义函数DBMS_XDBNFS'
# check_words['DBMS_XDBREPOS'] = '自定义函数DBMS_XDBREPOS'
# check_words['DBMS_XDBRESOURCE'] = '自定义函数DBMS_XDBRESOURCE'
# check_words['DBMS_XDBT'] = '自定义函数DBMS_XDBT'
# check_words['DBMS_XDBUTIL_INT'] = '自定义函数DBMS_XDBUTIL_INT'
# check_words['DBMS_XDBZ'] = '自定义函数DBMS_XDBZ'
# check_words['DBMS_XDBZ0'] = '自定义函数DBMS_XDBZ0'
# check_words['DBMS_XDB_ADMIN'] = '自定义函数DBMS_XDB_ADMIN'
# check_words['DBMS_XDB_PRINT'] = '自定义函数DBMS_XDB_PRINT'
# check_words['DBMS_XDB_VERSION'] = '自定义函数DBMS_XDB_VERSION'
# check_words['DBMS_XDS'] = '自定义函数DBMS_XDS'
# check_words['DBMS_XDSUTL'] = '自定义函数DBMS_XDSUTL'
# check_words['DBMS_XEVENT'] = '自定义函数DBMS_XEVENT'
# check_words['DBMS_XMLDOM'] = '自定义函数DBMS_XMLDOM'
# check_words['DBMS_XMLGEN'] = '自定义函数DBMS_XMLGEN'
# check_words['DBMS_XMLINDEX'] = '自定义函数DBMS_XMLINDEX'
# check_words['DBMS_XMLINDEX0'] = '自定义函数DBMS_XMLINDEX0'
# check_words['DBMS_XMLPARSER'] = '自定义函数DBMS_XMLPARSER'
# check_words['DBMS_XMLQUERY'] = '自定义函数DBMS_XMLQUERY'
# check_words['DBMS_XMLSAVE'] = '自定义函数DBMS_XMLSAVE'
# check_words['DBMS_XMLSCHEMA'] = '自定义函数DBMS_XMLSCHEMA'
# check_words['DBMS_XMLSCHEMA_INT'] = '自定义函数DBMS_XMLSCHEMA_INT'
# check_words['DBMS_XMLSTORE'] = '自定义函数DBMS_XMLSTORE'
# check_words['DBMS_XMLTRANSLATIONS'] = '自定义函数DBMS_XMLTRANSLATIONS'
# check_words['DBMS_XPLAN'] = '自定义函数DBMS_XPLAN'
# check_words['DBMS_XQUERY'] = '自定义函数DBMS_XQUERY'
# check_words['DBMS_XQUERYINT'] = '自定义函数DBMS_XQUERYINT'
# check_words['DBMS_XRWMV'] = '自定义函数DBMS_XRWMV'
# check_words['DBMS_XSLPROCESSOR'] = '自定义函数DBMS_XSLPROCESSOR'
# check_words['DBMS_XSTREAM_ADM'] = '自定义函数DBMS_XSTREAM_ADM'
# check_words['DBMS_XSTREAM_ADM_INTERNAL'] = '自定义函数DBMS_XSTREAM_ADM_INTERNAL'
# check_words['DBMS_XSTREAM_ADM_UTL'] = '自定义函数DBMS_XSTREAM_ADM_UTL'
# check_words['DBMS_XSTREAM_AUTH'] = '自定义函数DBMS_XSTREAM_AUTH'
# check_words['DBMS_XSTREAM_GG'] = '自定义函数DBMS_XSTREAM_GG'
# check_words['DBMS_XSTREAM_GG_ADM'] = '自定义函数DBMS_XSTREAM_GG_ADM'
# check_words['DBMS_XSTREAM_GG_INTERNAL'] = '自定义函数DBMS_XSTREAM_GG_INTERNAL'
# check_words['DBMS_XSTREAM_UTL_IVK'] = '自定义函数DBMS_XSTREAM_UTL_IVK'
# check_words['DBMS_XS_DATA_SECURITY_EVENTS'] = '自定义函数DBMS_XS_DATA_SECURITY_EVENTS'
# check_words['DBMS_XS_MTCACHE'] = '自定义函数DBMS_XS_MTCACHE'
# check_words['DBMS_XS_MTCACHE_FFI'] = '自定义函数DBMS_XS_MTCACHE_FFI'
# check_words['DBMS_XS_PRINCIPALS'] = '自定义函数DBMS_XS_PRINCIPALS'
# check_words['DBMS_XS_PRINCIPALS_INT'] = '自定义函数DBMS_XS_PRINCIPALS_INT'
# check_words['DBMS_XS_PRINCIPAL_EVENTS_INT'] = '自定义函数DBMS_XS_PRINCIPAL_EVENTS_INT'
# check_words['DBMS_XS_ROLESET_EVENTS_INT'] = '自定义函数DBMS_XS_ROLESET_EVENTS_INT'
# check_words['DBMS_XS_SECCLASS_EVENTS'] = '自定义函数DBMS_XS_SECCLASS_EVENTS'
# check_words['DBMS_XS_SECCLASS_INT'] = '自定义函数DBMS_XS_SECCLASS_INT'
# check_words['DBMS_XS_SECCLASS_INT_FFI'] = '自定义函数DBMS_XS_SECCLASS_INT_FFI'
# check_words['DBMS_XS_SESSIONS'] = '自定义函数DBMS_XS_SESSIONS'
# check_words['DBMS_XS_SESSIONS_FFI'] = '自定义函数DBMS_XS_SESSIONS_FFI'
# check_words['DBMS_ZHELP'] = '自定义函数DBMS_ZHELP'
# check_words['DBMS_ZHELP_IR'] = '自定义函数DBMS_ZHELP_IR'
# check_words['DB_PREFERENCES'] = '自定义函数DB_PREFERENCES'
# check_words['DIANA'] = '自定义函数DIANA'
# check_words['DIUTIL'] = '自定义函数DIUTIL'
# check_words['DMP_SEC'] = '自定义函数DMP_SEC'
# check_words['DMP_SYS'] = '自定义函数DMP_SYS'
# check_words['DM_FMTLIB'] = '自定义函数DM_FMTLIB'
# check_words['DM_QGEN'] = '自定义函数DM_QGEN'
# check_words['DM_XFORM'] = '自定义函数DM_XFORM'
# check_words['DRIACC'] = '自定义函数DRIACC'
# check_words['DRICON'] = '自定义函数DRICON'
# check_words['DRIDISP'] = '自定义函数DRIDISP'
# check_words['DRIDML'] = '自定义函数DRIDML'
# check_words['DRIDOC'] = '自定义函数DRIDOC'
# check_words['DRIENT'] = '自定义函数DRIENT'
# check_words['DRIENTL'] = '自定义函数DRIENTL'
# check_words['DRIERR'] = '自定义函数DRIERR'
# check_words['DRIEXP'] = '自定义函数DRIEXP'
# check_words['DRIFEAT'] = '自定义函数DRIFEAT'
# check_words['DRIIMP'] = '自定义函数DRIIMP'
# check_words['DRIIXS'] = '自定义函数DRIIXS'
# check_words['DRILOAD'] = '自定义函数DRILOAD'
# check_words['DRIMLX'] = '自定义函数DRIMLX'
# check_words['DRIOPT'] = '自定义函数DRIOPT'
# check_words['DRIPARSE'] = '自定义函数DRIPARSE'
# check_words['DRIPARX'] = '自定义函数DRIPARX'
# check_words['DRIPREF'] = '自定义函数DRIPREF'
# check_words['DRIREC'] = '自定义函数DRIREC'
# check_words['DRIREP'] = '自定义函数DRIREP'
# check_words['DRIREPM'] = '自定义函数DRIREPM'
# check_words['DRIREPZ'] = '自定义函数DRIREPZ'
# check_words['DRIRIO'] = '自定义函数DRIRIO'
# check_words['DRISGP'] = '自定义函数DRISGP'
# check_words['DRISPL'] = '自定义函数DRISPL'
# check_words['DRITHS'] = '自定义函数DRITHS'
# check_words['DRITHSC'] = '自定义函数DRITHSC'
# check_words['DRITHSD'] = '自定义函数DRITHSD'
# check_words['DRITHSL'] = '自定义函数DRITHSL'
# check_words['DRITHSX'] = '自定义函数DRITHSX'
# check_words['DRIUTL'] = '自定义函数DRIUTL'
# check_words['DRIVAL'] = '自定义函数DRIVAL'
# check_words['DRIXMD'] = '自定义函数DRIXMD'
# check_words['DRUE'] = '自定义函数DRUE'
# check_words['DRV0DDL'] = '自定义函数DRV0DDL'
# check_words['DRVDDL'] = '自定义函数DRVDDL'
# check_words['DRVDDLC'] = '自定义函数DRVDDLC'
# check_words['DRVDDLR'] = '自定义函数DRVDDLR'
# check_words['DRVDDLX'] = '自定义函数DRVDDLX'
# check_words['DRVDISP'] = '自定义函数DRVDISP'
# check_words['DRVDML'] = '自定义函数DRVDML'
# check_words['DRVDOC'] = '自定义函数DRVDOC'
# check_words['DRVIMR'] = '自定义函数DRVIMR'
# check_words['DRVODM'] = '自定义函数DRVODM'
# check_words['DRVPARX'] = '自定义函数DRVPARX'
# check_words['DRVRIO'] = '自定义函数DRVRIO'
# check_words['DRVTMT'] = '自定义函数DRVTMT'
# check_words['DRVUTL'] = '自定义函数DRVUTL'
# check_words['DRVXMD'] = '自定义函数DRVXMD'
# check_words['DRVXTAB'] = '自定义函数DRVXTAB'
# check_words['DRVXTABC'] = '自定义函数DRVXTABC'
# check_words['DRVXTABR'] = '自定义函数DRVXTABR'
# check_words['DRVXTABX'] = '自定义函数DRVXTABX'
# check_words['ECM_CSA'] = '自定义函数ECM_CSA'
# check_words['ECM_CT'] = '自定义函数ECM_CT'
# check_words['ECM_DEPOT'] = '自定义函数ECM_DEPOT'
# check_words['ECM_DRILL'] = '自定义函数ECM_DRILL'
# check_words['ECM_GENDIFF'] = '自定义函数ECM_GENDIFF'
# check_words['ECM_INV'] = '自定义函数ECM_INV'
# check_words['ECM_UTIL'] = '自定义函数ECM_UTIL'
# check_words['EMDW_LOG'] = '自定义函数EMDW_LOG'
# check_words['EMD_BCNTXN'] = '自定义函数EMD_BCNTXN'
# check_words['EMD_BCN_ADMIN'] = '自定义函数EMD_BCN_ADMIN'
# check_words['EMD_CHRONOS_ADMIN'] = '自定义函数EMD_CHRONOS_ADMIN'
# check_words['EMD_CHRONOS_ANALYZE'] = '自定义函数EMD_CHRONOS_ANALYZE'
# check_words['EMD_CHRONOS_PRMAPPING'] = '自定义函数EMD_CHRONOS_PRMAPPING'
# check_words['EMD_COLLECTION'] = '自定义函数EMD_COLLECTION'
# check_words['EMD_COMPOSITE_TARGETS'] = '自定义函数EMD_COMPOSITE_TARGETS'
# check_words['EMD_DATABASE'] = '自定义函数EMD_DATABASE'
# check_words['EMD_E2E_ROLLUP'] = '自定义函数EMD_E2E_ROLLUP'
# check_words['EMD_LOADER'] = '自定义函数EMD_LOADER'
# check_words['EMD_MAINTENANCE'] = '自定义函数EMD_MAINTENANCE'
# check_words['EMD_MAINT_UTIL'] = '自定义函数EMD_MAINT_UTIL'
# check_words['EMD_MNTR'] = '自定义函数EMD_MNTR'
# check_words['EMD_MNTR_BASELINE'] = '自定义函数EMD_MNTR_BASELINE'
# check_words['EMD_MNTR_COMPTGT'] = '自定义函数EMD_MNTR_COMPTGT'
# check_words['EMD_MNTR_FILER'] = '自定义函数EMD_MNTR_FILER'
# check_words['EMD_MNTR_HOST'] = '自定义函数EMD_MNTR_HOST'
# check_words['EMD_MNTR_USER'] = '自定义函数EMD_MNTR_USER'
# check_words['EMD_MNTR_WEBSITE'] = '自定义函数EMD_MNTR_WEBSITE'
# check_words['EMD_NOTIFICATION'] = '自定义函数EMD_NOTIFICATION'
# check_words['EMD_OSM'] = '自定义函数EMD_OSM'
# check_words['EMD_PREF'] = '自定义函数EMD_PREF'
# check_words['EMD_RAC'] = '自定义函数EMD_RAC'
# check_words['EMD_REDUNDANCY_GROUP'] = '自定义函数EMD_REDUNDANCY_GROUP'
# check_words['EMD_RT_ROLLUP'] = '自定义函数EMD_RT_ROLLUP'
# check_words['EMD_SCHEMA'] = '自定义函数EMD_SCHEMA'
# check_words['EM_AGGSVC_UI'] = '自定义函数EM_AGGSVC_UI'
# check_words['EM_ASSOC'] = '自定义函数EM_ASSOC'
# check_words['EM_BAM_SERVICE'] = '自定义函数EM_BAM_SERVICE'
# check_words['EM_BAM_UTIL'] = '自定义函数EM_BAM_UTIL'
# check_words['EM_CHECK'] = '自定义函数EM_CHECK'
# check_words['EM_COLL_UTIL'] = '自定义函数EM_COLL_UTIL'
# check_words['EM_COMPARISON_UI'] = '自定义函数EM_COMPARISON_UI'
# check_words['EM_CONFIG_STD'] = '自定义函数EM_CONFIG_STD'
# check_words['EM_CREDENTIAL'] = '自定义函数EM_CREDENTIAL'
# check_words['EM_DASHBOARD_SERVICE'] = '自定义函数EM_DASHBOARD_SERVICE'
# check_words['EM_DEFAULT_HOME'] = '自定义函数EM_DEFAULT_HOME'
# check_words['EM_GROUP'] = '自定义函数EM_GROUP'
# check_words['EM_GROUPS_UI'] = '自定义函数EM_GROUPS_UI'
# check_words['EM_JOB_RECOVERY'] = '自定义函数EM_JOB_RECOVERY'
# check_words['EM_LICENSE'] = '自定义函数EM_LICENSE'
# check_words['EM_LICENSING_REPORT'] = '自定义函数EM_LICENSING_REPORT'
# check_words['EM_MASTER_AGENT'] = '自定义函数EM_MASTER_AGENT'
# check_words['EM_METRIC'] = '自定义函数EM_METRIC'
# check_words['EM_METRIC_EVAL'] = '自定义函数EM_METRIC_EVAL'
# check_words['EM_METRIC_UI'] = '自定义函数EM_METRIC_UI'
# check_words['EM_PAGE_CUSTMZN'] = '自定义函数EM_PAGE_CUSTMZN'
# check_words['EM_PING'] = '自定义函数EM_PING'
# check_words['EM_POLICY'] = '自定义函数EM_POLICY'
# check_words['EM_POLICY_EVAL'] = '自定义函数EM_POLICY_EVAL'
# check_words['EM_PURGE'] = '自定义函数EM_PURGE'
# check_words['EM_RAC_LICENSE'] = '自定义函数EM_RAC_LICENSE'
# check_words['EM_REP_METRIC'] = '自定义函数EM_REP_METRIC'
# check_words['EM_SEC'] = '自定义函数EM_SEC'
# check_words['EM_SERVICE'] = '自定义函数EM_SERVICE'
# check_words['EM_SEVERITY'] = '自定义函数EM_SEVERITY'
# check_words['EM_SEVERITY_REPOS'] = '自定义函数EM_SEVERITY_REPOS'
# check_words['EM_SL'] = '自定义函数EM_SL'
# check_words['EM_SYSTEM'] = '自定义函数EM_SYSTEM'
# check_words['EM_SYSTEM_DASHBOARD'] = '自定义函数EM_SYSTEM_DASHBOARD'
# check_words['EM_TARGET'] = '自定义函数EM_TARGET'
# check_words['EM_TARGET_RELOCATE'] = '自定义函数EM_TARGET_RELOCATE'
# check_words['EM_TARGET_UI'] = '自定义函数EM_TARGET_UI'
# check_words['EM_TASK'] = '自定义函数EM_TASK'
# check_words['EM_TEMPLATE'] = '自定义函数EM_TEMPLATE'
# check_words['EM_TOPOLOGY'] = '自定义函数EM_TOPOLOGY'
# check_words['EM_TYPE_REGISTRY'] = '自定义函数EM_TYPE_REGISTRY'
# check_words['ESM'] = '自定义函数ESM'
# check_words['EXF$DBMS_EXPFIL_SYSPACK'] = '自定义函数EXF$DBMS_EXPFIL_SYSPACK'
# check_words['GENCONNECTIONINTERFACE'] = '自定义函数GENCONNECTIONINTERFACE'
# check_words['GENCURSORMANAGERINTERFACE'] = '自定义函数GENCURSORMANAGERINTERFACE'
# check_words['GENDATABASEINTERFACE'] = '自定义函数GENDATABASEINTERFACE'
# check_words['GENDATAPROVIDERINTERFACE'] = '自定义函数GENDATAPROVIDERINTERFACE'
# check_words['GENDATATYPEIDCONSTANTS'] = '自定义函数GENDATATYPEIDCONSTANTS'
# check_words['GENDEFINITIONMANAGERINTERFACE'] = '自定义函数GENDEFINITIONMANAGERINTERFACE'
# check_words['GENMDMCLASSCONSTANTS'] = '自定义函数GENMDMCLASSCONSTANTS'
# check_words['GENMDMOBJECTIDCONSTANTS'] = '自定义函数GENMDMOBJECTIDCONSTANTS'
# check_words['GENMDMPROPERTYIDCONSTANTS'] = '自定义函数GENMDMPROPERTYIDCONSTANTS'
# check_words['GENMETADATAPROVIDERINTERFACE'] = '自定义函数GENMETADATAPROVIDERINTERFACE'
# check_words['GENSERVERINTERFACE'] = '自定义函数GENSERVERINTERFACE'
# check_words['GENSVC'] = '自定义函数GENSVC'
# check_words['GENSVC_VIEW'] = '自定义函数GENSVC_VIEW'
# check_words['GET_ERROR$'] = '自定义函数GET_ERROR$'
# check_words['GET_HOMES_ALL'] = '自定义函数GET_HOMES_ALL'
# check_words['GROUP_PATCH_ADVISORIES'] = '自定义函数GROUP_PATCH_ADVISORIES'
# check_words['HAPAGE_DATABASE'] = '自定义函数HAPAGE_DATABASE'
# check_words['HM_SQLTK_INTERNAL'] = '自定义函数HM_SQLTK_INTERNAL'
# check_words['HOST_ADMIN'] = '自定义函数HOST_ADMIN'
# check_words['HOST_CONFIG_COMPARISON'] = '自定义函数HOST_CONFIG_COMPARISON'
# check_words['HTF'] = '自定义函数HTF'
# check_words['HTMLDB_CUSTOM_AUTH'] = '自定义函数HTMLDB_CUSTOM_AUTH'
# check_words['HTMLDB_ITEM'] = '自定义函数HTMLDB_ITEM'
# check_words['HTMLDB_LANG'] = '自定义函数HTMLDB_LANG'
# check_words['HTMLDB_SITE_ADMIN_PRIVS'] = '自定义函数HTMLDB_SITE_ADMIN_PRIVS'
# check_words['HTMLDB_SYSTEM'] = '自定义函数HTMLDB_SYSTEM'
# check_words['HTMLDB_UTIL'] = '自定义函数HTMLDB_UTIL'
# check_words['HTP'] = '自定义函数HTP'
# check_words['INITJVMAUX'] = '自定义函数INITJVMAUX'
# check_words['IP_RCA'] = '自定义函数IP_RCA'
# check_words['IP_SVCTEST'] = '自定义函数IP_SVCTEST'
# check_words['IP_WEBAPP'] = '自定义函数IP_WEBAPP'
# check_words['JAVA_XA'] = '自定义函数JAVA_XA'
# check_words['JSON_AC'] = '自定义函数JSON_AC'
# check_words['JSON_DYN'] = '自定义函数JSON_DYN'
# check_words['JSON_EXT'] = '自定义函数JSON_EXT'
# check_words['JSON_HELPER'] = '自定义函数JSON_HELPER'
# check_words['JSON_ML'] = '自定义函数JSON_ML'
# check_words['JSON_PARSER'] = '自定义函数JSON_PARSER'
# check_words['JSON_PRINTER'] = '自定义函数JSON_PRINTER'
# check_words['JSON_UTIL_PKG'] = '自定义函数JSON_UTIL_PKG'
# check_words['JSON_XML'] = '自定义函数JSON_XML'
# check_words['JVMFCB'] = '自定义函数JVMFCB'
# check_words['JVMRJBC'] = '自定义函数JVMRJBC'
# check_words['KUPC$QUEUE'] = '自定义函数KUPC$QUEUE'
# check_words['KUPC$QUEUE_INT'] = '自定义函数KUPC$QUEUE_INT'
# check_words['KUPC$QUE_INT'] = '自定义函数KUPC$QUE_INT'
# check_words['KUPD$DATA'] = '自定义函数KUPD$DATA'
# check_words['KUPD$DATA_INT'] = '自定义函数KUPD$DATA_INT'
# check_words['KUPF$FILE'] = '自定义函数KUPF$FILE'
# check_words['KUPF$FILE_INT'] = '自定义函数KUPF$FILE_INT'
# check_words['KUPM$MCP'] = '自定义函数KUPM$MCP'
# check_words['KUPP$PROC'] = '自定义函数KUPP$PROC'
# check_words['KUPU$UTILITIES'] = '自定义函数KUPU$UTILITIES'
# check_words['KUPU$UTILITIES_INT'] = '自定义函数KUPU$UTILITIES_INT'
# check_words['KUPV$FT'] = '自定义函数KUPV$FT'
# check_words['KUPV$FT_INT'] = '自定义函数KUPV$FT_INT'
# check_words['KUPW$WORKER'] = '自定义函数KUPW$WORKER'
# check_words['LOGMNR_DICT_CACHE'] = '自定义函数LOGMNR_DICT_CACHE'
# check_words['LOGMNR_EM_SUPPORT'] = '自定义函数LOGMNR_EM_SUPPORT'
# check_words['LOGSTDBY_INTERNAL'] = '自定义函数LOGSTDBY_INTERNAL'
# check_words['LTADM'] = '自定义函数LTADM'
# check_words['LTAQ'] = '自定义函数LTAQ'
# check_words['LTDDL'] = '自定义函数LTDDL'
# check_words['LTDTRG'] = '自定义函数LTDTRG'
# check_words['LTPRIV'] = '自定义函数LTPRIV'
# check_words['LTRIC'] = '自定义函数LTRIC'
# check_words['LTUTIL'] = '自定义函数LTUTIL'
# check_words['LT_CTX_PKG'] = '自定义函数LT_CTX_PKG'
# check_words['LT_EXPORT_PKG'] = '自定义函数LT_EXPORT_PKG'
# check_words['MD1'] = '自定义函数MD1'
# check_words['MD2'] = '自定义函数MD2'
# check_words['MDERR'] = '自定义函数MDERR'
# check_words['MDPRVT_FEATURE'] = '自定义函数MDPRVT_FEATURE'
# check_words['MDPRVT_GMD'] = '自定义函数MDPRVT_GMD'
# check_words['MDPRVT_IDX'] = '自定义函数MDPRVT_IDX'
# check_words['MDPRVT_SRID'] = '自定义函数MDPRVT_SRID'
# check_words['MD_LRS'] = '自定义函数MD_LRS'
# check_words['MD_NET'] = '自定义函数MD_NET'
# check_words['MGMT_ADMIN'] = '自定义函数MGMT_ADMIN'
# check_words['MGMT_ADMIN_DATA'] = '自定义函数MGMT_ADMIN_DATA'
# check_words['MGMT_ASPROV_TS_PKG'] = '自定义函数MGMT_ASPROV_TS_PKG'
# check_words['MGMT_ASSOC'] = '自定义函数MGMT_ASSOC'
# check_words['MGMT_AUDIT_ADMIN'] = '自定义函数MGMT_AUDIT_ADMIN'
# check_words['MGMT_AUDIT_LOG'] = '自定义函数MGMT_AUDIT_LOG'
# check_words['MGMT_AVAIL'] = '自定义函数MGMT_AVAIL'
# check_words['MGMT_BCN_TXN_VIEW'] = '自定义函数MGMT_BCN_TXN_VIEW'
# check_words['MGMT_BLACKOUT'] = '自定义函数MGMT_BLACKOUT'
# check_words['MGMT_BLACKOUT_ENGINE'] = '自定义函数MGMT_BLACKOUT_ENGINE'
# check_words['MGMT_BLACKOUT_UI'] = '自定义函数MGMT_BLACKOUT_UI'
# check_words['MGMT_BSLN'] = '自定义函数MGMT_BSLN'
# check_words['MGMT_BSLN_INTERNAL'] = '自定义函数MGMT_BSLN_INTERNAL'
# check_words['MGMT_CA'] = '自定义函数MGMT_CA'
# check_words['MGMT_CM'] = '自定义函数MGMT_CM'
# check_words['MGMT_COLLECTION'] = '自定义函数MGMT_COLLECTION'
# check_words['MGMT_CONFIG'] = '自定义函数MGMT_CONFIG'
# check_words['MGMT_CONFIG_STD'] = '自定义函数MGMT_CONFIG_STD'
# check_words['MGMT_CONFIG_UTL'] = '自定义函数MGMT_CONFIG_UTL'
# check_words['MGMT_CREDENTIAL'] = '自定义函数MGMT_CREDENTIAL'
# check_words['MGMT_CREDENTIALS_UI'] = '自定义函数MGMT_CREDENTIALS_UI'
# check_words['MGMT_CRITICALPATCH_JOB'] = '自定义函数MGMT_CRITICALPATCH_JOB'
# check_words['MGMT_DBNET'] = '自定义函数MGMT_DBNET'
# check_words['MGMT_DB_LL_METRICS'] = '自定义函数MGMT_DB_LL_METRICS'
# check_words['MGMT_DB_UPGRADE'] = '自定义函数MGMT_DB_UPGRADE'
# check_words['MGMT_DELTA'] = '自定义函数MGMT_DELTA'
# check_words['MGMT_DM'] = '自定义函数MGMT_DM'
# check_words['MGMT_ECM_CSA_PKG'] = '自定义函数MGMT_ECM_CSA_PKG'
# check_words['MGMT_ECM_HOSTPATCH'] = '自定义函数MGMT_ECM_HOSTPATCH'
# check_words['MGMT_ECM_HOSTPATCH_ULN'] = '自定义函数MGMT_ECM_HOSTPATCH_ULN'
# check_words['MGMT_ECM_SNAPSHOT_PKG'] = '自定义函数MGMT_ECM_SNAPSHOT_PKG'
# check_words['MGMT_FAILOVER'] = '自定义函数MGMT_FAILOVER'
# check_words['MGMT_GENSVC_AVAIL'] = '自定义函数MGMT_GENSVC_AVAIL'
# check_words['MGMT_GENSVC_MONTMPL'] = '自定义函数MGMT_GENSVC_MONTMPL'
# check_words['MGMT_GENSVC_UPDBCN'] = '自定义函数MGMT_GENSVC_UPDBCN'
# check_words['MGMT_GLOBAL'] = '自定义函数MGMT_GLOBAL'
# check_words['MGMT_GROUP'] = '自定义函数MGMT_GROUP'
# check_words['MGMT_HA_DG'] = '自定义函数MGMT_HA_DG'
# check_words['MGMT_HC_DELTA'] = '自定义函数MGMT_HC_DELTA'
# check_words['MGMT_HOST_MGMT'] = '自定义函数MGMT_HOST_MGMT'
# check_words['MGMT_HTTP_SESSION'] = '自定义函数MGMT_HTTP_SESSION'
# check_words['MGMT_IP'] = '自定义函数MGMT_IP'
# check_words['MGMT_JOBS'] = '自定义函数MGMT_JOBS'
# check_words['MGMT_JOB_ENGINE'] = '自定义函数MGMT_JOB_ENGINE'
# check_words['MGMT_JOB_UI'] = '自定义函数MGMT_JOB_UI'
# check_words['MGMT_JOB_UI_EXECS'] = '自定义函数MGMT_JOB_UI_EXECS'
# check_words['MGMT_JOB_UI_RUNS'] = '自定义函数MGMT_JOB_UI_RUNS'
# check_words['MGMT_LICENSE'] = '自定义函数MGMT_LICENSE'
# check_words['MGMT_LOADER'] = '自定义函数MGMT_LOADER'
# check_words['MGMT_LOCK_UTIL'] = '自定义函数MGMT_LOCK_UTIL'
# check_words['MGMT_LOG'] = '自定义函数MGMT_LOG'
# check_words['MGMT_LOGIN_ASSISTANT'] = '自定义函数MGMT_LOGIN_ASSISTANT'
# check_words['MGMT_MESSAGE'] = '自定义函数MGMT_MESSAGE'
# check_words['MGMT_METRIC'] = '自定义函数MGMT_METRIC'
# check_words['MGMT_METRIC_EXTERNAL'] = '自定义函数MGMT_METRIC_EXTERNAL'
# check_words['MGMT_METRIC_HELPER'] = '自定义函数MGMT_METRIC_HELPER'
# check_words['MGMT_MONITORING'] = '自定义函数MGMT_MONITORING'
# check_words['MGMT_MP'] = '自定义函数MGMT_MP'
# check_words['MGMT_MP_HOMEPAGE'] = '自定义函数MGMT_MP_HOMEPAGE'
# check_words['MGMT_NOTIFICATION'] = '自定义函数MGMT_NOTIFICATION'
# check_words['MGMT_OH_PATCHING_UTIL'] = '自定义函数MGMT_OH_PATCHING_UTIL'
# check_words['MGMT_PAF_AQ'] = '自定义函数MGMT_PAF_AQ'
# check_words['MGMT_PAF_JOB_UTIL'] = '自定义函数MGMT_PAF_JOB_UTIL'
# check_words['MGMT_PAF_NOTIF'] = '自定义函数MGMT_PAF_NOTIF'
# check_words['MGMT_PAF_UTL'] = '自定义函数MGMT_PAF_UTL'
# check_words['MGMT_PAGE_CUSTMZN'] = '自定义函数MGMT_PAGE_CUSTMZN'
# check_words['MGMT_POLICY'] = '自定义函数MGMT_POLICY'
# check_words['MGMT_PREFERENCES'] = '自定义函数MGMT_PREFERENCES'
# check_words['MGMT_PROPERTIES'] = '自定义函数MGMT_PROPERTIES'
# check_words['MGMT_PROVISION'] = '自定义函数MGMT_PROVISION'
# check_words['MGMT_PROV_JOB_UTIL'] = '自定义函数MGMT_PROV_JOB_UTIL'
# check_words['MGMT_RAC'] = '自定义函数MGMT_RAC'
# check_words['MGMT_RCA'] = '自定义函数MGMT_RCA'
# check_words['MGMT_REC'] = '自定义函数MGMT_REC'
# check_words['MGMT_RESPONSE'] = '自定义函数MGMT_RESPONSE'
# check_words['MGMT_SERVICE'] = '自定义函数MGMT_SERVICE'
# check_words['MGMT_SERVICE_LEVEL'] = '自定义函数MGMT_SERVICE_LEVEL'
# check_words['MGMT_SEVERITY_HELPER'] = '自定义函数MGMT_SEVERITY_HELPER'
# check_words['MGMT_SQLTRACE'] = '自定义函数MGMT_SQLTRACE'
# check_words['MGMT_SWLIB'] = '自定义函数MGMT_SWLIB'
# check_words['MGMT_SYSTEM'] = '自定义函数MGMT_SYSTEM'
# check_words['MGMT_TARGET'] = '自定义函数MGMT_TARGET'
# check_words['MGMT_TARGET_UPDATE'] = '自定义函数MGMT_TARGET_UPDATE'
# check_words['MGMT_TEMPLATE'] = '自定义函数MGMT_TEMPLATE'
# check_words['MGMT_TEMPLATE_UI'] = '自定义函数MGMT_TEMPLATE_UI'
# check_words['MGMT_TEST_METADATA_EDIT'] = '自定义函数MGMT_TEST_METADATA_EDIT'
# check_words['MGMT_TEST_METADATA_METRICS'] = '自定义函数MGMT_TEST_METADATA_METRICS'
# check_words['MGMT_TEST_METADATA_READ'] = '自定义函数MGMT_TEST_METADATA_READ'
# check_words['MGMT_TEXT'] = '自定义函数MGMT_TEXT'
# check_words['MGMT_TIME_SYNC'] = '自定义函数MGMT_TIME_SYNC'
# check_words['MGMT_TOPOLOGY'] = '自定义函数MGMT_TOPOLOGY'
# check_words['MGMT_USER'] = '自定义函数MGMT_USER'
# check_words['MGMT_USER_DEFINED_POLICY'] = '自定义函数MGMT_USER_DEFINED_POLICY'
# check_words['MGMT_VIEW_PRIV'] = '自定义函数MGMT_VIEW_PRIV'
# check_words['MGMT_VIEW_UTIL'] = '自定义函数MGMT_VIEW_UTIL'
# check_words['MGMT_VIOLATION'] = '自定义函数MGMT_VIOLATION'
# check_words['MGMT_WEBSITE_TARGET'] = '自定义函数MGMT_WEBSITE_TARGET'
# check_words['M_BOSERVER'] = '自定义函数M_BOSERVER'
# check_words['M_YWSTAT'] = '自定义函数M_YWSTAT'
# check_words['ODM_ABN_MODEL'] = '自定义函数ODM_ABN_MODEL'
# check_words['ODM_ASSOCIATION_RULE_MODEL'] = '自定义函数ODM_ASSOCIATION_RULE_MODEL'
# check_words['ODM_CLUSTERING_UTIL'] = '自定义函数ODM_CLUSTERING_UTIL'
# check_words['ODM_MODEL_UTIL'] = '自定义函数ODM_MODEL_UTIL'
# check_words['ODM_OC_CLUSTERING_MODEL'] = '自定义函数ODM_OC_CLUSTERING_MODEL'
# check_words['ODM_UTIL'] = '自定义函数ODM_UTIL'
# check_words['OLAPDIMVIEW'] = '自定义函数OLAPDIMVIEW'
# check_words['OLAPFACTVIEW'] = '自定义函数OLAPFACTVIEW'
# check_words['ORDAUDIO_PKG'] = '自定义函数ORDAUDIO_PKG'
# check_words['ORDDOC_PKG'] = '自定义函数ORDDOC_PKG'
# check_words['ORDERROR'] = '自定义函数ORDERROR'
# check_words['ORDIMERRORCODES'] = '自定义函数ORDIMERRORCODES'
# check_words['ORDIMGEXTCODEC_PKG'] = '自定义函数ORDIMGEXTCODEC_PKG'
# check_words['ORDIMGSI_PKG'] = '自定义函数ORDIMGSI_PKG'
# check_words['ORDIMG_PKG'] = '自定义函数ORDIMG_PKG'
# check_words['ORDPLSGWYUTIL'] = '自定义函数ORDPLSGWYUTIL'
# check_words['ORDUTIL'] = '自定义函数ORDUTIL'
# check_words['ORDUTIL_PRV'] = '自定义函数ORDUTIL_PRV'
# check_words['ORDVIDEO_PKG'] = '自定义函数ORDVIDEO_PKG'
# check_words['ORDX_DEFAULT_AUDIO'] = '自定义函数ORDX_DEFAULT_AUDIO'
# check_words['ORDX_DEFAULT_DOC'] = '自定义函数ORDX_DEFAULT_DOC'
# check_words['ORDX_DEFAULT_VIDEO'] = '自定义函数ORDX_DEFAULT_VIDEO'
# check_words['ORDX_FILE_SOURCE'] = '自定义函数ORDX_FILE_SOURCE'
# check_words['ORDX_HTTP_SOURCE'] = '自定义函数ORDX_HTTP_SOURCE'
# check_words['ORD_ADMIN'] = '自定义函数ORD_ADMIN'
# check_words['ORD_DATASOURCE_PKG'] = '自定义函数ORD_DATASOURCE_PKG'
# check_words['ORD_DICOM'] = '自定义函数ORD_DICOM'
# check_words['ORD_DICOM_ADMIN'] = '自定义函数ORD_DICOM_ADMIN'
# check_words['ORD_DICOM_ADMIN_PRV'] = '自定义函数ORD_DICOM_ADMIN_PRV'
# check_words['ORD_DICOM_CT'] = '自定义函数ORD_DICOM_CT'
# check_words['ORD_DICOM_PKG'] = '自定义函数ORD_DICOM_PKG'
# check_words['OUTLN_EDIT_PKG'] = '自定义函数OUTLN_EDIT_PKG'
# check_words['OUTLN_PKG'] = '自定义函数OUTLN_PKG'
# check_words['OWA'] = '自定义函数OWA'
# check_words['OWA_CACHE'] = '自定义函数OWA_CACHE'
# check_words['OWA_COOKIE'] = '自定义函数OWA_COOKIE'
# check_words['OWA_CUSTOM'] = '自定义函数OWA_CUSTOM'
# check_words['OWA_IMAGE'] = '自定义函数OWA_IMAGE'
# check_words['OWA_MATCH'] = '自定义函数OWA_MATCH'
# check_words['OWA_OPT_LOCK'] = '自定义函数OWA_OPT_LOCK'
# check_words['OWA_PATTERN'] = '自定义函数OWA_PATTERN'
# check_words['OWA_SEC'] = '自定义函数OWA_SEC'
# check_words['OWA_TEXT'] = '自定义函数OWA_TEXT'
# check_words['OWA_UTIL'] = '自定义函数OWA_UTIL'
# check_words['OWM_9IP_PKG'] = '自定义函数OWM_9IP_PKG'
# check_words['OWM_ASSERT_PKG'] = '自定义函数OWM_ASSERT_PKG'
# check_words['OWM_BULK_LOAD_PKG'] = '自定义函数OWM_BULK_LOAD_PKG'
# check_words['OWM_DDL_PKG'] = '自定义函数OWM_DDL_PKG'
# check_words['OWM_IEXP_PKG'] = '自定义函数OWM_IEXP_PKG'
# check_words['OWM_MIG_PKG'] = '自定义函数OWM_MIG_PKG'
# check_words['OWM_MP_PKG'] = '自定义函数OWM_MP_PKG'
# check_words['OWM_REPUTIL'] = '自定义函数OWM_REPUTIL'
# check_words['OWM_VT_PKG'] = '自定义函数OWM_VT_PKG'
# check_words['PACK_A_CALCULATE'] = '自定义函数PACK_A_CALCULATE'
# check_words['PACK_TRIPLOG_SYNC'] = '自定义函数PACK_TRIPLOG_SYNC'
# check_words['PAKG_EMPLOYEE'] = '自定义函数PAKG_EMPLOYEE'
# check_words['PAKG_GDCD'] = '自定义函数PAKG_GDCD'
# check_words['PAKG_JT'] = '自定义函数PAKG_JT'
# check_words['PAKG_PTC'] = '自定义函数PAKG_PTC'
# check_words['PAKG_PUBLISH'] = '自定义函数PAKG_PUBLISH'
# check_words['PAKG_REPORT'] = '自定义函数PAKG_REPORT'
# check_words['PAKG_REPORT'] = '自定义函数PAKG_REPORT'
# check_words['PAKG_REPORT_1FEN'] = '自定义函数PAKG_REPORT_1FEN'
# check_words['PAKG_REPORT_B1'] = '自定义函数PAKG_REPORT_B1'
# check_words['PAKG_REPORT_JTBS'] = '自定义函数PAKG_REPORT_JTBS'
# check_words['PAKG_REPORT_PANYU'] = '自定义函数PAKG_REPORT_PANYU'
# check_words['PAKG_REPORT_REBUILD'] = '自定义函数PAKG_REPORT_REBUILD'
# check_words['PAKG_REPORT_REGULATION'] = '自定义函数PAKG_REPORT_REGULATION'
# check_words['PAKG_SNAPSHOT'] = '自定义函数PAKG_SNAPSHOT'
# check_words['PAKG_SRV'] = '自定义函数PAKG_SRV'
# check_words['PAKG_STATION_PARA'] = '自定义函数PAKG_STATION_PARA'
# check_words['PAKG_YIQIPARK'] = '自定义函数PAKG_YIQIPARK'
# check_words['PBREAK'] = '自定义函数PBREAK'
# check_words['PBRPH'] = '自定义函数PBRPH'
# check_words['PBSDE'] = '自定义函数PBSDE'
# check_words['PIDL'] = '自定义函数PIDL'
# check_words['PKG_BUS_SHIFTTYPE'] = '自定义函数PKG_BUS_SHIFTTYPE'
# check_words['PKG_CAN_BUS_DAY'] = '自定义函数PKG_CAN_BUS_DAY'
# check_words['PKG_CAN_BUS_DC'] = '自定义函数PKG_CAN_BUS_DC'
# check_words['PKG_CAN_BUS_SANQI'] = '自定义函数PKG_CAN_BUS_SANQI'
# check_words['PKG_CAN_BUS_YIQI'] = '自定义函数PKG_CAN_BUS_YIQI'
# check_words['PKG_COMMON_UTIL'] = '自定义函数PKG_COMMON_UTIL'
# check_words['PKG_DAYPLAN'] = '自定义函数PKG_DAYPLAN'
# check_words['PKG_DISPATCH'] = '自定义函数PKG_DISPATCH'
# check_words['PKG_DISPATCH_AUTO'] = '自定义函数PKG_DISPATCH_AUTO'
# check_words['PKG_DISPATCH_AUTO_INDICATORS'] = '自定义函数PKG_DISPATCH_AUTO_INDICATORS'
# check_words['PKG_DISPATCH_GZ'] = '自定义函数PKG_DISPATCH_GZ'
# check_words['PKG_GIS_ADD_POINT'] = '自定义函数PKG_GIS_ADD_POINT'
# check_words['PKG_GIS_ROAD'] = '自定义函数PKG_GIS_ROAD'
# check_words['PKG_GIS_ROAD_ALL'] = '自定义函数PKG_GIS_ROAD_ALL'
# check_words['PKG_PLANSET'] = '自定义函数PKG_PLANSET'
# check_words['PKG_SCHEDULES'] = '自定义函数PKG_SCHEDULES'
# check_words['PKG_SCHEDULES'] = '自定义函数PKG_SCHEDULES'
# check_words['PKG_SCHEDULES'] = '自定义函数PKG_SCHEDULES'
# check_words['PKG_SCHEDULES_DRIVERLESS'] = '自定义函数PKG_SCHEDULES_DRIVERLESS'
# check_words['PKG_SCHEDULES_PLAN_FIRST'] = '自定义函数PKG_SCHEDULES_PLAN_FIRST'
# check_words['PKG_SCHEDULES_PROOF'] = '自定义函数PKG_SCHEDULES_PROOF'
# check_words['PKG_SCHEDULES_RUN_TASK'] = '自定义函数PKG_SCHEDULES_RUN_TASK'
# check_words['PKG_SCHEDULES_RUN_TASK'] = '自定义函数PKG_SCHEDULES_RUN_TASK'
# check_words['PKG_SCHEDULE_AUTO'] = '自定义函数PKG_SCHEDULE_AUTO'
# check_words['PKG_SCHEDULE_AUTO_BEARING'] = '自定义函数PKG_SCHEDULE_AUTO_BEARING'
# check_words['PKG_SCHEDULE_AUTO_BEARING'] = '自定义函数PKG_SCHEDULE_AUTO_BEARING'
# check_words['PKG_SCHEDULE_DISPATCH_PLAN'] = '自定义函数PKG_SCHEDULE_DISPATCH_PLAN'
# check_words['PKG_STATION_REPLACE'] = '自定义函数PKG_STATION_REPLACE'
# check_words['PKG_TRIPLOG'] = '自定义函数PKG_TRIPLOG'
# check_words['PKG_TRIPLOG_B'] = '自定义函数PKG_TRIPLOG_B'
# check_words['PRIVATE_JDBC'] = '自定义函数PRIVATE_JDBC'
# check_words['PRVTPC'] = '自定义函数PRVTPC'
# check_words['PRVTTNPC'] = '自定义函数PRVTTNPC'
# check_words['PRVT_ACCESS_ADVISOR'] = '自定义函数PRVT_ACCESS_ADVISOR'
# check_words['PRVT_ADVISOR'] = '自定义函数PRVT_ADVISOR'
# check_words['PRVT_AWR_DATA'] = '自定义函数PRVT_AWR_DATA'
# check_words['PRVT_AWR_DATA_CP'] = '自定义函数PRVT_AWR_DATA_CP'
# check_words['PRVT_COMPRESSION'] = '自定义函数PRVT_COMPRESSION'
# check_words['PRVT_CPADDM'] = '自定义函数PRVT_CPADDM'
# check_words['PRVT_DIMENSION_SYS_UTIL'] = '自定义函数PRVT_DIMENSION_SYS_UTIL'
# check_words['PRVT_HDM'] = '自定义函数PRVT_HDM'
# check_words['PRVT_IDX'] = '自定义函数PRVT_IDX'
# check_words['PRVT_PARTREC_NOPRIV'] = '自定义函数PRVT_PARTREC_NOPRIV'
# check_words['PRVT_PC'] = '自定义函数PRVT_PC'
# check_words['PRVT_REPORT_REGISTRY'] = '自定义函数PRVT_REPORT_REGISTRY'
# check_words['PRVT_REPORT_TAGS'] = '自定义函数PRVT_REPORT_TAGS'
# check_words['PRVT_RTADDM'] = '自定义函数PRVT_RTADDM'
# check_words['PRVT_SAM'] = '自定义函数PRVT_SAM'
# check_words['PRVT_SMGUTIL'] = '自定义函数PRVT_SMGUTIL'
# check_words['PRVT_SQLADV_INFRA'] = '自定义函数PRVT_SQLADV_INFRA'
# check_words['PRVT_SQLPA'] = '自定义函数PRVT_SQLPA'
# check_words['PRVT_SQLPROF_INFRA'] = '自定义函数PRVT_SQLPROF_INFRA'
# check_words['PRVT_SQLSET_INFRA'] = '自定义函数PRVT_SQLSET_INFRA'
# check_words['PRVT_SYS_TUNE_MVIEW'] = '自定义函数PRVT_SYS_TUNE_MVIEW'
# check_words['PRVT_TIN'] = '自定义函数PRVT_TIN'
# check_words['PRVT_TUNE_MVIEW'] = '自定义函数PRVT_TUNE_MVIEW'
# check_words['PRVT_UADV'] = '自定义函数PRVT_UADV'
# check_words['PRVT_WORKLOAD'] = '自定义函数PRVT_WORKLOAD'
# check_words['PRVT_WORKLOAD_NOPRIV'] = '自定义函数PRVT_WORKLOAD_NOPRIV'
# check_words['RLM$TIMECENTRAL'] = '自定义函数RLM$TIMECENTRAL'
# check_words['RMJVM'] = '自定义函数RMJVM'
# check_words['RTREE_IDX'] = '自定义函数RTREE_IDX'
# check_words['SDO'] = '自定义函数SDO'
# check_words['SDOTNPC'] = '自定义函数SDOTNPC'
# check_words['SDO_3GL'] = '自定义函数SDO_3GL'
# check_words['SDO_ADMIN'] = '自定义函数SDO_ADMIN'
# check_words['SDO_CATALOG'] = '自定义函数SDO_CATALOG'
# check_words['SDO_CS'] = '自定义函数SDO_CS'
# check_words['SDO_CSW_PROCESS'] = '自定义函数SDO_CSW_PROCESS'
# check_words['SDO_GCDR'] = '自定义函数SDO_GCDR'
# check_words['SDO_GEOM'] = '自定义函数SDO_GEOM'
# check_words['SDO_GEOR'] = '自定义函数SDO_GEOR'
# check_words['SDO_GEORX'] = '自定义函数SDO_GEORX'
# check_words['SDO_GEOR_ADMIN'] = '自定义函数SDO_GEOR_ADMIN'
# check_words['SDO_GEOR_AUX'] = '自定义函数SDO_GEOR_AUX'
# check_words['SDO_GEOR_DEF'] = '自定义函数SDO_GEOR_DEF'
# check_words['SDO_GEOR_INT'] = '自定义函数SDO_GEOR_INT'
# check_words['SDO_GEOR_UTL'] = '自定义函数SDO_GEOR_UTL'
# check_words['SDO_IDX'] = '自定义函数SDO_IDX'
# check_words['SDO_LRS'] = '自定义函数SDO_LRS'
# check_words['SDO_META'] = '自定义函数SDO_META'
# check_words['SDO_MIGRATE'] = '自定义函数SDO_MIGRATE'
# check_words['SDO_NET'] = '自定义函数SDO_NET'
# check_words['SDO_NET_PARTITION'] = '自定义函数SDO_NET_PARTITION'
# check_words['SDO_OLS'] = '自定义函数SDO_OLS'
# check_words['SDO_OLS_DIRECTORY'] = '自定义函数SDO_OLS_DIRECTORY'
# check_words['SDO_OLS_LOCUTL'] = '自定义函数SDO_OLS_LOCUTL'
# check_words['SDO_OLS_PRESENTATION'] = '自定义函数SDO_OLS_PRESENTATION'
# check_words['SDO_OLS_ROUTE'] = '自定义函数SDO_OLS_ROUTE'
# check_words['SDO_PC_PKG'] = '自定义函数SDO_PC_PKG'
# check_words['SDO_PRIDX'] = '自定义函数SDO_PRIDX'
# check_words['SDO_RDF_MIG'] = '自定义函数SDO_RDF_MIG'
# check_words['SDO_RELATE_MASK'] = '自定义函数SDO_RELATE_MASK'
# check_words['SDO_ROUTER_PARTITION'] = '自定义函数SDO_ROUTER_PARTITION'
# check_words['SDO_RTREE_ADMIN'] = '自定义函数SDO_RTREE_ADMIN'
# check_words['SDO_SAM'] = '自定义函数SDO_SAM'
# check_words['SDO_SEM_DOWNGRADE'] = '自定义函数SDO_SEM_DOWNGRADE'
# check_words['SDO_SEM_DOWNGRADE_UTL'] = '自定义函数SDO_SEM_DOWNGRADE_UTL'
# check_words['SDO_TIN_PKG'] = '自定义函数SDO_TIN_PKG'
# check_words['SDO_TOPO'] = '自定义函数SDO_TOPO'
# check_words['SDO_TOPO_METADATA'] = '自定义函数SDO_TOPO_METADATA'
# check_words['SDO_TOPO_METADATA_INT'] = '自定义函数SDO_TOPO_METADATA_INT'
# check_words['SDO_TPFNS'] = '自定义函数SDO_TPFNS'
# check_words['SDO_TPIDX'] = '自定义函数SDO_TPIDX'
# check_words['SDO_TUNE'] = '自定义函数SDO_TUNE'
# check_words['SDO_UTIL'] = '自定义函数SDO_UTIL'
# check_words['SDO_VERS'] = '自定义函数SDO_VERS'
# check_words['SDO_WFS_LOCK'] = '自定义函数SDO_WFS_LOCK'
# check_words['SDO_WFS_LOCK_GEN'] = '自定义函数SDO_WFS_LOCK_GEN'
# check_words['SDO_WFS_LOCK_UTIL'] = '自定义函数SDO_WFS_LOCK_UTIL'
# check_words['SDO_WFS_PROCESS'] = '自定义函数SDO_WFS_PROCESS'
# check_words['SDO_WFS_PROCESS_UTIL'] = '自定义函数SDO_WFS_PROCESS_UTIL'
# check_words['SDO_WS_PROCESS'] = '自定义函数SDO_WS_PROCESS'
# check_words['SEM_UPGRADE_TO_11'] = '自定义函数SEM_UPGRADE_TO_11'
# check_words['SPLIT_PAC'] = '自定义函数SPLIT_PAC'
# check_words['SP_DEQ_PKG'] = '自定义函数SP_DEQ_PKG'
# check_words['SP_DEQ_V_PKG'] = '自定义函数SP_DEQ_V_PKG'
# check_words['SQLJUTL'] = '自定义函数SQLJUTL'
# check_words['SQLJUTL2'] = '自定义函数SQLJUTL2'
# check_words['STANDARD'] = '自定义函数STANDARD'
# check_words['STORAGE_COMMON_DB_UTILS'] = '自定义函数STORAGE_COMMON_DB_UTILS'
# check_words['STORAGE_ECM_PKG'] = '自定义函数STORAGE_ECM_PKG'
# check_words['STORAGE_REP_METRICS_PKG'] = '自定义函数STORAGE_REP_METRICS_PKG'
# check_words['STORAGE_UI_COMMON_PKG'] = '自定义函数STORAGE_UI_COMMON_PKG'
# check_words['STORAGE_UI_GROUP_PKG'] = '自定义函数STORAGE_UI_GROUP_PKG'
# check_words['STORAGE_UI_HOST_PKG'] = '自定义函数STORAGE_UI_HOST_PKG'
# check_words['STORAGE_UI_UTIL_PKG'] = '自定义函数STORAGE_UI_UTIL_PKG'
# check_words['SYST_HIST'] = '自定义函数SYST_HIST'
# check_words['TRANSFORM_MAP'] = '自定义函数TRANSFORM_MAP'
# check_words['UD_TRIGS'] = '自定义函数UD_TRIGS'
# check_words['URIFACTORY'] = '自定义函数URIFACTORY'
# check_words['UTL_COLL'] = '自定义函数UTL_COLL'
# check_words['UTL_COMPRESS'] = '自定义函数UTL_COMPRESS'
# check_words['UTL_ENCODE'] = '自定义函数UTL_ENCODE'
# check_words['UTL_FILE'] = '自定义函数UTL_FILE'
# check_words['UTL_GDK'] = '自定义函数UTL_GDK'
# check_words['UTL_HTTP'] = '自定义函数UTL_HTTP'
# check_words['UTL_I18N'] = '自定义函数UTL_I18N'
# check_words['UTL_INADDR'] = '自定义函数UTL_INADDR'
# check_words['UTL_LMS'] = '自定义函数UTL_LMS'
# check_words['UTL_NLA'] = '自定义函数UTL_NLA'
# check_words['UTL_RAW'] = '自定义函数UTL_RAW'
# check_words['UTL_RECOMP'] = '自定义函数UTL_RECOMP'
# check_words['UTL_REF'] = '自定义函数UTL_REF'
# check_words['UTL_SMTP'] = '自定义函数UTL_SMTP'
# check_words['UTL_SYS_COMPRESS'] = '自定义函数UTL_SYS_COMPRESS'
# check_words['UTL_TCP'] = '自定义函数UTL_TCP'
# check_words['UTL_URL'] = '自定义函数UTL_URL'
# check_words['UTL_XML'] = '自定义函数UTL_XML'
# check_words['WM_DDL_UTIL'] = '自定义函数WM_DDL_UTIL'
# check_words['WM_ERROR'] = '自定义函数WM_ERROR'
# check_words['WPG_DOCLOAD'] = '自定义函数WPG_DOCLOAD'
# check_words['WPIUTL'] = '自定义函数WPIUTL'
# check_words['WWV_CALCULATOR'] = '自定义函数WWV_CALCULATOR'
# check_words['WWV_CRYPT'] = '自定义函数WWV_CRYPT'
# check_words['WWV_DBMS_SQL'] = '自定义函数WWV_DBMS_SQL'
# check_words['WWV_FLOW'] = '自定义函数WWV_FLOW'
# check_words['WWV_FLOW_ADMIN_API'] = '自定义函数WWV_FLOW_ADMIN_API'
# check_words['WWV_FLOW_AJAX'] = '自定义函数WWV_FLOW_AJAX'
# check_words['WWV_FLOW_API'] = '自定义函数WWV_FLOW_API'
# check_words['WWV_FLOW_ASFCOOKIE'] = '自定义函数WWV_FLOW_ASFCOOKIE'
# check_words['WWV_FLOW_ASSERT'] = '自定义函数WWV_FLOW_ASSERT'
# check_words['WWV_FLOW_AUDIT'] = '自定义函数WWV_FLOW_AUDIT'
# check_words['WWV_FLOW_BUILDER'] = '自定义函数WWV_FLOW_BUILDER'
# check_words['WWV_FLOW_CACHE'] = '自定义函数WWV_FLOW_CACHE'
# check_words['WWV_FLOW_CALENDAR3'] = '自定义函数WWV_FLOW_CALENDAR3'
# check_words['WWV_FLOW_CALENDAR_AJAX'] = '自定义函数WWV_FLOW_CALENDAR_AJAX'
# check_words['WWV_FLOW_CHECK'] = '自定义函数WWV_FLOW_CHECK'
# check_words['WWV_FLOW_COLLECTION'] = '自定义函数WWV_FLOW_COLLECTION'
# check_words['WWV_FLOW_COLLECTIONS_SHOWCASE'] = '自定义函数WWV_FLOW_COLLECTIONS_SHOWCASE'
# check_words['WWV_FLOW_CONDITIONS'] = '自定义函数WWV_FLOW_CONDITIONS'
# check_words['WWV_FLOW_COPY_METADATA'] = '自定义函数WWV_FLOW_COPY_METADATA'
# check_words['WWV_FLOW_COPY_PAGE'] = '自定义函数WWV_FLOW_COPY_PAGE'
# check_words['WWV_FLOW_COPY_UTIL'] = '自定义函数WWV_FLOW_COPY_UTIL'
# check_words['WWV_FLOW_CREATE_APP_FROM_QUERY'] = '自定义函数WWV_FLOW_CREATE_APP_FROM_QUERY'
# check_words['WWV_FLOW_CREATE_MODEL_APP'] = '自定义函数WWV_FLOW_CREATE_MODEL_APP'
# check_words['WWV_FLOW_CSS_API'] = '自定义函数WWV_FLOW_CSS_API'
# check_words['WWV_FLOW_CSS_API_PRIVATE'] = '自定义函数WWV_FLOW_CSS_API_PRIVATE'
# check_words['WWV_FLOW_CUSTOMIZE'] = '自定义函数WWV_FLOW_CUSTOMIZE'
# check_words['WWV_FLOW_CUSTOM_AUTH'] = '自定义函数WWV_FLOW_CUSTOM_AUTH'
# check_words['WWV_FLOW_CUSTOM_AUTH_LDAP'] = '自定义函数WWV_FLOW_CUSTOM_AUTH_LDAP'
# check_words['WWV_FLOW_CUSTOM_AUTH_STD'] = '自定义函数WWV_FLOW_CUSTOM_AUTH_STD'
# check_words['WWV_FLOW_DATALOAD_XML'] = '自定义函数WWV_FLOW_DATALOAD_XML'
# check_words['WWV_FLOW_DATA_QUICK_FLOW'] = '自定义函数WWV_FLOW_DATA_QUICK_FLOW'
# check_words['WWV_FLOW_DEVELOPER_TOOLBAR'] = '自定义函数WWV_FLOW_DEVELOPER_TOOLBAR'
# check_words['WWV_FLOW_DISP_PAGE_PLUGS'] = '自定义函数WWV_FLOW_DISP_PAGE_PLUGS'
# check_words['WWV_FLOW_DML'] = '自定义函数WWV_FLOW_DML'
# check_words['WWV_FLOW_DOWNLOAD'] = '自定义函数WWV_FLOW_DOWNLOAD'
# check_words['WWV_FLOW_DRAG_LAYOUT'] = '自定义函数WWV_FLOW_DRAG_LAYOUT'
# check_words['WWV_FLOW_EDIT_REPORT'] = '自定义函数WWV_FLOW_EDIT_REPORT'
# check_words['WWV_FLOW_ELEMENT'] = '自定义函数WWV_FLOW_ELEMENT'
# check_words['WWV_FLOW_EPG_INCLUDE_MODULES'] = '自定义函数WWV_FLOW_EPG_INCLUDE_MODULES'
# check_words['WWV_FLOW_F4000_UTIL'] = '自定义函数WWV_FLOW_F4000_UTIL'
# check_words['WWV_FLOW_FILE_API'] = '自定义函数WWV_FLOW_FILE_API'
# check_words['WWV_FLOW_FILE_MGR'] = '自定义函数WWV_FLOW_FILE_MGR'
# check_words['WWV_FLOW_FLASH_CHART'] = '自定义函数WWV_FLOW_FLASH_CHART'
# check_words['WWV_FLOW_FLASH_CHART2'] = '自定义函数WWV_FLOW_FLASH_CHART2'
# check_words['WWV_FLOW_FLASH_CHART_UTIL'] = '自定义函数WWV_FLOW_FLASH_CHART_UTIL'
# check_words['WWV_FLOW_FND_DEVELOPER_API'] = '自定义函数WWV_FLOW_FND_DEVELOPER_API'
# check_words['WWV_FLOW_FND_FUNCTION'] = '自定义函数WWV_FLOW_FND_FUNCTION'
# check_words['WWV_FLOW_FND_USER_API'] = '自定义函数WWV_FLOW_FND_USER_API'
# check_words['WWV_FLOW_FORMS'] = '自定义函数WWV_FLOW_FORMS'
# check_words['WWV_FLOW_FORM_CONTROL'] = '自定义函数WWV_FLOW_FORM_CONTROL'
# check_words['WWV_FLOW_GENERATE_DDL'] = '自定义函数WWV_FLOW_GENERATE_DDL'
# check_words['WWV_FLOW_GENERATE_TABLE_API'] = '自定义函数WWV_FLOW_GENERATE_TABLE_API'
# check_words['WWV_FLOW_GENERIC_ATTR'] = '自定义函数WWV_FLOW_GENERIC_ATTR'
# check_words['WWV_FLOW_GEN_API2'] = '自定义函数WWV_FLOW_GEN_API2'
# check_words['WWV_FLOW_GEN_HINT'] = '自定义函数WWV_FLOW_GEN_HINT'
# check_words['WWV_FLOW_HELP'] = '自定义函数WWV_FLOW_HELP'
# check_words['WWV_FLOW_HINT'] = '自定义函数WWV_FLOW_HINT'
# check_words['WWV_FLOW_HTML_API'] = '自定义函数WWV_FLOW_HTML_API'
# check_words['WWV_FLOW_HTML_API_PRIVATE'] = '自定义函数WWV_FLOW_HTML_API_PRIVATE'
# check_words['WWV_FLOW_ID'] = '自定义函数WWV_FLOW_ID'
# check_words['WWV_FLOW_IMAGE_API'] = '自定义函数WWV_FLOW_IMAGE_API'
# check_words['WWV_FLOW_IMAGE_API_PRIVATE'] = '自定义函数WWV_FLOW_IMAGE_API_PRIVATE'
# check_words['WWV_FLOW_IMAGE_GENERATOR'] = '自定义函数WWV_FLOW_IMAGE_GENERATOR'
# check_words['WWV_FLOW_IMP_PARSER'] = '自定义函数WWV_FLOW_IMP_PARSER'
# check_words['WWV_FLOW_INSTALL_WIZARD'] = '自定义函数WWV_FLOW_INSTALL_WIZARD'
# check_words['WWV_FLOW_INSTANCE_ADMIN'] = '自定义函数WWV_FLOW_INSTANCE_ADMIN'
# check_words['WWV_FLOW_ISC'] = '自定义函数WWV_FLOW_ISC'
# check_words['WWV_FLOW_ITEM'] = '自定义函数WWV_FLOW_ITEM'
# check_words['WWV_FLOW_ITEM_HELP'] = '自定义函数WWV_FLOW_ITEM_HELP'
# check_words['WWV_FLOW_JOB'] = '自定义函数WWV_FLOW_JOB'
# check_words['WWV_FLOW_LANG'] = '自定义函数WWV_FLOW_LANG'
# check_words['WWV_FLOW_LDAP'] = '自定义函数WWV_FLOW_LDAP'
# check_words['WWV_FLOW_LIST'] = '自定义函数WWV_FLOW_LIST'
# check_words['WWV_FLOW_LOAD_DATA'] = '自定义函数WWV_FLOW_LOAD_DATA'
# check_words['WWV_FLOW_LOAD_EXCEL_DATA'] = '自定义函数WWV_FLOW_LOAD_EXCEL_DATA'
# check_words['WWV_FLOW_LOG'] = '自定义函数WWV_FLOW_LOG'
# check_words['WWV_FLOW_LOGIN'] = '自定义函数WWV_FLOW_LOGIN'
# check_words['WWV_FLOW_MAIL'] = '自定义函数WWV_FLOW_MAIL'
# check_words['WWV_FLOW_META_DATA'] = '自定义函数WWV_FLOW_META_DATA'
# check_words['WWV_FLOW_MIGRATE_METADATA'] = '自定义函数WWV_FLOW_MIGRATE_METADATA'
# check_words['WWV_FLOW_MODEL_API'] = '自定义函数WWV_FLOW_MODEL_API'
# check_words['WWV_FLOW_PAGE_CACHE_API'] = '自定义函数WWV_FLOW_PAGE_CACHE_API'
# check_words['WWV_FLOW_PAGE_MAP'] = '自定义函数WWV_FLOW_PAGE_MAP'
# check_words['WWV_FLOW_PLATFORM'] = '自定义函数WWV_FLOW_PLATFORM'
# check_words['WWV_FLOW_PLSQL_EDITOR'] = '自定义函数WWV_FLOW_PLSQL_EDITOR'
# check_words['WWV_FLOW_PLSQL_JOB'] = '自定义函数WWV_FLOW_PLSQL_JOB'
# check_words['WWV_FLOW_POPUP_LOV'] = '自定义函数WWV_FLOW_POPUP_LOV'
# check_words['WWV_FLOW_PPR_UTIL'] = '自定义函数WWV_FLOW_PPR_UTIL'
# check_words['WWV_FLOW_PREFERENCES'] = '自定义函数WWV_FLOW_PREFERENCES'
# check_words['WWV_FLOW_PRINT_UTIL'] = '自定义函数WWV_FLOW_PRINT_UTIL'
# check_words['WWV_FLOW_PROCESS_UTILITY'] = '自定义函数WWV_FLOW_PROCESS_UTILITY'
# check_words['WWV_FLOW_PROVISION'] = '自定义函数WWV_FLOW_PROVISION'
# check_words['WWV_FLOW_PROVISIONING'] = '自定义函数WWV_FLOW_PROVISIONING'
# check_words['WWV_FLOW_QUERY_API'] = '自定义函数WWV_FLOW_QUERY_API'
# check_words['WWV_FLOW_QUERY_BUILDER'] = '自定义函数WWV_FLOW_QUERY_BUILDER'
# check_words['WWV_FLOW_RANDOM'] = '自定义函数WWV_FLOW_RANDOM'
# check_words['WWV_FLOW_REGEXP'] = '自定义函数WWV_FLOW_REGEXP'
# check_words['WWV_FLOW_REGION_LAYOUT'] = '自定义函数WWV_FLOW_REGION_LAYOUT'
# check_words['WWV_FLOW_REGION_TREE'] = '自定义函数WWV_FLOW_REGION_TREE'
# check_words['WWV_FLOW_RENDER_QUERY'] = '自定义函数WWV_FLOW_RENDER_QUERY'
# check_words['WWV_FLOW_RENDER_SHORTCUT'] = '自定义函数WWV_FLOW_RENDER_SHORTCUT'
# check_words['WWV_FLOW_RPT_STD_MSG'] = '自定义函数WWV_FLOW_RPT_STD_MSG'
# check_words['WWV_FLOW_SAMPLE_APP'] = '自定义函数WWV_FLOW_SAMPLE_APP'
# check_words['WWV_FLOW_SC_TRANSACTIONS'] = '自定义函数WWV_FLOW_SC_TRANSACTIONS'
# check_words['WWV_FLOW_SECURITY'] = '自定义函数WWV_FLOW_SECURITY'
# check_words['WWV_FLOW_SERIES_ATTR'] = '自定义函数WWV_FLOW_SERIES_ATTR'
# check_words['WWV_FLOW_SESSION_MON'] = '自定义函数WWV_FLOW_SESSION_MON'
# check_words['WWV_FLOW_SVG'] = '自定义函数WWV_FLOW_SVG'
# check_words['WWV_FLOW_SW_API'] = '自定义函数WWV_FLOW_SW_API'
# check_words['WWV_FLOW_SW_OBJECT_FEED'] = '自定义函数WWV_FLOW_SW_OBJECT_FEED'
# check_words['WWV_FLOW_SW_PAGE_CALLS'] = '自定义函数WWV_FLOW_SW_PAGE_CALLS'
# check_words['WWV_FLOW_SW_PARSER'] = '自定义函数WWV_FLOW_SW_PARSER'
# check_words['WWV_FLOW_SW_SCRIPT'] = '自定义函数WWV_FLOW_SW_SCRIPT'
# check_words['WWV_FLOW_SW_UPGRADE'] = '自定义函数WWV_FLOW_SW_UPGRADE'
# check_words['WWV_FLOW_SW_UTIL'] = '自定义函数WWV_FLOW_SW_UTIL'
# check_words['WWV_FLOW_TABLE_DRILL'] = '自定义函数WWV_FLOW_TABLE_DRILL'
# check_words['WWV_FLOW_TAB_MGR'] = '自定义函数WWV_FLOW_TAB_MGR'
# check_words['WWV_FLOW_TEMP'] = '自定义函数WWV_FLOW_TEMP'
# check_words['WWV_FLOW_TEMPLATES_UTIL'] = '自定义函数WWV_FLOW_TEMPLATES_UTIL'
# check_words['WWV_FLOW_THEME_1'] = '自定义函数WWV_FLOW_THEME_1'
# check_words['WWV_FLOW_THEME_10'] = '自定义函数WWV_FLOW_THEME_10'
# check_words['WWV_FLOW_THEME_11'] = '自定义函数WWV_FLOW_THEME_11'
# check_words['WWV_FLOW_THEME_12'] = '自定义函数WWV_FLOW_THEME_12'
# check_words['WWV_FLOW_THEME_13'] = '自定义函数WWV_FLOW_THEME_13'
# check_words['WWV_FLOW_THEME_14'] = '自定义函数WWV_FLOW_THEME_14'
# check_words['WWV_FLOW_THEME_15'] = '自定义函数WWV_FLOW_THEME_15'
# check_words['WWV_FLOW_THEME_16'] = '自定义函数WWV_FLOW_THEME_16'
# check_words['WWV_FLOW_THEME_17'] = '自定义函数WWV_FLOW_THEME_17'
# check_words['WWV_FLOW_THEME_18'] = '自定义函数WWV_FLOW_THEME_18'
# check_words['WWV_FLOW_THEME_19'] = '自定义函数WWV_FLOW_THEME_19'
# check_words['WWV_FLOW_THEME_2'] = '自定义函数WWV_FLOW_THEME_2'
# check_words['WWV_FLOW_THEME_20'] = '自定义函数WWV_FLOW_THEME_20'
# check_words['WWV_FLOW_THEME_3'] = '自定义函数WWV_FLOW_THEME_3'
# check_words['WWV_FLOW_THEME_4'] = '自定义函数WWV_FLOW_THEME_4'
# check_words['WWV_FLOW_THEME_5'] = '自定义函数WWV_FLOW_THEME_5'
# check_words['WWV_FLOW_THEME_6'] = '自定义函数WWV_FLOW_THEME_6'
# check_words['WWV_FLOW_THEME_7'] = '自定义函数WWV_FLOW_THEME_7'
# check_words['WWV_FLOW_THEME_8'] = '自定义函数WWV_FLOW_THEME_8'
# check_words['WWV_FLOW_THEME_9'] = '自定义函数WWV_FLOW_THEME_9'
# check_words['WWV_FLOW_THEME_FILES'] = '自定义函数WWV_FLOW_THEME_FILES'
# check_words['WWV_FLOW_THEME_MANAGER'] = '自定义函数WWV_FLOW_THEME_MANAGER'
# check_words['WWV_FLOW_TREE'] = '自定义函数WWV_FLOW_TREE'
# check_words['WWV_FLOW_UPGRADE'] = '自定义函数WWV_FLOW_UPGRADE'
# check_words['WWV_FLOW_UPGRADE_REPORT'] = '自定义函数WWV_FLOW_UPGRADE_REPORT'
# check_words['WWV_FLOW_USER_API'] = '自定义函数WWV_FLOW_USER_API'
# check_words['WWV_FLOW_UTILITIES'] = '自定义函数WWV_FLOW_UTILITIES'
# check_words['WWV_FLOW_VAL'] = '自定义函数WWV_FLOW_VAL'
# check_words['WWV_FLOW_WEB_SERVICES'] = '自定义函数WWV_FLOW_WEB_SERVICES'
# check_words['WWV_FLOW_WIZARD_API'] = '自定义函数WWV_FLOW_WIZARD_API'
# check_words['WWV_FLOW_WIZ_CONFIRM'] = '自定义函数WWV_FLOW_WIZ_CONFIRM'
# check_words['WWV_FLOW_WORKSHEET'] = '自定义函数WWV_FLOW_WORKSHEET'
# check_words['WWV_FLOW_WORKSHEET_AJAX'] = '自定义函数WWV_FLOW_WORKSHEET_AJAX'
# check_words['WWV_FLOW_WORKSHEET_API'] = '自定义函数WWV_FLOW_WORKSHEET_API'
# check_words['WWV_FLOW_WORKSHEET_ATTACHMENT'] = '自定义函数WWV_FLOW_WORKSHEET_ATTACHMENT'
# check_words['WWV_FLOW_WORKSHEET_DIALOGUE'] = '自定义函数WWV_FLOW_WORKSHEET_DIALOGUE'
# check_words['WWV_FLOW_WORKSHEET_EXPR'] = '自定义函数WWV_FLOW_WORKSHEET_EXPR'
# check_words['WWV_FLOW_WORKSHEET_FORM'] = '自定义函数WWV_FLOW_WORKSHEET_FORM'
# check_words['WWV_FLOW_WORKSHEET_STANDARD'] = '自定义函数WWV_FLOW_WORKSHEET_STANDARD'
# check_words['WWV_FLOW_WORKSHEET_STICKIES'] = '自定义函数WWV_FLOW_WORKSHEET_STICKIES'
# check_words['WWV_FLOW_WORKSHEET_UI'] = '自定义函数WWV_FLOW_WORKSHEET_UI'
# check_words['WWV_FLOW_XLIFF'] = '自定义函数WWV_FLOW_XLIFF'
# check_words['WWV_HTF'] = '自定义函数WWV_HTF'
# check_words['WWV_HTP'] = '自定义函数WWV_HTP'
# check_words['WWV_META_CLEANUP'] = '自定义函数WWV_META_CLEANUP'
# check_words['WWV_MIG_ACC_LOAD'] = '自定义函数WWV_MIG_ACC_LOAD'
# check_words['WWV_MIG_FRMMENU_LOAD_XML'] = '自定义函数WWV_MIG_FRMMENU_LOAD_XML'
# check_words['WWV_MIG_FRM_LOAD_XML'] = '自定义函数WWV_MIG_FRM_LOAD_XML'
# check_words['WWV_MIG_FRM_OLB_LOAD_XML'] = '自定义函数WWV_MIG_FRM_OLB_LOAD_XML'
# check_words['WWV_MIG_FRM_UPDATE_APX_APP'] = '自定义函数WWV_MIG_FRM_UPDATE_APX_APP'
# check_words['WWV_MIG_FRM_UTILITIES'] = '自定义函数WWV_MIG_FRM_UTILITIES'
# check_words['WWV_MIG_RPT_LOAD_XML'] = '自定义函数WWV_MIG_RPT_LOAD_XML'
# check_words['WWV_RENDER_CALENDAR2'] = '自定义函数WWV_RENDER_CALENDAR2'
# check_words['WWV_RENDER_CHART2'] = '自定义函数WWV_RENDER_CHART2'
# check_words['WWV_RENDER_REPORT3'] = '自定义函数WWV_RENDER_REPORT3'
# check_words['WWV_SPELING'] = '自定义函数WWV_SPELING'
# check_words['XDB$ACL_PKG_INT'] = '自定义函数XDB$ACL_PKG_INT'
# check_words['XDBPI_FUNCIMPL'] = '自定义函数XDBPI_FUNCIMPL'
# check_words['XDB_ANCOP'] = '自定义函数XDB_ANCOP'
# check_words['XDB_DLTRIG_PKG'] = '自定义函数XDB_DLTRIG_PKG'
# check_words['XDB_FUNCIMPL'] = '自定义函数XDB_FUNCIMPL'
# check_words['XDB_PITRIG_PKG'] = '自定义函数XDB_PITRIG_PKG'
# check_words['XDB_PITRIG_PKG_01'] = '自定义函数XDB_PITRIG_PKG_01'
# check_words['XDB_RVTRIG_PKG'] = '自定义函数XDB_RVTRIG_PKG'
# check_words['XIMETADATA_PKG'] = '自定义函数XIMETADATA_PKG'
# check_words['XMLINDEX_FUNCIMPL'] = '自定义函数XMLINDEX_FUNCIMPL'
# check_words['XML_SCHEMA_NAME_PRESENT'] = '自定义函数XML_SCHEMA_NAME_PRESENT'
# check_words['XS$CATVIEW_UTIL'] = '自定义函数XS$CATVIEW_UTIL'
# check_words[' update_error_rate'] = '自定义函数 update_error_rate'
# check_words['AA_TRIP_TIME'] = '自定义函数AA_TRIP_TIME'
# check_words['APEX'] = '自定义函数APEX'
# check_words['APEX_ADMIN'] = '自定义函数APEX_ADMIN'
# check_words['APS_VALIDATE'] = '自定义函数APS_VALIDATE'
# check_words['AW_DROP_PROC'] = '自定义函数AW_DROP_PROC'
# check_words['AW_REN_PROC'] = '自定义函数AW_REN_PROC'
# check_words['AW_TRUNC_PROC'] = '自定义函数AW_TRUNC_PROC'
# check_words['DBMS_FEATURE_APEX'] = '自定义函数DBMS_FEATURE_APEX'
# check_words['DBMS_FEATURE_ASM'] = '自定义函数DBMS_FEATURE_ASM'
# check_words['DBMS_FEATURE_AUM'] = '自定义函数DBMS_FEATURE_AUM'
# check_words['DBMS_FEATURE_AUTOSTA'] = '自定义函数DBMS_FEATURE_AUTOSTA'
# check_words['DBMS_FEATURE_AUTO_MEM'] = '自定义函数DBMS_FEATURE_AUTO_MEM'
# check_words['DBMS_FEATURE_AUTO_SGA'] = '自定义函数DBMS_FEATURE_AUTO_SGA'
# check_words['DBMS_FEATURE_AUTO_SSM'] = '自定义函数DBMS_FEATURE_AUTO_SSM'
# check_words['DBMS_FEATURE_AWR'] = '自定义函数DBMS_FEATURE_AWR'
# check_words['DBMS_FEATURE_BACKUP_ENCRYPTION'] = '自定义函数DBMS_FEATURE_BACKUP_ENCRYPTION'
# check_words['DBMS_FEATURE_CDC'] = '自定义函数DBMS_FEATURE_CDC'
# check_words['DBMS_FEATURE_DATABASE_VAULT'] = '自定义函数DBMS_FEATURE_DATABASE_VAULT'
# check_words['DBMS_FEATURE_DATA_GUARD'] = '自定义函数DBMS_FEATURE_DATA_GUARD'
# check_words['DBMS_FEATURE_DATA_REDACTION'] = '自定义函数DBMS_FEATURE_DATA_REDACTION'
# check_words['DBMS_FEATURE_DEFERRED_SEG_CRT'] = '自定义函数DBMS_FEATURE_DEFERRED_SEG_CRT'
# check_words['DBMS_FEATURE_DMU'] = '自定义函数DBMS_FEATURE_DMU'
# check_words['DBMS_FEATURE_DYN_SGA'] = '自定义函数DBMS_FEATURE_DYN_SGA'
# check_words['DBMS_FEATURE_EXADATA'] = '自定义函数DBMS_FEATURE_EXADATA'
# check_words['DBMS_FEATURE_EXTENSIBILITY'] = '自定义函数DBMS_FEATURE_EXTENSIBILITY'
# check_words['DBMS_FEATURE_GOLDENGATE'] = '自定义函数DBMS_FEATURE_GOLDENGATE'
# check_words['DBMS_FEATURE_HCC'] = '自定义函数DBMS_FEATURE_HCC'
# check_words['DBMS_FEATURE_JOB_SCHEDULER'] = '自定义函数DBMS_FEATURE_JOB_SCHEDULER'
# check_words['DBMS_FEATURE_LMT'] = '自定义函数DBMS_FEATURE_LMT'
# check_words['DBMS_FEATURE_OBJECT'] = '自定义函数DBMS_FEATURE_OBJECT'
# check_words['DBMS_FEATURE_PARTITION_SYSTEM'] = '自定义函数DBMS_FEATURE_PARTITION_SYSTEM'
# check_words['DBMS_FEATURE_PARTITION_USER'] = '自定义函数DBMS_FEATURE_PARTITION_USER'
# check_words['DBMS_FEATURE_PILLAR_EHCC'] = '自定义函数DBMS_FEATURE_PILLAR_EHCC'
# check_words['DBMS_FEATURE_PILLAR_STORAGE'] = '自定义函数DBMS_FEATURE_PILLAR_STORAGE'
# check_words['DBMS_FEATURE_PLSQL_NATIVE'] = '自定义函数DBMS_FEATURE_PLSQL_NATIVE'
# check_words['DBMS_FEATURE_QOSM'] = '自定义函数DBMS_FEATURE_QOSM'
# check_words['DBMS_FEATURE_RAC'] = '自定义函数DBMS_FEATURE_RAC'
# check_words['DBMS_FEATURE_REGISTER_ALLFEAT'] = '自定义函数DBMS_FEATURE_REGISTER_ALLFEAT'
# check_words['DBMS_FEATURE_REGISTER_ALLHWM'] = '自定义函数DBMS_FEATURE_REGISTER_ALLHWM'
# check_words['DBMS_FEATURE_RESOURCE_MANAGER'] = '自定义函数DBMS_FEATURE_RESOURCE_MANAGER'
# check_words['DBMS_FEATURE_RMAN_BACKUP'] = '自定义函数DBMS_FEATURE_RMAN_BACKUP'
# check_words['DBMS_FEATURE_RMAN_BASIC'] = '自定义函数DBMS_FEATURE_RMAN_BASIC'
# check_words['DBMS_FEATURE_RMAN_BZIP2'] = '自定义函数DBMS_FEATURE_RMAN_BZIP2'
# check_words['DBMS_FEATURE_RMAN_DISK_BACKUP'] = '自定义函数DBMS_FEATURE_RMAN_DISK_BACKUP'
# check_words['DBMS_FEATURE_RMAN_HIGH'] = '自定义函数DBMS_FEATURE_RMAN_HIGH'
# check_words['DBMS_FEATURE_RMAN_LOW'] = '自定义函数DBMS_FEATURE_RMAN_LOW'
# check_words['DBMS_FEATURE_RMAN_MEDIUM'] = '自定义函数DBMS_FEATURE_RMAN_MEDIUM'
# check_words['DBMS_FEATURE_RMAN_TAPE_BACKUP'] = '自定义函数DBMS_FEATURE_RMAN_TAPE_BACKUP'
# check_words['DBMS_FEATURE_RMAN_ZLIB'] = '自定义函数DBMS_FEATURE_RMAN_ZLIB'
# check_words['DBMS_FEATURE_RULESMANAGER'] = '自定义函数DBMS_FEATURE_RULESMANAGER'
# check_words['DBMS_FEATURE_SECUREFILES_SYS'] = '自定义函数DBMS_FEATURE_SECUREFILES_SYS'
# check_words['DBMS_FEATURE_SECUREFILES_USR'] = '自定义函数DBMS_FEATURE_SECUREFILES_USR'
# check_words['DBMS_FEATURE_SEGADV_USER'] = '自定义函数DBMS_FEATURE_SEGADV_USER'
# check_words['DBMS_FEATURE_SERVICES'] = '自定义函数DBMS_FEATURE_SERVICES'
# check_words['DBMS_FEATURE_SFCOMPRESS_SYS'] = '自定义函数DBMS_FEATURE_SFCOMPRESS_SYS'
# check_words['DBMS_FEATURE_SFCOMPRESS_USR'] = '自定义函数DBMS_FEATURE_SFCOMPRESS_USR'
# check_words['DBMS_FEATURE_SFDEDUP_SYS'] = '自定义函数DBMS_FEATURE_SFDEDUP_SYS'
# check_words['DBMS_FEATURE_SFDEDUP_USR'] = '自定义函数DBMS_FEATURE_SFDEDUP_USR'
# check_words['DBMS_FEATURE_SFENCRYPT_SYS'] = '自定义函数DBMS_FEATURE_SFENCRYPT_SYS'
# check_words['DBMS_FEATURE_SFENCRYPT_USR'] = '自定义函数DBMS_FEATURE_SFENCRYPT_USR'
# check_words['DBMS_FEATURE_STATS_INCREMENTAL'] = '自定义函数DBMS_FEATURE_STATS_INCREMENTAL'
# check_words['DBMS_FEATURE_STREAMS'] = '自定义函数DBMS_FEATURE_STREAMS'
# check_words['DBMS_FEATURE_TEST_PROC_1'] = '自定义函数DBMS_FEATURE_TEST_PROC_1'
# check_words['DBMS_FEATURE_TEST_PROC_2'] = '自定义函数DBMS_FEATURE_TEST_PROC_2'
# check_words['DBMS_FEATURE_TEST_PROC_3'] = '自定义函数DBMS_FEATURE_TEST_PROC_3'
# check_words['DBMS_FEATURE_TEST_PROC_4'] = '自定义函数DBMS_FEATURE_TEST_PROC_4'
# check_words['DBMS_FEATURE_TEST_PROC_5'] = '自定义函数DBMS_FEATURE_TEST_PROC_5'
# check_words['DBMS_FEATURE_USER_MVS'] = '自定义函数DBMS_FEATURE_USER_MVS'
# check_words['DBMS_FEATURE_UTILITIES1'] = '自定义函数DBMS_FEATURE_UTILITIES1'
# check_words['DBMS_FEATURE_UTILITIES2'] = '自定义函数DBMS_FEATURE_UTILITIES2'
# check_words['DBMS_FEATURE_UTILITIES3'] = '自定义函数DBMS_FEATURE_UTILITIES3'
# check_words['DBMS_FEATURE_UTILITIES4'] = '自定义函数DBMS_FEATURE_UTILITIES4'
# check_words['DBMS_FEATURE_WCR_CAPTURE'] = '自定义函数DBMS_FEATURE_WCR_CAPTURE'
# check_words['DBMS_FEATURE_WCR_REPLAY'] = '自定义函数DBMS_FEATURE_WCR_REPLAY'
# check_words['DBMS_FEATURE_XDB'] = '自定义函数DBMS_FEATURE_XDB'
# check_words['DBMS_FEATURE_XSTREAM_IN'] = '自定义函数DBMS_FEATURE_XSTREAM_IN'
# check_words['DBMS_FEATURE_XSTREAM_OUT'] = '自定义函数DBMS_FEATURE_XSTREAM_OUT'
# check_words['DBMS_FEATURE_XSTREAM_STREAMS'] = '自定义函数DBMS_FEATURE_XSTREAM_STREAMS'
# check_words['DBMS_FEATURE_ZFS_EHCC'] = '自定义函数DBMS_FEATURE_ZFS_EHCC'
# check_words['DBMS_FEATURE_ZFS_STORAGE'] = '自定义函数DBMS_FEATURE_ZFS_STORAGE'
# check_words['DBMS_LOGMNR_FFVTOLOGMNRT'] = '自定义函数DBMS_LOGMNR_FFVTOLOGMNRT'
# check_words['DEL_DAY_MISSION'] = '自定义函数DEL_DAY_MISSION'
# check_words['DEVELOPMENT_SERVICE_HOME'] = '自定义函数DEVELOPMENT_SERVICE_HOME'
# check_words['DEVELOPMENT_SERVICE_HOME_LOGIN'] = '自定义函数DEVELOPMENT_SERVICE_HOME_LOGIN'
# check_words['DEVELOPMENT_SERVICE_SIGNUP'] = '自定义函数DEVELOPMENT_SERVICE_SIGNUP'
# check_words['DRI_MOVE_CTXSYS'] = '自定义函数DRI_MOVE_CTXSYS'
# check_words['DROP_DY_ADEPARTURE_PARTTION'] = '自定义函数DROP_DY_ADEPARTURE_PARTTION'
# check_words['DROP_DY_DISPATCH_INFO_PARTTION'] = '自定义函数DROP_DY_DISPATCH_INFO_PARTTION'
# check_words['DROP_GPS_PARTTION'] = '自定义函数DROP_GPS_PARTTION'
# check_words['ELOCATIONSETJVMHEAPSIZE'] = '自定义函数ELOCATIONSETJVMHEAPSIZE'
# check_words['EXF$CHECK_PRIVILEGE'] = '自定义函数EXF$CHECK_PRIVILEGE'
# check_words['EXF$EXPCORRCHKOCI'] = '自定义函数EXF$EXPCORRCHKOCI'
# check_words['EXF$EXPFUNCLISTCHK'] = '自定义函数EXF$EXPFUNCLISTCHK'
# check_words['EXF$VALIDATEDATAITEM'] = '自定义函数EXF$VALIDATEDATAITEM'
# check_words['EXF$XPDUMPTAGSINFO'] = '自定义函数EXF$XPDUMPTAGSINFO'
# check_words['GETDUMMYTAGS'] = '自定义函数GETDUMMYTAGS'
# check_words['GETTAGSARROCI'] = '自定义函数GETTAGSARROCI'
# check_words['HTMLDB'] = '自定义函数HTMLDB'
# check_words['HTMLDB_ADMIN'] = '自定义函数HTMLDB_ADMIN'
# check_words['HTMLDB_LOGIN'] = '自定义函数HTMLDB_LOGIN'
# check_words['INIT_ROUTESTA_ID'] = '自定义函数INIT_ROUTESTA_ID'
# check_words['KDZSTORAGETYPE'] = '自定义函数KDZSTORAGETYPE'
# check_words['LOAD_UNDO_STAT'] = '自定义函数LOAD_UNDO_STAT'
# check_words['LOGMNR$ALWAYSSUPLOG_PROC'] = '自定义函数LOGMNR$ALWAYSSUPLOG_PROC'
# check_words['LOGMNR_DDL_TRIGGER_PROC'] = '自定义函数LOGMNR_DDL_TRIGGER_PROC'
# check_words['LOGMNR_GTLO3'] = '自定义函数LOGMNR_GTLO3'
# check_words['LOGMNR_KRVRDA_TEST_APPLY'] = '自定义函数LOGMNR_KRVRDA_TEST_APPLY'
# check_words['LOGMNR_KRVRDLUID3'] = '自定义函数LOGMNR_KRVRDLUID3'
# check_words['LOGMNR_KRVRDREPDICT3'] = '自定义函数LOGMNR_KRVRDREPDICT3'
# check_words['LOGMNR_RMT_BLD'] = '自定义函数LOGMNR_RMT_BLD'
# check_words['MGMT_UPDATE_DB_FEATURE_LOG'] = '自定义函数MGMT_UPDATE_DB_FEATURE_LOG'
# check_words['NO_VM_ALTER_PROC'] = '自定义函数NO_VM_ALTER_PROC'
# check_words['NO_VM_CREATE_PROC'] = '自定义函数NO_VM_CREATE_PROC'
# check_words['NO_VM_DROP_PROC'] = '自定义函数NO_VM_DROP_PROC'
# check_words['ODCIANYDATADUMP'] = '自定义函数ODCIANYDATADUMP'
# check_words['ODCICOLINFODUMP'] = '自定义函数ODCICOLINFODUMP'
# check_words['ODCICOLINFOFLAGSDUMP'] = '自定义函数ODCICOLINFOFLAGSDUMP'
# check_words['ODCIENVDUMP'] = '自定义函数ODCIENVDUMP'
# check_words['ODCIINDEXALTEROPTIONDUMP'] = '自定义函数ODCIINDEXALTEROPTIONDUMP'
# check_words['ODCIINDEXCALLPROPERTYDUMP'] = '自定义函数ODCIINDEXCALLPROPERTYDUMP'
# check_words['ODCIINDEXINFODUMP'] = '自定义函数ODCIINDEXINFODUMP'
# check_words['ODCIINDEXINFOFLAGSDUMP'] = '自定义函数ODCIINDEXINFOFLAGSDUMP'
# check_words['ODCIPARTINFODUMP'] = '自定义函数ODCIPARTINFODUMP'
# check_words['ODCIPARTINFOLISTDUMP'] = '自定义函数ODCIPARTINFOLISTDUMP'
# check_words['ODCIPREDINFODUMP'] = '自定义函数ODCIPREDINFODUMP'
# check_words['ODCIQUERYINFODUMP'] = '自定义函数ODCIQUERYINFODUMP'
# check_words['ODCISTATSOPTIONSDUMP'] = '自定义函数ODCISTATSOPTIONSDUMP'
# check_words['ODCITABFUNCINFODUMP'] = '自定义函数ODCITABFUNCINFODUMP'
# check_words['OLAPIHANDSHAKE2'] = '自定义函数OLAPIHANDSHAKE2'
# check_words['OLM_TTS_PRINT_TABLE'] = '自定义函数OLM_TTS_PRINT_TABLE'
# check_words['ORA$GRANT_SYS_SELECT'] = '自定义函数ORA$GRANT_SYS_SELECT'
# check_words['ORA$_SYS_REP_AUTH'] = '自定义函数ORA$_SYS_REP_AUTH'
# check_words['OWNER_MIGRATE_UPDATE_TDO'] = '自定义函数OWNER_MIGRATE_UPDATE_TDO'
# check_words['PRO_A0_TABLE_UPDATE'] = '自定义函数PRO_A0_TABLE_UPDATE'
# check_words['PRO_A0_TABLE_UPDATE_2'] = '自定义函数PRO_A0_TABLE_UPDATE_2'
# check_words['PRO_ABNORMAL'] = '自定义函数PRO_ABNORMAL'
# check_words['PRO_ALARM_DAY'] = '自定义函数PRO_ALARM_DAY'
# check_words['PRO_ALART_TEST'] = '自定义函数PRO_ALART_TEST'
# check_words['PRO_APTS_CALL_BACK'] = '自定义函数PRO_APTS_CALL_BACK'
# check_words['PRO_APTS_MENU_UPDATE'] = '自定义函数PRO_APTS_MENU_UPDATE'
# check_words['PRO_APTS_MENU_UPDATE'] = '自定义函数PRO_APTS_MENU_UPDATE'
# check_words['PRO_ARRIVAL_TIME_BY_ROUTE_DAY'] = '自定义函数PRO_ARRIVAL_TIME_BY_ROUTE_DAY'
# check_words['PRO_ARRIVAL_TIME_BY_ROUTE_DAYN'] = '自定义函数PRO_ARRIVAL_TIME_BY_ROUTE_DAYN'
# check_words['PRO_ARRIVAL_TIME_ERQI'] = '自定义函数PRO_ARRIVAL_TIME_ERQI'
# check_words['PRO_ARRIVAL_TIME_ERQI_JOB'] = '自定义函数PRO_ARRIVAL_TIME_ERQI_JOB'
# check_words['PRO_ARRI_DEPARTURE_JOB'] = '自定义函数PRO_ARRI_DEPARTURE_JOB'
# check_words['PRO_ATTENDANCE_TRIPLOG'] = '自定义函数PRO_ATTENDANCE_TRIPLOG'
# check_words['PRO_AUTO_DISPATCH_RATE'] = '自定义函数PRO_AUTO_DISPATCH_RATE'
# check_words['PRO_AUTO_DISPATCH_RATE'] = '自定义函数PRO_AUTO_DISPATCH_RATE'
# check_words['PRO_AUTO_DISPATCH_RATE_DAY'] = '自定义函数PRO_AUTO_DISPATCH_RATE_DAY'
# check_words['PRO_AUTO_DISPATCH_RATE_DAY'] = '自定义函数PRO_AUTO_DISPATCH_RATE_DAY'
# check_words['PRO_AUTO_DISPATCH_RATE_TEST'] = '自定义函数PRO_AUTO_DISPATCH_RATE_TEST'
# check_words['PRO_AUTO_DISPATCH_RATE_TEST'] = '自定义函数PRO_AUTO_DISPATCH_RATE_TEST'
# check_words['PRO_AZ_FORECAST_REPORT'] = '自定义函数PRO_AZ_FORECAST_REPORT'
# check_words['PRO_BASEDATA_UPDATE'] = '自定义函数PRO_BASEDATA_UPDATE'
# check_words['PRO_BASEDATA_ZCGJ'] = '自定义函数PRO_BASEDATA_ZCGJ'
# check_words['PRO_BRTTRIPLOG_TEST'] = '自定义函数PRO_BRTTRIPLOG_TEST'
# check_words['PRO_BRT_BUS_ALARM'] = '自定义函数PRO_BRT_BUS_ALARM'
# check_words['PRO_BUSDB_SYNC'] = '自定义函数PRO_BUSDB_SYNC'
# check_words['PRO_BUSVEDIO_RANDOM_TASK'] = '自定义函数PRO_BUSVEDIO_RANDOM_TASK'
# check_words['PRO_BUSVEDIO_RANDOM_TASK'] = '自定义函数PRO_BUSVEDIO_RANDOM_TASK'
# check_words['PRO_BUSVEDIO_RANDOM_TASK_JOB'] = '自定义函数PRO_BUSVEDIO_RANDOM_TASK_JOB'
# check_words['PRO_BUSVEDIO_RANDOM_TASK_JOB'] = '自定义函数PRO_BUSVEDIO_RANDOM_TASK_JOB'
# check_words['PRO_BUS_NUMBER_MOUNT'] = '自定义函数PRO_BUS_NUMBER_MOUNT'
# check_words['PRO_BUS_NUMBER_MOUNT'] = '自定义函数PRO_BUS_NUMBER_MOUNT'
# check_words['PRO_BUS_PUBLISH'] = '自定义函数PRO_BUS_PUBLISH'
# check_words['PRO_BUS_SYNC2'] = '自定义函数PRO_BUS_SYNC2'
# check_words['PRO_CALCULATE_REPORT'] = '自定义函数PRO_CALCULATE_REPORT'
# check_words['PRO_CALCULATE_REPORT_DATE'] = '自定义函数PRO_CALCULATE_REPORT_DATE'
# check_words['PRO_CAN_ALARM_DIANCHE_DEAL'] = '自定义函数PRO_CAN_ALARM_DIANCHE_DEAL'
# check_words['PRO_CAN_BUS_DEAL'] = '自定义函数PRO_CAN_BUS_DEAL'
# check_words['PRO_CAN_ERQI_DEAL'] = '自定义函数PRO_CAN_ERQI_DEAL'
# check_words['PRO_CAN_INFO_DIANCHE_DEAL'] = '自定义函数PRO_CAN_INFO_DIANCHE_DEAL'
# check_words['PRO_CAN_SANQI_DEAL'] = '自定义函数PRO_CAN_SANQI_DEAL'
# check_words['PRO_CAN_SANQI_DISTANCE_DEAL'] = '自定义函数PRO_CAN_SANQI_DISTANCE_DEAL'
# check_words['PRO_CAN_SANQI_STAT'] = '自定义函数PRO_CAN_SANQI_STAT'
# check_words['PRO_CAN_YIQI_DEAL'] = '自定义函数PRO_CAN_YIQI_DEAL'
# check_words['PRO_CAN_YIQI_STAT'] = '自定义函数PRO_CAN_YIQI_STAT'
# check_words['PRO_CHECK_ATTENDANCE_ANALYSIS'] = '自定义函数PRO_CHECK_ATTENDANCE_ANALYSIS'
# check_words['PRO_CHECK_TIME_DETAIL'] = '自定义函数PRO_CHECK_TIME_DETAIL'
# check_words['PRO_CLEAN_INVALID_TABLE'] = '自定义函数PRO_CLEAN_INVALID_TABLE'
# check_words['PRO_CREATEIDXFILE'] = '自定义函数PRO_CREATEIDXFILE'
# check_words['PRO_CREATEROUTEVERSION'] = '自定义函数PRO_CREATEROUTEVERSION'
# check_words['PRO_DAILY_REPORT'] = '自定义函数PRO_DAILY_REPORT'
# check_words['PRO_DAYPLAN_JOB'] = '自定义函数PRO_DAYPLAN_JOB'
# check_words['PRO_DBMS_STAT'] = '自定义函数PRO_DBMS_STAT'
# check_words['PRO_DELETE_A_TABLE'] = '自定义函数PRO_DELETE_A_TABLE'
# check_words['PRO_DEL_FTPLOG'] = '自定义函数PRO_DEL_FTPLOG'
# check_words['PRO_DISPATCH_AUTO_INDICATORS'] = '自定义函数PRO_DISPATCH_AUTO_INDICATORS'
# check_words['PRO_DISPATCH_PLAN_AUTO'] = '自定义函数PRO_DISPATCH_PLAN_AUTO'
# check_words['PRO_DISPATCH_REPLY_START'] = '自定义函数PRO_DISPATCH_REPLY_START'
# check_words['PRO_DISPATH_BUS_RUNNING'] = '自定义函数PRO_DISPATH_BUS_RUNNING'
# check_words['PRO_DISPATH_BUS_RUNNING_POOL'] = '自定义函数PRO_DISPATH_BUS_RUNNING_POOL'
# check_words['PRO_DRIVER_WORKING_HOURS'] = '自定义函数PRO_DRIVER_WORKING_HOURS'
# check_words['PRO_DYEMERGENCY_MSG'] = '自定义函数PRO_DYEMERGENCY_MSG'
# check_words['PRO_DYMESSAGE'] = '自定义函数PRO_DYMESSAGE'
# check_words['PRO_DYTIME'] = '自定义函数PRO_DYTIME'
# check_words['PRO_DYTIME_15M'] = '自定义函数PRO_DYTIME_15M'
# check_words['PRO_DYTIME_JOB'] = '自定义函数PRO_DYTIME_JOB'
# check_words['PRO_DYTIME_JOB_15M'] = '自定义函数PRO_DYTIME_JOB_15M'
# check_words['PRO_DYTIME_OLD'] = '自定义函数PRO_DYTIME_OLD'
# check_words['PRO_DY_ADREAL_COLLECT'] = '自定义函数PRO_DY_ADREAL_COLLECT'
# check_words['PRO_DY_ADREAL_COLLECT_DAY'] = '自定义函数PRO_DY_ADREAL_COLLECT_DAY'
# check_words['PRO_DY_ADREAL_COLLECT_UPDATE'] = '自定义函数PRO_DY_ADREAL_COLLECT_UPDATE'
# check_words['PRO_DY_CHECK_ATTENDANCE'] = '自定义函数PRO_DY_CHECK_ATTENDANCE'
# check_words['PRO_DY_PASSENGER_STAT'] = '自定义函数PRO_DY_PASSENGER_STAT'
# check_words['PRO_ED_BUS_SYN'] = '自定义函数PRO_ED_BUS_SYN'
# check_words['PRO_ED_ROUTE_JOB'] = '自定义函数PRO_ED_ROUTE_JOB'
# check_words['PRO_ED_ROUTE_REBUILD'] = '自定义函数PRO_ED_ROUTE_REBUILD'
# check_words['PRO_ED_ROUTE_SYNC'] = '自定义函数PRO_ED_ROUTE_SYNC'
# check_words['PRO_ED_TO_BS'] = '自定义函数PRO_ED_TO_BS'
# check_words['PRO_ERRLOG'] = '自定义函数PRO_ERRLOG'
# check_words['PRO_ERRLOG'] = '自定义函数PRO_ERRLOG'
# check_words['PRO_ERRLOG'] = '自定义函数PRO_ERRLOG'
# check_words['PRO_ERRLOG'] = '自定义函数PRO_ERRLOG'
# check_words['PRO_ERRLOG'] = '自定义函数PRO_ERRLOG'
# check_words['PRO_ERRLOG'] = '自定义函数PRO_ERRLOG'
# check_words['PRO_ERRLOG'] = '自定义函数PRO_ERRLOG'
# check_words['PRO_EXPORT_TO_CSV'] = '自定义函数PRO_EXPORT_TO_CSV'
# check_words['PRO_FIRST_ROUND_PLAN_ERQI'] = '自定义函数PRO_FIRST_ROUND_PLAN_ERQI'
# check_words['PRO_FIRST_ROUND_PLAN_ERQI_TE'] = '自定义函数PRO_FIRST_ROUND_PLAN_ERQI_TE'
# check_words['PRO_FIRST_ROUND_PLAN_ERQI_TEST'] = '自定义函数PRO_FIRST_ROUND_PLAN_ERQI_TEST'
# check_words['PRO_FIX_BUG'] = '自定义函数PRO_FIX_BUG'
# check_words['PRO_FIX_VIDIO_PASS'] = '自定义函数PRO_FIX_VIDIO_PASS'
# check_words['PRO_FTP_BLOB_FILEINS'] = '自定义函数PRO_FTP_BLOB_FILEINS'
# check_words['PRO_GET_BUSONLINELIST'] = '自定义函数PRO_GET_BUSONLINELIST'
# check_words['PRO_GET_TRIPLOGID'] = '自定义函数PRO_GET_TRIPLOGID'
# check_words['PRO_GIS_AREA_COUNT'] = '自定义函数PRO_GIS_AREA_COUNT'
# check_words['PRO_GIS_AREA_COUNT_JOB'] = '自定义函数PRO_GIS_AREA_COUNT_JOB'
# check_words['PRO_GIS_ROADSEG'] = '自定义函数PRO_GIS_ROADSEG'
# check_words['PRO_GPS_CONNECTED'] = '自定义函数PRO_GPS_CONNECTED'
# check_words['PRO_HOLIDAY_GEN'] = '自定义函数PRO_HOLIDAY_GEN'
# check_words['PRO_HOULY_STAT'] = '自定义函数PRO_HOULY_STAT'
# check_words['PRO_ILLEGAL_STAT'] = '自定义函数PRO_ILLEGAL_STAT'
# check_words['PRO_IMMEDIATELY_PUBLISH'] = '自定义函数PRO_IMMEDIATELY_PUBLISH'
# check_words['PRO_INIT_USER_SYSROLE'] = '自定义函数PRO_INIT_USER_SYSROLE'
# check_words['PRO_JOB_DEL_HIST'] = '自定义函数PRO_JOB_DEL_HIST'
# check_words['PRO_JOB_DEL_HIST'] = '自定义函数PRO_JOB_DEL_HIST'
# check_words['PRO_JOB_DEL_HIST'] = '自定义函数PRO_JOB_DEL_HIST'
# check_words['PRO_JOB_GPS'] = '自定义函数PRO_JOB_GPS'
# check_words['PRO_JOB_RERUN'] = '自定义函数PRO_JOB_RERUN'
# check_words['PRO_LEAVE_PARKING_WASTE_TIME'] = '自定义函数PRO_LEAVE_PARKING_WASTE_TIME'
# check_words['PRO_MINUTE_JOB'] = '自定义函数PRO_MINUTE_JOB'
# check_words['PRO_MONITOR_RECOL'] = '自定义函数PRO_MONITOR_RECOL'
# check_words['PRO_MONITOR_RECOL'] = '自定义函数PRO_MONITOR_RECOL'
# check_words['PRO_OFF_TIME'] = '自定义函数PRO_OFF_TIME'
# check_words['PRO_ORGAN_ROUTE_JOB'] = '自定义函数PRO_ORGAN_ROUTE_JOB'
# check_words['PRO_PDI_STANDARDNODE_POOL'] = '自定义函数PRO_PDI_STANDARDNODE_POOL'
# check_words['PRO_PRI_USER_ACTIVE'] = '自定义函数PRO_PRI_USER_ACTIVE'
# check_words['PRO_PUBLISH_LOG'] = '自定义函数PRO_PUBLISH_LOG'
# check_words['PRO_REGULATION_DAILY_JOB'] = '自定义函数PRO_REGULATION_DAILY_JOB'
# check_words['PRO_REPORT_5MIN_JOB'] = '自定义函数PRO_REPORT_5MIN_JOB'
# check_words['PRO_REPORT_CHUNYUN_JOB'] = '自定义函数PRO_REPORT_CHUNYUN_JOB'
# check_words['PRO_REPORT_GDCD_JOB'] = '自定义函数PRO_REPORT_GDCD_JOB'
# check_words['PRO_REPORT_GDCD_JOB1'] = '自定义函数PRO_REPORT_GDCD_JOB1'
# check_words['PRO_REPORT_HALF_JOB'] = '自定义函数PRO_REPORT_HALF_JOB'
# check_words['PRO_REPORT_HOURLY_JOB'] = '自定义函数PRO_REPORT_HOURLY_JOB'
# check_words['PRO_REPORT_JOB'] = '自定义函数PRO_REPORT_JOB'
# check_words['PRO_REPORT_JOB'] = '自定义函数PRO_REPORT_JOB'
# check_words['PRO_REPORT_JOB_LOOP'] = '自定义函数PRO_REPORT_JOB_LOOP'
# check_words['PRO_REPORT_JOB_POOL'] = '自定义函数PRO_REPORT_JOB_POOL'
# check_words['PRO_REPORT_MONTHLY_JOB'] = '自定义函数PRO_REPORT_MONTHLY_JOB'
# check_words['PRO_REPORT_PTC_JOB'] = '自定义函数PRO_REPORT_PTC_JOB'
# check_words['PRO_REPORT_REBUILD'] = '自定义函数PRO_REPORT_REBUILD'
# check_words['PRO_REP_PROOF_TIME'] = '自定义函数PRO_REP_PROOF_TIME'
# check_words['PRO_REP_PROOF_TIME'] = '自定义函数PRO_REP_PROOF_TIME'
# check_words['PRO_REP_PROOF_TIME_BAK'] = '自定义函数PRO_REP_PROOF_TIME_BAK'
# check_words['PRO_REP_PROOF_TIME_BT'] = '自定义函数PRO_REP_PROOF_TIME_BT'
# check_words['PRO_REP_PROOF_TIME_BT'] = '自定义函数PRO_REP_PROOF_TIME_BT'
# check_words['PRO_REP_PROOF_TIME_MID'] = '自定义函数PRO_REP_PROOF_TIME_MID'
# check_words['PRO_REP_PROOF_TIME_MID'] = '自定义函数PRO_REP_PROOF_TIME_MID'
# check_words['PRO_REP_PROOF_TIME_MID_BAK'] = '自定义函数PRO_REP_PROOF_TIME_MID_BAK'
# check_words['PRO_REP_PROOF_TIME_MID_NEW'] = '自定义函数PRO_REP_PROOF_TIME_MID_NEW'
# check_words['PRO_REP_PROOF_TIME_MID_TEST'] = '自定义函数PRO_REP_PROOF_TIME_MID_TEST'
# check_words['PRO_REP_PROOF_TIME_MID_Y'] = '自定义函数PRO_REP_PROOF_TIME_MID_Y'
# check_words['PRO_REP_PROOF_TIME_NEW_TMP'] = '自定义函数PRO_REP_PROOF_TIME_NEW_TMP'
# check_words['PRO_REP_PROOF_TIME_TEST'] = '自定义函数PRO_REP_PROOF_TIME_TEST'
# check_words['PRO_REP_PROOF_TIME_TEST'] = '自定义函数PRO_REP_PROOF_TIME_TEST'
# check_words['PRO_REP_PROOF_TIME_Y'] = '自定义函数PRO_REP_PROOF_TIME_Y'
# check_words['PRO_REP_PROOF_TIME_YS'] = '自定义函数PRO_REP_PROOF_TIME_YS'
# check_words['PRO_REP_PROOF_TIME_YS'] = '自定义函数PRO_REP_PROOF_TIME_YS'
# check_words['PRO_REP_ROUTE_DURATION'] = '自定义函数PRO_REP_ROUTE_DURATION'
# check_words['PRO_REP_YJ_MONTH_STA'] = '自定义函数PRO_REP_YJ_MONTH_STA'
# check_words['PRO_ROUTECOPY_TOBS'] = '自定义函数PRO_ROUTECOPY_TOBS'
# check_words['PRO_ROUTERUNQUOTA_DAILY'] = '自定义函数PRO_ROUTERUNQUOTA_DAILY'
# check_words['PRO_ROUTERUNQUOTA_DAILY_GEN'] = '自定义函数PRO_ROUTERUNQUOTA_DAILY_GEN'
# check_words['PRO_ROUTERUNQUOTA_MONTHLY'] = '自定义函数PRO_ROUTERUNQUOTA_MONTHLY'
# check_words['PRO_ROUTERUN_DAILY_GENERATE'] = '自定义函数PRO_ROUTERUN_DAILY_GENERATE'
# check_words['PRO_ROUTESUB_MILE_ROUTESUB_ID'] = '自定义函数PRO_ROUTESUB_MILE_ROUTESUB_ID'
# check_words['PRO_ROUTESUB_MILE_ROUTESUB_ID2'] = '自定义函数PRO_ROUTESUB_MILE_ROUTESUB_ID2'
# check_words['PRO_ROUTETRIPFLUX'] = '自定义函数PRO_ROUTETRIPFLUX'
# check_words['PRO_ROUTE_BZ_STA_UPDATE'] = '自定义函数PRO_ROUTE_BZ_STA_UPDATE'
# check_words['PRO_ROUTE_DEL'] = '自定义函数PRO_ROUTE_DEL'
# check_words['PRO_ROUTE_FILE'] = '自定义函数PRO_ROUTE_FILE'
# check_words['PRO_ROUTE_FL_NAME'] = '自定义函数PRO_ROUTE_FL_NAME'
# check_words['PRO_ROUTE_MATCH_UPDATE'] = '自定义函数PRO_ROUTE_MATCH_UPDATE'
# check_words['PRO_ROUTE_PEAK_SPEED'] = '自定义函数PRO_ROUTE_PEAK_SPEED'
# check_words['PRO_ROUTE_PUBLISH'] = '自定义函数PRO_ROUTE_PUBLISH'
# check_words['PRO_ROUTE_PUBLISH_LOG'] = '自定义函数PRO_ROUTE_PUBLISH_LOG'
# check_words['PRO_ROUTE_PUBLISH_SCH'] = '自定义函数PRO_ROUTE_PUBLISH_SCH'
# check_words['PRO_ROUTE_REBUILD'] = '自定义函数PRO_ROUTE_REBUILD'
# check_words['PRO_ROUTE_STATION'] = '自定义函数PRO_ROUTE_STATION'
# check_words['PRO_ROUTE_STATION_OLD'] = '自定义函数PRO_ROUTE_STATION_OLD'
# check_words['PRO_ROUTE_STATION_RECOVER'] = '自定义函数PRO_ROUTE_STATION_RECOVER'
# check_words['PRO_ROUTE_WATER_MATCH'] = '自定义函数PRO_ROUTE_WATER_MATCH'
# check_words['PRO_SCHEDULE_AUTO'] = '自定义函数PRO_SCHEDULE_AUTO'
# check_words['PRO_SCHEDULE_AUTO_BEARING'] = '自定义函数PRO_SCHEDULE_AUTO_BEARING'
# check_words['PRO_SCHEDULE_AUTO_BEARING'] = '自定义函数PRO_SCHEDULE_AUTO_BEARING'
# check_words['PRO_SCHEDULE_DATA_UPDATE'] = '自定义函数PRO_SCHEDULE_DATA_UPDATE'
# check_words['PRO_SCHEDULE_DATA_UPDATE'] = '自定义函数PRO_SCHEDULE_DATA_UPDATE'
# check_words['PRO_SCHEDULE_PLAN_HOURLY_TEST'] = '自定义函数PRO_SCHEDULE_PLAN_HOURLY_TEST'
# check_words['PRO_SORT_ROUTE'] = '自定义函数PRO_SORT_ROUTE'
# check_words['PRO_STATION_FIX_KEY'] = '自定义函数PRO_STATION_FIX_KEY'
# check_words['PRO_STATION_FORECAST_COMPARE'] = '自定义函数PRO_STATION_FORECAST_COMPARE'
# check_words['PRO_STATION_FORECAST_STAT'] = '自定义函数PRO_STATION_FORECAST_STAT'
# check_words['PRO_STATION_FORECAST_STAT_TEST'] = '自定义函数PRO_STATION_FORECAST_STAT_TEST'
# check_words['PRO_STATION_ID_REPLACE'] = '自定义函数PRO_STATION_ID_REPLACE'
# check_words['PRO_STATION_MATCH'] = '自定义函数PRO_STATION_MATCH'
# check_words['PRO_STATION_MATCH_UPDATE'] = '自定义函数PRO_STATION_MATCH_UPDATE'
# check_words['PRO_STATION_NAME_UPDATE'] = '自定义函数PRO_STATION_NAME_UPDATE'
# check_words['PRO_STATION_PARA_JOB'] = '自定义函数PRO_STATION_PARA_JOB'
# check_words['PRO_STATION_PARA_UPDATE'] = '自定义函数PRO_STATION_PARA_UPDATE'
# check_words['PRO_STATION_PASSENGER_BY_EXCEL'] = '自定义函数PRO_STATION_PASSENGER_BY_EXCEL'
# check_words['PRO_STATION_PASSENGER_BY_EXCEL'] = '自定义函数PRO_STATION_PASSENGER_BY_EXCEL'
# check_words['PRO_STATION_REPLACE_FIX'] = '自定义函数PRO_STATION_REPLACE_FIX'
# check_words['PRO_STATION_REPLACE_ORI'] = '自定义函数PRO_STATION_REPLACE_ORI'
# check_words['PRO_STATION_REPLACE_RY'] = '自定义函数PRO_STATION_REPLACE_RY'
# check_words['PRO_STATION_UPDATE_ZC'] = '自定义函数PRO_STATION_UPDATE_ZC'
# check_words['PRO_STA_TERMINAL_WASTE_TIME'] = '自定义函数PRO_STA_TERMINAL_WASTE_TIME'
# check_words['PRO_SYNC_DRIVERLESS_PLAN'] = '自定义函数PRO_SYNC_DRIVERLESS_PLAN'
# check_words['PRO_SYNC_SCHEDULE_PLAN'] = '自定义函数PRO_SYNC_SCHEDULE_PLAN'
# check_words['PRO_SYNC_STATION_XW'] = '自定义函数PRO_SYNC_STATION_XW'
# check_words['PRO_SYN_TRIPLOG_ADREAL'] = '自定义函数PRO_SYN_TRIPLOG_ADREAL'
# check_words['PRO_TASK_NEXT_PRESET'] = '自定义函数PRO_TASK_NEXT_PRESET'
# check_words['PRO_TEMP_CHUCHELV'] = '自定义函数PRO_TEMP_CHUCHELV'
# check_words['PRO_TEST'] = '自定义函数PRO_TEST'
# check_words['PRO_TEST'] = '自定义函数PRO_TEST'
# check_words['PRO_TEST'] = '自定义函数PRO_TEST'
# check_words['PRO_TEST1'] = '自定义函数PRO_TEST1'
# check_words['PRO_TEST_20170501'] = '自定义函数PRO_TEST_20170501'
# check_words['PRO_TRIPLOG_ARRI'] = '自定义函数PRO_TRIPLOG_ARRI'
# check_words['PRO_TRIPLOG_ARRI'] = '自定义函数PRO_TRIPLOG_ARRI'
# check_words['PRO_TRIPLOG_ARRI_BAK'] = '自定义函数PRO_TRIPLOG_ARRI_BAK'
# check_words['PRO_TRIPLOG_ARRI_ZC'] = '自定义函数PRO_TRIPLOG_ARRI_ZC'
# check_words['PRO_TRIPLOG_DEL_EXPORT'] = '自定义函数PRO_TRIPLOG_DEL_EXPORT'
# check_words['PRO_TRIPLOG_FIXED'] = '自定义函数PRO_TRIPLOG_FIXED'
# check_words['PRO_TRIPLOG_GPS_EXPRESS'] = '自定义函数PRO_TRIPLOG_GPS_EXPRESS'
# check_words['PRO_TRIPLOG_PASSAGER'] = '自定义函数PRO_TRIPLOG_PASSAGER'
# check_words['PRO_TRIPLOG_SANQI'] = '自定义函数PRO_TRIPLOG_SANQI'
# check_words['PRO_TRIPLOG_SYNC'] = '自定义函数PRO_TRIPLOG_SYNC'
# check_words['PRO_TRIPLOG_SYNC_ORGAN'] = '自定义函数PRO_TRIPLOG_SYNC_ORGAN'
# check_words['PRO_TRIP_TIME_ROUTE'] = '自定义函数PRO_TRIP_TIME_ROUTE'
# check_words['PRO_TRIP_TIME_ROUTE_RUSH'] = '自定义函数PRO_TRIP_TIME_ROUTE_RUSH'
# check_words['PRO_UPDATE_PREPTRIP_MILEAGE'] = '自定义函数PRO_UPDATE_PREPTRIP_MILEAGE'
# check_words['PRO_UPDATE_PREPTRIP_MILEAGE2'] = '自定义函数PRO_UPDATE_PREPTRIP_MILEAGE2'
# check_words['PRO_UPDATE_PREPTRIP_MILEAGE_18'] = '自定义函数PRO_UPDATE_PREPTRIP_MILEAGE_18'
# check_words['PRO_UPDATE_PREPTRIP_MILEAGE_DC'] = '自定义函数PRO_UPDATE_PREPTRIP_MILEAGE_DC'
# check_words['PRO_UPDATE_PROOF_END_TIME'] = '自定义函数PRO_UPDATE_PROOF_END_TIME'
# check_words['PRO_UPDATE_PROOF_END_TIME'] = '自定义函数PRO_UPDATE_PROOF_END_TIME'
# check_words['PRO_UPDATE_PWD'] = '自定义函数PRO_UPDATE_PWD'
# check_words['PRO_UPDATE_PWD_BAK'] = '自定义函数PRO_UPDATE_PWD_BAK'
# check_words['PRO_UPDATE_TYPE_CST'] = '自定义函数PRO_UPDATE_TYPE_CST'
# check_words['REP_ROUTE_DAILY_BRT_MILEAGE'] = '自定义函数REP_ROUTE_DAILY_BRT_MILEAGE'
# check_words['RESET_INPROG_INDEX'] = '自定义函数RESET_INPROG_INDEX'
# check_words['RESET_UNDO_STAT'] = '自定义函数RESET_UNDO_STAT'
# check_words['RLM$CREATE_SCHEDULER_JOBS'] = '自定义函数RLM$CREATE_SCHEDULER_JOBS'
# check_words['RLM$PROCCLLGRPBY'] = '自定义函数RLM$PROCCLLGRPBY'
# check_words['RLM$PROCESSCOLLPREDS'] = '自定义函数RLM$PROCESSCOLLPREDS'
# check_words['SAVE_TTS_TS'] = '自定义函数SAVE_TTS_TS'
# check_words['SCHEDULER$_JOB_EVENT_HANDLER'] = '自定义函数SCHEDULER$_JOB_EVENT_HANDLER'
# check_words['SETEMUSERCONTEXT'] = '自定义函数SETEMUSERCONTEXT'
# check_words['SETEMVIEWUSERCONTEXT'] = '自定义函数SETEMVIEWUSERCONTEXT'
# check_words['SETMODFLG'] = '自定义函数SETMODFLG'
# check_words['SI_APPENDCLRHSTGR'] = '自定义函数SI_APPENDCLRHSTGR'
# check_words['SI_CHGCONTENT'] = '自定义函数SI_CHGCONTENT'
# check_words['SI_CONVERTFORMAT'] = '自定义函数SI_CONVERTFORMAT'
# check_words['SI_SETAVGCLRFTR'] = '自定义函数SI_SETAVGCLRFTR'
# check_words['SI_SETCLRHSTGRFTR'] = '自定义函数SI_SETCLRHSTGRFTR'
# check_words['SI_SETPSTNLCLRFTR'] = '自定义函数SI_SETPSTNLCLRFTR'
# check_words['SI_SETTEXTUREFTR'] = '自定义函数SI_SETTEXTUREFTR'
# check_words['SP_SYNC_ADINFO_0515_0516'] = '自定义函数SP_SYNC_ADINFO_0515_0516'
# check_words['SQL_TO_CSV'] = '自定义函数SQL_TO_CSV'
# check_words['SUBPTXT'] = '自定义函数SUBPTXT'
# check_words['SUBPTXT2'] = '自定义函数SUBPTXT2'
# check_words['SYNCRN'] = '自定义函数SYNCRN'
# check_words['TASK_OVERSPEED_YES_TMP'] = '自定义函数TASK_OVERSPEED_YES_TMP'
# check_words['TEST_PRO'] = '自定义函数TEST_PRO'
# check_words['UPDATE_ERROR_RAT'] = '自定义函数UPDATE_ERROR_RAT'
# check_words['UPDATE_ERROR_RATE'] = '自定义函数UPDATE_ERROR_RATE'
# check_words['VALIDATE_APEX'] = '自定义函数VALIDATE_APEX'
# check_words['VALIDATE_CONTEXT'] = '自定义函数VALIDATE_CONTEXT'
# check_words['VALIDATE_EXF'] = '自定义函数VALIDATE_EXF'
# check_words['VALIDATE_ORDIM'] = '自定义函数VALIDATE_ORDIM'
# check_words['VALIDATE_OWM'] = '自定义函数VALIDATE_OWM'
# check_words['VALIDATE_OWM'] = '自定义函数VALIDATE_OWM'
# check_words['VALIDATE_RUL'] = '自定义函数VALIDATE_RUL'
# check_words['VALIDATE_SDO'] = '自定义函数VALIDATE_SDO'
# check_words['WWV_FLOW_COPY'] = '自定义函数WWV_FLOW_COPY'
# check_words['WWV_FLOW_COPY_BUTTON'] = '自定义函数WWV_FLOW_COPY_BUTTON'
# check_words['WWV_FLOW_COPY_LOV'] = '自定义函数WWV_FLOW_COPY_LOV'
# check_words['WWV_FLOW_COPY_PAGE_ITEM'] = '自定义函数WWV_FLOW_COPY_PAGE_ITEM'
# check_words['WWV_FLOW_INIT_HTP_BUFFER'] = '自定义函数WWV_FLOW_INIT_HTP_BUFFER'
# check_words['WWV_FLOW_SEED_TRANSLATIONS'] = '自定义函数WWV_FLOW_SEED_TRANSLATIONS'
# check_words['WWV_FLOW_SYNC_TRANSLATIONS'] = '自定义函数WWV_FLOW_SYNC_TRANSLATIONS'
# check_words['XDB$INITXDBSCHEMA'] = '自定义函数XDB$INITXDBSCHEMA'
# check_words['XDB$PATCHUPDELETESCHEMA'] = '自定义函数XDB$PATCHUPDELETESCHEMA'
# check_words['XDB$PATCHUPSCHEMA'] = '自定义函数XDB$PATCHUPSCHEMA'
# check_words['XDB_DATASTORE_PROC'] = '自定义函数XDB_DATASTORE_PROC'
# check_words['XMLVALIDATE'] = '自定义函数XMLVALIDATE'
# check_words['XOQ_VALIDATE'] = '自定义函数XOQ_VALIDATE'
# check_words['Z'] = '自定义函数Z'
# check_words['update_error_rate'] = '自定义函数update_error_rate'
# check_words['pkg_schedule_dispatch_plan.pro_dy_schedule_plan'] = 'pkg_schedule_dispatch_plan.pro_dy_schedule_plan'
# check_words['pkg_schedule_dispatch_plan.pro_timetable_plan'] = 'pkg_schedule_dispatch_plan.pro_timetable_plan'
# check_words['PKG_SCHEDULE_AUTO_BEARING.PRO_REP_STATION_PASSENGER_B'] = 'PKG_SCHEDULE_AUTO_BEARING.PRO_REP_STATION_PASSENGER_B'


results = {}


def get_dir_info(filepath: str, path: str = ''):
    files = os.listdir(filepath)
    for fi in files:
        name = path + fi
        fi_d = os.path.join(filepath, fi)
        if os.path.isdir(fi_d):
            get_dir_info(fi_d, name + '.')
        else:
            if extension is None or fi.endswith(extension):
                if fi.endswith('.java'):
                    get_java_info(fi_d, name)
                elif fi.endswith('.xml'):
                    get_xml_info(fi_d, name)


def get_xml_info(path: str, name: str):
    tree = ET.parse(path)
    root = tree.getroot()
    for child in root:
        if child.tag.lower() in ('select', 'update', 'delete', 'insert'):
            function_name = name + '#' + child.attrib['id']
            text = get_text_xml(child)
            function_analyze(function_name, text, True)


def get_text_xml(item: ET.Element):
    text_all = item.text
    for child in item:
        text_all += get_text_xml(child)
    return str(text_all)


def get_java_info(path: str, name: str):
    with open(path, 'r', encoding='utf-8') as f:
        text = f.read()
        text = text[text.find('{') + 1:text.rfind('}')]
        begin_index = 0
        while True:
            function_name, begin, end = get_first_function(text, begin_index)
            if len(function_name) > 0:
                function_analyze(name + '#' + function_name, text[begin + 1:end])
            begin_index = end
            if end < 0:
                break


def get_first_function(text: str, begin_index: int = 0):
    begin = text.find('{', begin_index)
    name = ''
    end = -1
    if begin >= 0:
        end = text.find('}', begin)
        begin_tmp = begin
        while True:
            begin_in = text.find('{', begin_tmp + 1)
            begin_tmp = begin_in
            if 0 <= begin_in < end:
                end = text.find('}', end + 1)
            else:
                break
        if end >= 0:
            name_end = text.rfind('(', begin_index, begin)
            if name_end >= 0:
                name_check_list = text[begin_index:name_end].split(' ')
                if len(name_check_list) > 0:
                    name = name_check_list[len(name_check_list) - 1]
    return name, begin, end


def function_analyze(name: str, code: str, is_xml: bool = False):
    base_flag = False
    if check_base_word is None:
        base_flag = True
    else:
        for bw in check_base_word:
            if bw in code:
                base_flag = True
    if base_flag:
        check = set()
        words = {}
        if 'callProDispatch' in name:
            pass
        if is_xml:
            code_list = [code]
        else:
            code_strings = code.split('"')
            code_list = code_strings[1::2]
        if check_words is None or len(check_words) < 1:
            for code_string in code_list:
                check.add(code_string)
        else:
            for check_word, check_name in check_words.items():
                for code_string in code_list:
                    if check_word.lower() in code_string.lower().replace(' ', ''):
                        check.add(code_string)
                        if check_name in words:
                            words[check_name] = words[check_name] + 1
                        else:
                            words[check_name] = 1
        if len(check) > 0:
            word = ''
            global results
            for w, num in words.items():
                if w not in results:
                    results[w] = []

                for i in range(num):
                    results[w].append(name)
                ww = w
                # ww = w + '-' + str(num)
                if word:
                    word = word + '、' + ww
                else:
                    word = ww
            check_all = ''
            for c in check:
                # print(c)
                check_all = check_all + c + '\t'
            print(word + '\t' + name + '\t' + str(len(check)) + '\t' + check_all)


get_dir_info(dir_base)
for name, result in results.items():
    code_all = ''
    code_all_list = {}
    for code_name in result:
        if code_name in code_all_list:
            code_all_list[code_name] += 1
        else:
            code_all_list[code_name] = 1
    for item, num in code_all_list.items():
        if num > 1:
            code_all += item + '-' + str(num) + '、'
        else:
            code_all += item + '、'
    print(name + '(共' + str(len(result)) + '处)\t' + code_all[0:len(code_all)-1])
